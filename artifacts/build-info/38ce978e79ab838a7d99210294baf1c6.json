{
	"id": "38ce978e79ab838a7d99210294baf1c6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract TestToken is ERC20 {\n    uint8 private _customDecimals;\n\n    constructor(string memory name, string memory symbol, uint8 decimals_, uint256 initialSupply) ERC20(name, symbol) {\n        _customDecimals = decimals_;\n        _mint(msg.sender, initialSupply * (10 ** decimals_));\n    }\n\n    function decimals() public view override returns (uint8) {\n        return _customDecimals;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token.sol": {
				"TestToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token.sol\":115:509  contract TestToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"token.sol\":185:405  constructor(string memory name, string memory symbol, uint8 decimals_, uint256 initialSupply) ERC20(name, symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"token.sol\":285:289  name */\n  dup4\n    /* \"token.sol\":291:297  symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"token.sol\":327:336  decimals_ */\n  dup2\n    /* \"token.sol\":309:324  _customDecimals */\n  0x05\n  0x00\n    /* \"token.sol\":309:336  _customDecimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"token.sol\":346:398  _mint(msg.sender, initialSupply * (10 ** decimals_)) */\n  tag_11\n    /* \"token.sol\":352:362  msg.sender */\n  caller\n    /* \"token.sol\":387:396  decimals_ */\n  dup4\n    /* \"token.sol\":381:383  10 */\n  0x0a\n    /* \"token.sol\":381:396  10 ** decimals_ */\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"token.sol\":364:377  initialSupply */\n  dup4\n    /* \"token.sol\":364:397  initialSupply * (10 ** decimals_) */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"token.sol\":346:351  _mint */\n  shl(0x20, tag_16)\n    /* \"token.sol\":346:398  _mint(msg.sender, initialSupply * (10 ** decimals_)) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"token.sol\":185:405  constructor(string memory name, string memory symbol, uint8 decimals_, uint256 initialSupply) ERC20(name, symbol) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"token.sol\":115:509  contract TestToken is ERC20 {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_19\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_22\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_23)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_28)\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_33)\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_36:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_37:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_38:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_39:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_40:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_41:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_42:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_43:\n    /* \"#utility.yul\":957:984   */\n  tag_90\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_41\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_92\n  tag_42\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1030:1118   */\ntag_91:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_44:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_94\n  tag_36\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_95\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_43\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_45:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_98\n  tag_42\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1434:1490   */\ntag_97:\n    /* \"#utility.yul\":1508:1537   */\n  tag_99\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_41\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_46:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_47:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_102\n    /* \"#utility.yul\":1885:1934   */\n  tag_103\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_45\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1869:1935   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_105\n  tag_40\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2010:2122   */\ntag_104:\n    /* \"#utility.yul\":2131:2183   */\n  tag_106\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_46\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_48:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_109\n  tag_39\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2292:2414   */\ntag_108:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_110\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_47\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2656   */\ntag_49:\n    /* \"#utility.yul\":2605:2612   */\n  0x00\n    /* \"#utility.yul\":2645:2649   */\n  0xff\n    /* \"#utility.yul\":2638:2643   */\n  dup3\n    /* \"#utility.yul\":2634:2650   */\n  and\n    /* \"#utility.yul\":2623:2650   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2656   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2662:2780   */\ntag_50:\n    /* \"#utility.yul\":2733:2755   */\n  tag_113\n    /* \"#utility.yul\":2749:2754   */\n  dup2\n    /* \"#utility.yul\":2733:2755   */\n  tag_49\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2726:2731   */\n  dup2\n    /* \"#utility.yul\":2723:2756   */\n  eq\n    /* \"#utility.yul\":2713:2774   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":2770:2771   */\n  0x00\n    /* \"#utility.yul\":2767:2768   */\n  0x00\n    /* \"#utility.yul\":2760:2772   */\n  revert\n    /* \"#utility.yul\":2713:2774   */\ntag_114:\n    /* \"#utility.yul\":2662:2780   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2786:2925   */\ntag_51:\n    /* \"#utility.yul\":2841:2846   */\n  0x00\n    /* \"#utility.yul\":2872:2878   */\n  dup2\n    /* \"#utility.yul\":2866:2879   */\n  mload\n    /* \"#utility.yul\":2857:2879   */\n  swap1\n  pop\n    /* \"#utility.yul\":2888:2919   */\n  tag_116\n    /* \"#utility.yul\":2913:2918   */\n  dup2\n    /* \"#utility.yul\":2888:2919   */\n  tag_50\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2786:2925   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2931:3008   */\ntag_52:\n    /* \"#utility.yul\":2968:2975   */\n  0x00\n    /* \"#utility.yul\":2997:3002   */\n  dup2\n    /* \"#utility.yul\":2986:3002   */\n  swap1\n  pop\n    /* \"#utility.yul\":2931:3008   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3014:3136   */\ntag_53:\n    /* \"#utility.yul\":3087:3111   */\n  tag_119\n    /* \"#utility.yul\":3105:3110   */\n  dup2\n    /* \"#utility.yul\":3087:3111   */\n  tag_52\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3080:3085   */\n  dup2\n    /* \"#utility.yul\":3077:3112   */\n  eq\n    /* \"#utility.yul\":3067:3130   */\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3126:3127   */\n  0x00\n    /* \"#utility.yul\":3123:3124   */\n  0x00\n    /* \"#utility.yul\":3116:3128   */\n  revert\n    /* \"#utility.yul\":3067:3130   */\ntag_120:\n    /* \"#utility.yul\":3014:3136   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3142:3285   */\ntag_54:\n    /* \"#utility.yul\":3199:3204   */\n  0x00\n    /* \"#utility.yul\":3230:3236   */\n  dup2\n    /* \"#utility.yul\":3224:3237   */\n  mload\n    /* \"#utility.yul\":3215:3237   */\n  swap1\n  pop\n    /* \"#utility.yul\":3246:3279   */\n  tag_122\n    /* \"#utility.yul\":3273:3278   */\n  dup2\n    /* \"#utility.yul\":3246:3279   */\n  tag_53\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3142:3285   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3291:4453   */\ntag_3:\n    /* \"#utility.yul\":3406:3412   */\n  0x00\n    /* \"#utility.yul\":3414:3420   */\n  0x00\n    /* \"#utility.yul\":3422:3428   */\n  0x00\n    /* \"#utility.yul\":3430:3436   */\n  0x00\n    /* \"#utility.yul\":3479:3482   */\n  0x80\n    /* \"#utility.yul\":3467:3476   */\n  dup6\n    /* \"#utility.yul\":3458:3465   */\n  dup8\n    /* \"#utility.yul\":3454:3477   */\n  sub\n    /* \"#utility.yul\":3450:3483   */\n  slt\n    /* \"#utility.yul\":3447:3567   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":3486:3565   */\n  tag_125\n  tag_37\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3447:3567   */\ntag_124:\n    /* \"#utility.yul\":3627:3628   */\n  0x00\n    /* \"#utility.yul\":3616:3625   */\n  dup6\n    /* \"#utility.yul\":3612:3629   */\n  add\n    /* \"#utility.yul\":3606:3630   */\n  mload\n    /* \"#utility.yul\":3657:3675   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3649:3655   */\n  dup2\n    /* \"#utility.yul\":3646:3676   */\n  gt\n    /* \"#utility.yul\":3643:3760   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":3679:3758   */\n  tag_127\n  tag_38\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3643:3760   */\ntag_126:\n    /* \"#utility.yul\":3784:3858   */\n  tag_128\n    /* \"#utility.yul\":3850:3857   */\n  dup8\n    /* \"#utility.yul\":3841:3847   */\n  dup3\n    /* \"#utility.yul\":3830:3839   */\n  dup9\n    /* \"#utility.yul\":3826:3848   */\n  add\n    /* \"#utility.yul\":3784:3858   */\n  tag_48\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3774:3858   */\n  swap5\n  pop\n    /* \"#utility.yul\":3577:3868   */\n  pop\n    /* \"#utility.yul\":3928:3930   */\n  0x20\n    /* \"#utility.yul\":3917:3926   */\n  dup6\n    /* \"#utility.yul\":3913:3931   */\n  add\n    /* \"#utility.yul\":3907:3932   */\n  mload\n    /* \"#utility.yul\":3959:3977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3951:3957   */\n  dup2\n    /* \"#utility.yul\":3948:3978   */\n  gt\n    /* \"#utility.yul\":3945:4062   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":3981:4060   */\n  tag_130\n  tag_38\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3945:4062   */\ntag_129:\n    /* \"#utility.yul\":4086:4160   */\n  tag_131\n    /* \"#utility.yul\":4152:4159   */\n  dup8\n    /* \"#utility.yul\":4143:4149   */\n  dup3\n    /* \"#utility.yul\":4132:4141   */\n  dup9\n    /* \"#utility.yul\":4128:4150   */\n  add\n    /* \"#utility.yul\":4086:4160   */\n  tag_48\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4076:4160   */\n  swap4\n  pop\n    /* \"#utility.yul\":3878:4170   */\n  pop\n    /* \"#utility.yul\":4209:4211   */\n  0x40\n    /* \"#utility.yul\":4235:4297   */\n  tag_132\n    /* \"#utility.yul\":4289:4296   */\n  dup8\n    /* \"#utility.yul\":4280:4286   */\n  dup3\n    /* \"#utility.yul\":4269:4278   */\n  dup9\n    /* \"#utility.yul\":4265:4287   */\n  add\n    /* \"#utility.yul\":4235:4297   */\n  tag_51\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4225:4297   */\n  swap3\n  pop\n    /* \"#utility.yul\":4180:4307   */\n  pop\n    /* \"#utility.yul\":4346:4348   */\n  0x60\n    /* \"#utility.yul\":4372:4436   */\n  tag_133\n    /* \"#utility.yul\":4428:4435   */\n  dup8\n    /* \"#utility.yul\":4419:4425   */\n  dup3\n    /* \"#utility.yul\":4408:4417   */\n  dup9\n    /* \"#utility.yul\":4404:4426   */\n  add\n    /* \"#utility.yul\":4372:4436   */\n  tag_54\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4362:4436   */\n  swap2\n  pop\n    /* \"#utility.yul\":4317:4446   */\n  pop\n    /* \"#utility.yul\":3291:4453   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4459:4558   */\ntag_55:\n    /* \"#utility.yul\":4511:4517   */\n  0x00\n    /* \"#utility.yul\":4545:4550   */\n  dup2\n    /* \"#utility.yul\":4539:4551   */\n  mload\n    /* \"#utility.yul\":4529:4551   */\n  swap1\n  pop\n    /* \"#utility.yul\":4459:4558   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4564:4744   */\ntag_56:\n    /* \"#utility.yul\":4612:4689   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4609:4610   */\n  0x00\n    /* \"#utility.yul\":4602:4690   */\n  mstore\n    /* \"#utility.yul\":4709:4713   */\n  0x22\n    /* \"#utility.yul\":4706:4707   */\n  0x04\n    /* \"#utility.yul\":4699:4714   */\n  mstore\n    /* \"#utility.yul\":4733:4737   */\n  0x24\n    /* \"#utility.yul\":4730:4731   */\n  0x00\n    /* \"#utility.yul\":4723:4738   */\n  revert\n    /* \"#utility.yul\":4750:5070   */\ntag_57:\n    /* \"#utility.yul\":4794:4800   */\n  0x00\n    /* \"#utility.yul\":4831:4832   */\n  0x02\n    /* \"#utility.yul\":4825:4829   */\n  dup3\n    /* \"#utility.yul\":4821:4833   */\n  div\n    /* \"#utility.yul\":4811:4833   */\n  swap1\n  pop\n    /* \"#utility.yul\":4878:4879   */\n  0x01\n    /* \"#utility.yul\":4872:4876   */\n  dup3\n    /* \"#utility.yul\":4868:4880   */\n  and\n    /* \"#utility.yul\":4899:4917   */\n  dup1\n    /* \"#utility.yul\":4889:4970   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":4955:4959   */\n  0x7f\n    /* \"#utility.yul\":4947:4953   */\n  dup3\n    /* \"#utility.yul\":4943:4960   */\n  and\n    /* \"#utility.yul\":4933:4960   */\n  swap2\n  pop\n    /* \"#utility.yul\":4889:4970   */\ntag_137:\n    /* \"#utility.yul\":5017:5019   */\n  0x20\n    /* \"#utility.yul\":5009:5015   */\n  dup3\n    /* \"#utility.yul\":5006:5020   */\n  lt\n    /* \"#utility.yul\":4986:5004   */\n  dup2\n    /* \"#utility.yul\":4983:5021   */\n  sub\n    /* \"#utility.yul\":4980:5064   */\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5036:5054   */\n  tag_139\n  tag_56\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4980:5064   */\ntag_138:\n    /* \"#utility.yul\":4801:5070   */\n  pop\n    /* \"#utility.yul\":4750:5070   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5076:5217   */\ntag_58:\n    /* \"#utility.yul\":5125:5129   */\n  0x00\n    /* \"#utility.yul\":5148:5151   */\n  dup2\n    /* \"#utility.yul\":5140:5151   */\n  swap1\n  pop\n    /* \"#utility.yul\":5171:5174   */\n  dup2\n    /* \"#utility.yul\":5168:5169   */\n  0x00\n    /* \"#utility.yul\":5161:5175   */\n  mstore\n    /* \"#utility.yul\":5205:5209   */\n  0x20\n    /* \"#utility.yul\":5202:5203   */\n  0x00\n    /* \"#utility.yul\":5192:5210   */\n  keccak256\n    /* \"#utility.yul\":5184:5210   */\n  swap1\n  pop\n    /* \"#utility.yul\":5076:5217   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5223:5316   */\ntag_59:\n    /* \"#utility.yul\":5260:5266   */\n  0x00\n    /* \"#utility.yul\":5307:5309   */\n  0x20\n    /* \"#utility.yul\":5302:5304   */\n  0x1f\n    /* \"#utility.yul\":5295:5300   */\n  dup4\n    /* \"#utility.yul\":5291:5305   */\n  add\n    /* \"#utility.yul\":5287:5310   */\n  div\n    /* \"#utility.yul\":5277:5310   */\n  swap1\n  pop\n    /* \"#utility.yul\":5223:5316   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5322:5429   */\ntag_60:\n    /* \"#utility.yul\":5366:5374   */\n  0x00\n    /* \"#utility.yul\":5416:5421   */\n  dup3\n    /* \"#utility.yul\":5410:5414   */\n  dup3\n    /* \"#utility.yul\":5406:5422   */\n  shl\n    /* \"#utility.yul\":5385:5422   */\n  swap1\n  pop\n    /* \"#utility.yul\":5322:5429   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5435:5828   */\ntag_61:\n    /* \"#utility.yul\":5504:5510   */\n  0x00\n    /* \"#utility.yul\":5554:5555   */\n  0x08\n    /* \"#utility.yul\":5542:5552   */\n  dup4\n    /* \"#utility.yul\":5538:5556   */\n  mul\n    /* \"#utility.yul\":5577:5674   */\n  tag_144\n    /* \"#utility.yul\":5607:5673   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5596:5605   */\n  dup3\n    /* \"#utility.yul\":5577:5674   */\n  tag_60\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5695:5734   */\n  tag_145\n    /* \"#utility.yul\":5725:5733   */\n  dup7\n    /* \"#utility.yul\":5714:5723   */\n  dup4\n    /* \"#utility.yul\":5695:5734   */\n  tag_60\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5683:5734   */\n  swap6\n  pop\n    /* \"#utility.yul\":5767:5771   */\n  dup1\n    /* \"#utility.yul\":5763:5772   */\n  not\n    /* \"#utility.yul\":5756:5761   */\n  dup5\n    /* \"#utility.yul\":5752:5773   */\n  and\n    /* \"#utility.yul\":5743:5773   */\n  swap4\n  pop\n    /* \"#utility.yul\":5816:5820   */\n  dup1\n    /* \"#utility.yul\":5806:5814   */\n  dup7\n    /* \"#utility.yul\":5802:5821   */\n  and\n    /* \"#utility.yul\":5795:5800   */\n  dup5\n    /* \"#utility.yul\":5792:5822   */\n  or\n    /* \"#utility.yul\":5782:5822   */\n  swap3\n  pop\n    /* \"#utility.yul\":5511:5828   */\n  pop\n  pop\n    /* \"#utility.yul\":5435:5828   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5834:5894   */\ntag_62:\n    /* \"#utility.yul\":5862:5865   */\n  0x00\n    /* \"#utility.yul\":5883:5888   */\n  dup2\n    /* \"#utility.yul\":5876:5888   */\n  swap1\n  pop\n    /* \"#utility.yul\":5834:5894   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5900:6042   */\ntag_63:\n    /* \"#utility.yul\":5950:5959   */\n  0x00\n    /* \"#utility.yul\":5983:6036   */\n  tag_148\n    /* \"#utility.yul\":6001:6035   */\n  tag_149\n    /* \"#utility.yul\":6010:6034   */\n  tag_150\n    /* \"#utility.yul\":6028:6033   */\n  dup5\n    /* \"#utility.yul\":6010:6034   */\n  tag_52\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6001:6035   */\n  tag_62\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5983:6036   */\n  tag_52\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5970:6036   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:6042   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6048:6123   */\ntag_64:\n    /* \"#utility.yul\":6091:6094   */\n  0x00\n    /* \"#utility.yul\":6112:6117   */\n  dup2\n    /* \"#utility.yul\":6105:6117   */\n  swap1\n  pop\n    /* \"#utility.yul\":6048:6123   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6129:6398   */\ntag_65:\n    /* \"#utility.yul\":6239:6278   */\n  tag_153\n    /* \"#utility.yul\":6270:6277   */\n  dup4\n    /* \"#utility.yul\":6239:6278   */\n  tag_63\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6300:6391   */\n  tag_154\n    /* \"#utility.yul\":6349:6390   */\n  tag_155\n    /* \"#utility.yul\":6373:6389   */\n  dup3\n    /* \"#utility.yul\":6349:6390   */\n  tag_64\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6341:6347   */\n  dup5\n    /* \"#utility.yul\":6334:6338   */\n  dup5\n    /* \"#utility.yul\":6328:6339   */\n  sload\n    /* \"#utility.yul\":6300:6391   */\n  tag_61\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6294:6298   */\n  dup3\n    /* \"#utility.yul\":6287:6392   */\n  sstore\n    /* \"#utility.yul\":6205:6398   */\n  pop\n    /* \"#utility.yul\":6129:6398   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6404:6477   */\ntag_66:\n    /* \"#utility.yul\":6449:6452   */\n  0x00\n    /* \"#utility.yul\":6470:6471   */\n  0x00\n    /* \"#utility.yul\":6463:6471   */\n  swap1\n  pop\n    /* \"#utility.yul\":6404:6477   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6483:6672   */\ntag_67:\n    /* \"#utility.yul\":6560:6592   */\n  tag_158\n  tag_66\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6601:6666   */\n  tag_159\n    /* \"#utility.yul\":6659:6665   */\n  dup2\n    /* \"#utility.yul\":6651:6657   */\n  dup5\n    /* \"#utility.yul\":6645:6649   */\n  dup5\n    /* \"#utility.yul\":6601:6666   */\n  tag_65\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6536:6672   */\n  pop\n    /* \"#utility.yul\":6483:6672   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6678:6864   */\ntag_68:\n    /* \"#utility.yul\":6738:6858   */\ntag_161:\n    /* \"#utility.yul\":6755:6758   */\n  dup2\n    /* \"#utility.yul\":6748:6753   */\n  dup2\n    /* \"#utility.yul\":6745:6759   */\n  lt\n    /* \"#utility.yul\":6738:6858   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":6809:6848   */\n  tag_164\n    /* \"#utility.yul\":6846:6847   */\n  0x00\n    /* \"#utility.yul\":6839:6844   */\n  dup3\n    /* \"#utility.yul\":6809:6848   */\n  tag_67\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6782:6783   */\n  0x01\n    /* \"#utility.yul\":6775:6780   */\n  dup2\n    /* \"#utility.yul\":6771:6784   */\n  add\n    /* \"#utility.yul\":6762:6784   */\n  swap1\n  pop\n    /* \"#utility.yul\":6738:6858   */\n  jump(tag_161)\ntag_163:\n    /* \"#utility.yul\":6678:6864   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6870:7413   */\ntag_69:\n    /* \"#utility.yul\":6971:6973   */\n  0x1f\n    /* \"#utility.yul\":6966:6969   */\n  dup3\n    /* \"#utility.yul\":6963:6974   */\n  gt\n    /* \"#utility.yul\":6960:7406   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":7005:7043   */\n  tag_167\n    /* \"#utility.yul\":7037:7042   */\n  dup2\n    /* \"#utility.yul\":7005:7043   */\n  tag_58\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7089:7118   */\n  tag_168\n    /* \"#utility.yul\":7107:7117   */\n  dup5\n    /* \"#utility.yul\":7089:7118   */\n  tag_59\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7079:7087   */\n  dup2\n    /* \"#utility.yul\":7075:7119   */\n  add\n    /* \"#utility.yul\":7272:7274   */\n  0x20\n    /* \"#utility.yul\":7260:7270   */\n  dup6\n    /* \"#utility.yul\":7257:7275   */\n  lt\n    /* \"#utility.yul\":7254:7303   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":7293:7301   */\n  dup2\n    /* \"#utility.yul\":7278:7301   */\n  swap1\n  pop\n    /* \"#utility.yul\":7254:7303   */\ntag_169:\n    /* \"#utility.yul\":7316:7396   */\n  tag_170\n    /* \"#utility.yul\":7372:7394   */\n  tag_171\n    /* \"#utility.yul\":7390:7393   */\n  dup6\n    /* \"#utility.yul\":7372:7394   */\n  tag_59\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7362:7370   */\n  dup4\n    /* \"#utility.yul\":7358:7395   */\n  add\n    /* \"#utility.yul\":7345:7356   */\n  dup3\n    /* \"#utility.yul\":7316:7396   */\n  tag_68\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6975:7406   */\n  pop\n  pop\n    /* \"#utility.yul\":6960:7406   */\ntag_166:\n    /* \"#utility.yul\":6870:7413   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7419:7536   */\ntag_70:\n    /* \"#utility.yul\":7473:7481   */\n  0x00\n    /* \"#utility.yul\":7523:7528   */\n  dup3\n    /* \"#utility.yul\":7517:7521   */\n  dup3\n    /* \"#utility.yul\":7513:7529   */\n  shr\n    /* \"#utility.yul\":7492:7529   */\n  swap1\n  pop\n    /* \"#utility.yul\":7419:7536   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7542:7711   */\ntag_71:\n    /* \"#utility.yul\":7586:7592   */\n  0x00\n    /* \"#utility.yul\":7619:7670   */\n  tag_174\n    /* \"#utility.yul\":7667:7668   */\n  0x00\n    /* \"#utility.yul\":7663:7669   */\n  not\n    /* \"#utility.yul\":7655:7660   */\n  dup5\n    /* \"#utility.yul\":7652:7653   */\n  0x08\n    /* \"#utility.yul\":7648:7661   */\n  mul\n    /* \"#utility.yul\":7619:7670   */\n  tag_70\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7615:7671   */\n  not\n    /* \"#utility.yul\":7700:7704   */\n  dup1\n    /* \"#utility.yul\":7694:7698   */\n  dup4\n    /* \"#utility.yul\":7690:7705   */\n  and\n    /* \"#utility.yul\":7680:7705   */\n  swap2\n  pop\n    /* \"#utility.yul\":7593:7711   */\n  pop\n    /* \"#utility.yul\":7542:7711   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7716:8011   */\ntag_72:\n    /* \"#utility.yul\":7792:7796   */\n  0x00\n    /* \"#utility.yul\":7938:7967   */\n  tag_176\n    /* \"#utility.yul\":7963:7966   */\n  dup4\n    /* \"#utility.yul\":7957:7961   */\n  dup4\n    /* \"#utility.yul\":7938:7967   */\n  tag_71\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7930:7967   */\n  swap2\n  pop\n    /* \"#utility.yul\":8000:8003   */\n  dup3\n    /* \"#utility.yul\":7997:7998   */\n  0x02\n    /* \"#utility.yul\":7993:8004   */\n  mul\n    /* \"#utility.yul\":7987:7991   */\n  dup3\n    /* \"#utility.yul\":7984:8005   */\n  or\n    /* \"#utility.yul\":7976:8005   */\n  swap1\n  pop\n    /* \"#utility.yul\":7716:8011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8016:9411   */\ntag_8:\n    /* \"#utility.yul\":8133:8170   */\n  tag_178\n    /* \"#utility.yul\":8166:8169   */\n  dup3\n    /* \"#utility.yul\":8133:8170   */\n  tag_55\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8235:8253   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8227:8233   */\n  dup2\n    /* \"#utility.yul\":8224:8254   */\n  gt\n    /* \"#utility.yul\":8221:8277   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8257:8275   */\n  tag_180\n  tag_42\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8221:8277   */\ntag_179:\n    /* \"#utility.yul\":8301:8339   */\n  tag_181\n    /* \"#utility.yul\":8333:8337   */\n  dup3\n    /* \"#utility.yul\":8327:8338   */\n  sload\n    /* \"#utility.yul\":8301:8339   */\n  tag_57\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8386:8453   */\n  tag_182\n    /* \"#utility.yul\":8446:8452   */\n  dup3\n    /* \"#utility.yul\":8438:8444   */\n  dup3\n    /* \"#utility.yul\":8432:8436   */\n  dup6\n    /* \"#utility.yul\":8386:8453   */\n  tag_69\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8480:8481   */\n  0x00\n    /* \"#utility.yul\":8504:8508   */\n  0x20\n    /* \"#utility.yul\":8491:8508   */\n  swap1\n  pop\n    /* \"#utility.yul\":8536:8538   */\n  0x1f\n    /* \"#utility.yul\":8528:8534   */\n  dup4\n    /* \"#utility.yul\":8525:8539   */\n  gt\n    /* \"#utility.yul\":8553:8554   */\n  0x01\n    /* \"#utility.yul\":8548:9166   */\n  dup2\n  eq\n  tag_184\n  jumpi\n    /* \"#utility.yul\":9210:9211   */\n  0x00\n    /* \"#utility.yul\":9227:9233   */\n  dup5\n    /* \"#utility.yul\":9224:9301   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":9276:9285   */\n  dup3\n    /* \"#utility.yul\":9271:9274   */\n  dup8\n    /* \"#utility.yul\":9267:9286   */\n  add\n    /* \"#utility.yul\":9261:9287   */\n  mload\n    /* \"#utility.yul\":9252:9287   */\n  swap1\n  pop\n    /* \"#utility.yul\":9224:9301   */\ntag_185:\n    /* \"#utility.yul\":9327:9394   */\n  tag_186\n    /* \"#utility.yul\":9387:9393   */\n  dup6\n    /* \"#utility.yul\":9380:9385   */\n  dup3\n    /* \"#utility.yul\":9327:9394   */\n  tag_72\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9321:9325   */\n  dup7\n    /* \"#utility.yul\":9314:9395   */\n  sstore\n    /* \"#utility.yul\":9183:9405   */\n  pop\n    /* \"#utility.yul\":8518:9405   */\n  jump(tag_183)\n    /* \"#utility.yul\":8548:9166   */\ntag_184:\n    /* \"#utility.yul\":8600:8604   */\n  0x1f\n    /* \"#utility.yul\":8596:8605   */\n  not\n    /* \"#utility.yul\":8588:8594   */\n  dup5\n    /* \"#utility.yul\":8584:8606   */\n  and\n    /* \"#utility.yul\":8634:8671   */\n  tag_187\n    /* \"#utility.yul\":8666:8670   */\n  dup7\n    /* \"#utility.yul\":8634:8671   */\n  tag_58\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8693:8694   */\n  0x00\n    /* \"#utility.yul\":8707:8915   */\ntag_188:\n    /* \"#utility.yul\":8721:8728   */\n  dup3\n    /* \"#utility.yul\":8718:8719   */\n  dup2\n    /* \"#utility.yul\":8715:8729   */\n  lt\n    /* \"#utility.yul\":8707:8915   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":8800:8809   */\n  dup5\n    /* \"#utility.yul\":8795:8798   */\n  dup10\n    /* \"#utility.yul\":8791:8810   */\n  add\n    /* \"#utility.yul\":8785:8811   */\n  mload\n    /* \"#utility.yul\":8777:8783   */\n  dup3\n    /* \"#utility.yul\":8770:8812   */\n  sstore\n    /* \"#utility.yul\":8851:8852   */\n  0x01\n    /* \"#utility.yul\":8843:8849   */\n  dup3\n    /* \"#utility.yul\":8839:8853   */\n  add\n    /* \"#utility.yul\":8829:8853   */\n  swap2\n  pop\n    /* \"#utility.yul\":8898:8900   */\n  0x20\n    /* \"#utility.yul\":8887:8896   */\n  dup6\n    /* \"#utility.yul\":8883:8901   */\n  add\n    /* \"#utility.yul\":8870:8901   */\n  swap5\n  pop\n    /* \"#utility.yul\":8744:8748   */\n  0x20\n    /* \"#utility.yul\":8741:8742   */\n  dup2\n    /* \"#utility.yul\":8737:8749   */\n  add\n    /* \"#utility.yul\":8732:8749   */\n  swap1\n  pop\n    /* \"#utility.yul\":8707:8915   */\n  jump(tag_188)\ntag_190:\n    /* \"#utility.yul\":8943:8949   */\n  dup7\n    /* \"#utility.yul\":8934:8941   */\n  dup4\n    /* \"#utility.yul\":8931:8950   */\n  lt\n    /* \"#utility.yul\":8928:9107   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":9001:9010   */\n  dup5\n    /* \"#utility.yul\":8996:8999   */\n  dup10\n    /* \"#utility.yul\":8992:9011   */\n  add\n    /* \"#utility.yul\":8986:9012   */\n  mload\n    /* \"#utility.yul\":9044:9092   */\n  tag_192\n    /* \"#utility.yul\":9086:9090   */\n  0x1f\n    /* \"#utility.yul\":9078:9084   */\n  dup10\n    /* \"#utility.yul\":9074:9091   */\n  and\n    /* \"#utility.yul\":9063:9072   */\n  dup3\n    /* \"#utility.yul\":9044:9092   */\n  tag_71\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9036:9042   */\n  dup4\n    /* \"#utility.yul\":9029:9093   */\n  sstore\n    /* \"#utility.yul\":8951:9107   */\n  pop\n    /* \"#utility.yul\":8928:9107   */\ntag_191:\n    /* \"#utility.yul\":9153:9154   */\n  0x01\n    /* \"#utility.yul\":9149:9150   */\n  0x02\n    /* \"#utility.yul\":9141:9147   */\n  dup9\n    /* \"#utility.yul\":9137:9151   */\n  mul\n    /* \"#utility.yul\":9133:9155   */\n  add\n    /* \"#utility.yul\":9127:9131   */\n  dup9\n    /* \"#utility.yul\":9120:9156   */\n  sstore\n    /* \"#utility.yul\":8555:9166   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8518:9405   */\ntag_183:\n  pop\n    /* \"#utility.yul\":8108:9411   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8016:9411   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9417:9597   */\ntag_73:\n    /* \"#utility.yul\":9465:9542   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9462:9463   */\n  0x00\n    /* \"#utility.yul\":9455:9543   */\n  mstore\n    /* \"#utility.yul\":9562:9566   */\n  0x11\n    /* \"#utility.yul\":9559:9560   */\n  0x04\n    /* \"#utility.yul\":9552:9567   */\n  mstore\n    /* \"#utility.yul\":9586:9590   */\n  0x24\n    /* \"#utility.yul\":9583:9584   */\n  0x00\n    /* \"#utility.yul\":9576:9591   */\n  revert\n    /* \"#utility.yul\":9603:9705   */\ntag_74:\n    /* \"#utility.yul\":9645:9653   */\n  0x00\n    /* \"#utility.yul\":9692:9697   */\n  dup2\n    /* \"#utility.yul\":9689:9690   */\n  0x01\n    /* \"#utility.yul\":9685:9698   */\n  shr\n    /* \"#utility.yul\":9664:9698   */\n  swap1\n  pop\n    /* \"#utility.yul\":9603:9705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9711:10559   */\ntag_75:\n    /* \"#utility.yul\":9772:9777   */\n  0x00\n    /* \"#utility.yul\":9779:9783   */\n  0x00\n    /* \"#utility.yul\":9803:9809   */\n  dup3\n    /* \"#utility.yul\":9794:9809   */\n  swap2\n  pop\n    /* \"#utility.yul\":9827:9832   */\n  dup4\n    /* \"#utility.yul\":9818:9832   */\n  swap1\n  pop\n    /* \"#utility.yul\":9841:10553   */\ntag_196:\n    /* \"#utility.yul\":9862:9863   */\n  0x01\n    /* \"#utility.yul\":9852:9860   */\n  dup6\n    /* \"#utility.yul\":9849:9864   */\n  gt\n    /* \"#utility.yul\":9841:10553   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":9957:9961   */\n  dup1\n    /* \"#utility.yul\":9952:9955   */\n  dup7\n    /* \"#utility.yul\":9948:9962   */\n  div\n    /* \"#utility.yul\":9942:9946   */\n  dup2\n    /* \"#utility.yul\":9939:9963   */\n  gt\n    /* \"#utility.yul\":9936:9986   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":9966:9984   */\n  tag_200\n  tag_73\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9936:9986   */\ntag_199:\n    /* \"#utility.yul\":10016:10017   */\n  0x01\n    /* \"#utility.yul\":10006:10014   */\n  dup6\n    /* \"#utility.yul\":10002:10018   */\n  and\n    /* \"#utility.yul\":9999:10450   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":10431:10435   */\n  dup1\n    /* \"#utility.yul\":10424:10429   */\n  dup3\n    /* \"#utility.yul\":10420:10436   */\n  mul\n    /* \"#utility.yul\":10411:10436   */\n  swap2\n  pop\n    /* \"#utility.yul\":9999:10450   */\ntag_201:\n    /* \"#utility.yul\":10481:10485   */\n  dup1\n    /* \"#utility.yul\":10475:10479   */\n  dup2\n    /* \"#utility.yul\":10471:10486   */\n  mul\n    /* \"#utility.yul\":10463:10486   */\n  swap1\n  pop\n    /* \"#utility.yul\":10511:10543   */\n  tag_202\n    /* \"#utility.yul\":10534:10542   */\n  dup6\n    /* \"#utility.yul\":10511:10543   */\n  tag_74\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10499:10543   */\n  swap5\n  pop\n    /* \"#utility.yul\":9841:10553   */\n  jump(tag_196)\ntag_198:\n    /* \"#utility.yul\":9711:10559   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10565:11638   */\ntag_76:\n    /* \"#utility.yul\":10619:10624   */\n  0x00\n    /* \"#utility.yul\":10810:10818   */\n  dup3\n    /* \"#utility.yul\":10800:10840   */\n  tag_204\n  jumpi\n    /* \"#utility.yul\":10831:10832   */\n  0x01\n    /* \"#utility.yul\":10822:10832   */\n  swap1\n  pop\n    /* \"#utility.yul\":10833:10838   */\n  jump(tag_203)\n    /* \"#utility.yul\":10800:10840   */\ntag_204:\n    /* \"#utility.yul\":10859:10863   */\n  dup2\n    /* \"#utility.yul\":10849:10885   */\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10876:10877   */\n  0x00\n    /* \"#utility.yul\":10867:10877   */\n  swap1\n  pop\n    /* \"#utility.yul\":10878:10883   */\n  jump(tag_203)\n    /* \"#utility.yul\":10849:10885   */\ntag_205:\n    /* \"#utility.yul\":10945:10949   */\n  dup2\n    /* \"#utility.yul\":10993:10994   */\n  0x01\n    /* \"#utility.yul\":10988:11015   */\n  dup2\n  eq\n  tag_207\n  jumpi\n    /* \"#utility.yul\":11029:11030   */\n  0x02\n    /* \"#utility.yul\":11024:11215   */\n  dup2\n  eq\n  tag_208\n  jumpi\n    /* \"#utility.yul\":10938:11215   */\n  jump(tag_206)\n    /* \"#utility.yul\":10988:11015   */\ntag_207:\n    /* \"#utility.yul\":11006:11007   */\n  0x01\n    /* \"#utility.yul\":10997:11007   */\n  swap2\n  pop\n    /* \"#utility.yul\":11008:11013   */\n  pop\n  jump(tag_203)\n    /* \"#utility.yul\":11024:11215   */\ntag_208:\n    /* \"#utility.yul\":11069:11072   */\n  0xff\n    /* \"#utility.yul\":11059:11067   */\n  dup5\n    /* \"#utility.yul\":11056:11073   */\n  gt\n    /* \"#utility.yul\":11053:11096   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":11076:11094   */\n  tag_210\n  tag_73\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":11053:11096   */\ntag_209:\n    /* \"#utility.yul\":11125:11133   */\n  dup4\n    /* \"#utility.yul\":11122:11123   */\n  0x02\n    /* \"#utility.yul\":11118:11134   */\n  exp\n    /* \"#utility.yul\":11109:11134   */\n  swap2\n  pop\n    /* \"#utility.yul\":11160:11163   */\n  dup5\n    /* \"#utility.yul\":11153:11158   */\n  dup3\n    /* \"#utility.yul\":11150:11164   */\n  gt\n    /* \"#utility.yul\":11147:11187   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":11167:11185   */\n  tag_212\n  tag_73\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":11147:11187   */\ntag_211:\n    /* \"#utility.yul\":11200:11205   */\n  pop\n  jump(tag_203)\n    /* \"#utility.yul\":10938:11215   */\ntag_206:\n  pop\n    /* \"#utility.yul\":11324:11326   */\n  0x20\n    /* \"#utility.yul\":11314:11322   */\n  dup4\n    /* \"#utility.yul\":11311:11327   */\n  lt\n    /* \"#utility.yul\":11305:11308   */\n  0x0133\n    /* \"#utility.yul\":11299:11303   */\n  dup4\n    /* \"#utility.yul\":11296:11309   */\n  lt\n    /* \"#utility.yul\":11292:11328   */\n  and\n    /* \"#utility.yul\":11274:11276   */\n  0x4e\n    /* \"#utility.yul\":11264:11272   */\n  dup5\n    /* \"#utility.yul\":11261:11277   */\n  lt\n    /* \"#utility.yul\":11256:11258   */\n  0x0b\n    /* \"#utility.yul\":11250:11254   */\n  dup5\n    /* \"#utility.yul\":11247:11259   */\n  lt\n    /* \"#utility.yul\":11243:11278   */\n  and\n    /* \"#utility.yul\":11227:11338   */\n  or\n    /* \"#utility.yul\":11224:11470   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":11380:11388   */\n  dup3\n    /* \"#utility.yul\":11374:11378   */\n  dup3\n    /* \"#utility.yul\":11370:11389   */\n  exp\n    /* \"#utility.yul\":11361:11389   */\n  swap1\n  pop\n    /* \"#utility.yul\":11415:11418   */\n  dup4\n    /* \"#utility.yul\":11408:11413   */\n  dup2\n    /* \"#utility.yul\":11405:11419   */\n  gt\n    /* \"#utility.yul\":11402:11442   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":11422:11440   */\n  tag_215\n  tag_73\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":11402:11442   */\ntag_214:\n    /* \"#utility.yul\":11455:11460   */\n  jump(tag_203)\n    /* \"#utility.yul\":11224:11470   */\ntag_213:\n    /* \"#utility.yul\":11495:11537   */\n  tag_216\n    /* \"#utility.yul\":11533:11536   */\n  dup5\n    /* \"#utility.yul\":11523:11531   */\n  dup5\n    /* \"#utility.yul\":11517:11521   */\n  dup5\n    /* \"#utility.yul\":11514:11515   */\n  0x01\n    /* \"#utility.yul\":11495:11537   */\n  tag_75\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":11480:11537   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11569:11573   */\n  dup2\n    /* \"#utility.yul\":11564:11567   */\n  dup5\n    /* \"#utility.yul\":11560:11574   */\n  div\n    /* \"#utility.yul\":11553:11558   */\n  dup2\n    /* \"#utility.yul\":11550:11575   */\n  gt\n    /* \"#utility.yul\":11547:11598   */\n  iszero\n  tag_217\n  jumpi\n    /* \"#utility.yul\":11578:11596   */\n  tag_218\n  tag_73\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":11547:11598   */\ntag_217:\n    /* \"#utility.yul\":11627:11631   */\n  dup2\n    /* \"#utility.yul\":11620:11625   */\n  dup2\n    /* \"#utility.yul\":11616:11632   */\n  mul\n    /* \"#utility.yul\":11607:11632   */\n  swap1\n  pop\n    /* \"#utility.yul\":10565:11638   */\ntag_203:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11644:11925   */\ntag_13:\n    /* \"#utility.yul\":11702:11707   */\n  0x00\n    /* \"#utility.yul\":11726:11749   */\n  tag_220\n    /* \"#utility.yul\":11744:11748   */\n  dup3\n    /* \"#utility.yul\":11726:11749   */\n  tag_52\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":11718:11749   */\n  swap2\n  pop\n    /* \"#utility.yul\":11770:11795   */\n  tag_221\n    /* \"#utility.yul\":11786:11794   */\n  dup4\n    /* \"#utility.yul\":11770:11795   */\n  tag_49\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":11758:11795   */\n  swap3\n  pop\n    /* \"#utility.yul\":11814:11918   */\n  tag_222\n    /* \"#utility.yul\":11851:11917   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11841:11849   */\n  dup5\n    /* \"#utility.yul\":11835:11839   */\n  dup5\n    /* \"#utility.yul\":11814:11918   */\n  tag_76\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":11805:11918   */\n  swap1\n  pop\n    /* \"#utility.yul\":11644:11925   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11931:12341   */\ntag_15:\n    /* \"#utility.yul\":11971:11978   */\n  0x00\n    /* \"#utility.yul\":11994:12014   */\n  tag_224\n    /* \"#utility.yul\":12012:12013   */\n  dup3\n    /* \"#utility.yul\":11994:12014   */\n  tag_52\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":11989:12014   */\n  swap2\n  pop\n    /* \"#utility.yul\":12028:12048   */\n  tag_225\n    /* \"#utility.yul\":12046:12047   */\n  dup4\n    /* \"#utility.yul\":12028:12048   */\n  tag_52\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":12023:12048   */\n  swap3\n  pop\n    /* \"#utility.yul\":12083:12084   */\n  dup3\n    /* \"#utility.yul\":12080:12081   */\n  dup3\n    /* \"#utility.yul\":12076:12085   */\n  mul\n    /* \"#utility.yul\":12105:12135   */\n  tag_226\n    /* \"#utility.yul\":12123:12134   */\n  dup2\n    /* \"#utility.yul\":12105:12135   */\n  tag_52\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":12094:12135   */\n  swap2\n  pop\n    /* \"#utility.yul\":12284:12285   */\n  dup3\n    /* \"#utility.yul\":12275:12282   */\n  dup3\n    /* \"#utility.yul\":12271:12286   */\n  div\n    /* \"#utility.yul\":12268:12269   */\n  dup5\n    /* \"#utility.yul\":12265:12287   */\n  eq\n    /* \"#utility.yul\":12245:12246   */\n  dup4\n    /* \"#utility.yul\":12238:12247   */\n  iszero\n    /* \"#utility.yul\":12218:12301   */\n  or\n    /* \"#utility.yul\":12195:12334   */\n  tag_227\n  jumpi\n    /* \"#utility.yul\":12314:12332   */\n  tag_228\n  tag_73\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":12195:12334   */\ntag_227:\n    /* \"#utility.yul\":11979:12341   */\n  pop\n    /* \"#utility.yul\":11931:12341   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12347:12473   */\ntag_77:\n    /* \"#utility.yul\":12384:12391   */\n  0x00\n    /* \"#utility.yul\":12424:12466   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12417:12422   */\n  dup3\n    /* \"#utility.yul\":12413:12467   */\n  and\n    /* \"#utility.yul\":12402:12467   */\n  swap1\n  pop\n    /* \"#utility.yul\":12347:12473   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12479:12575   */\ntag_78:\n    /* \"#utility.yul\":12516:12523   */\n  0x00\n    /* \"#utility.yul\":12545:12569   */\n  tag_231\n    /* \"#utility.yul\":12563:12568   */\n  dup3\n    /* \"#utility.yul\":12545:12569   */\n  tag_77\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":12534:12569   */\n  swap1\n  pop\n    /* \"#utility.yul\":12479:12575   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12581:12699   */\ntag_79:\n    /* \"#utility.yul\":12668:12692   */\n  tag_233\n    /* \"#utility.yul\":12686:12691   */\n  dup2\n    /* \"#utility.yul\":12668:12692   */\n  tag_78\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":12663:12666   */\n  dup3\n    /* \"#utility.yul\":12656:12693   */\n  mstore\n    /* \"#utility.yul\":12581:12699   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12705:12927   */\ntag_21:\n    /* \"#utility.yul\":12798:12802   */\n  0x00\n    /* \"#utility.yul\":12836:12838   */\n  0x20\n    /* \"#utility.yul\":12825:12834   */\n  dup3\n    /* \"#utility.yul\":12821:12839   */\n  add\n    /* \"#utility.yul\":12813:12839   */\n  swap1\n  pop\n    /* \"#utility.yul\":12849:12920   */\n  tag_235\n    /* \"#utility.yul\":12917:12918   */\n  0x00\n    /* \"#utility.yul\":12906:12915   */\n  dup4\n    /* \"#utility.yul\":12902:12919   */\n  add\n    /* \"#utility.yul\":12893:12899   */\n  dup5\n    /* \"#utility.yul\":12849:12920   */\n  tag_79\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":12705:12927   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12933:13124   */\ntag_27:\n    /* \"#utility.yul\":12973:12976   */\n  0x00\n    /* \"#utility.yul\":12992:13012   */\n  tag_237\n    /* \"#utility.yul\":13010:13011   */\n  dup3\n    /* \"#utility.yul\":12992:13012   */\n  tag_52\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":12987:13012   */\n  swap2\n  pop\n    /* \"#utility.yul\":13026:13046   */\n  tag_238\n    /* \"#utility.yul\":13044:13045   */\n  dup4\n    /* \"#utility.yul\":13026:13046   */\n  tag_52\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":13021:13046   */\n  swap3\n  pop\n    /* \"#utility.yul\":13069:13070   */\n  dup3\n    /* \"#utility.yul\":13066:13067   */\n  dup3\n    /* \"#utility.yul\":13062:13071   */\n  add\n    /* \"#utility.yul\":13055:13071   */\n  swap1\n  pop\n    /* \"#utility.yul\":13090:13093   */\n  dup1\n    /* \"#utility.yul\":13087:13088   */\n  dup3\n    /* \"#utility.yul\":13084:13094   */\n  gt\n    /* \"#utility.yul\":13081:13117   */\n  iszero\n  tag_239\n  jumpi\n    /* \"#utility.yul\":13097:13115   */\n  tag_240\n  tag_73\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":13081:13117   */\ntag_239:\n    /* \"#utility.yul\":12933:13124   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13130:13248   */\ntag_80:\n    /* \"#utility.yul\":13217:13241   */\n  tag_242\n    /* \"#utility.yul\":13235:13240   */\n  dup2\n    /* \"#utility.yul\":13217:13241   */\n  tag_52\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":13212:13215   */\n  dup3\n    /* \"#utility.yul\":13205:13242   */\n  mstore\n    /* \"#utility.yul\":13130:13248   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13254:13696   */\ntag_31:\n    /* \"#utility.yul\":13403:13407   */\n  0x00\n    /* \"#utility.yul\":13441:13443   */\n  0x60\n    /* \"#utility.yul\":13430:13439   */\n  dup3\n    /* \"#utility.yul\":13426:13444   */\n  add\n    /* \"#utility.yul\":13418:13444   */\n  swap1\n  pop\n    /* \"#utility.yul\":13454:13525   */\n  tag_244\n    /* \"#utility.yul\":13522:13523   */\n  0x00\n    /* \"#utility.yul\":13511:13520   */\n  dup4\n    /* \"#utility.yul\":13507:13524   */\n  add\n    /* \"#utility.yul\":13498:13504   */\n  dup7\n    /* \"#utility.yul\":13454:13525   */\n  tag_79\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":13535:13607   */\n  tag_245\n    /* \"#utility.yul\":13603:13605   */\n  0x20\n    /* \"#utility.yul\":13592:13601   */\n  dup4\n    /* \"#utility.yul\":13588:13606   */\n  add\n    /* \"#utility.yul\":13579:13585   */\n  dup6\n    /* \"#utility.yul\":13535:13607   */\n  tag_80\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":13617:13689   */\n  tag_246\n    /* \"#utility.yul\":13685:13687   */\n  0x40\n    /* \"#utility.yul\":13674:13683   */\n  dup4\n    /* \"#utility.yul\":13670:13688   */\n  add\n    /* \"#utility.yul\":13661:13667   */\n  dup5\n    /* \"#utility.yul\":13617:13689   */\n  tag_80\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":13254:13696   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13702:13924   */\ntag_35:\n    /* \"#utility.yul\":13795:13799   */\n  0x00\n    /* \"#utility.yul\":13833:13835   */\n  0x20\n    /* \"#utility.yul\":13822:13831   */\n  dup3\n    /* \"#utility.yul\":13818:13836   */\n  add\n    /* \"#utility.yul\":13810:13836   */\n  swap1\n  pop\n    /* \"#utility.yul\":13846:13917   */\n  tag_248\n    /* \"#utility.yul\":13914:13915   */\n  0x00\n    /* \"#utility.yul\":13903:13912   */\n  dup4\n    /* \"#utility.yul\":13899:13916   */\n  add\n    /* \"#utility.yul\":13890:13896   */\n  dup5\n    /* \"#utility.yul\":13846:13917   */\n  tag_80\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":13702:13924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"token.sol\":115:509  contract TestToken is ERC20 {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token.sol\":115:509  contract TestToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token.sol\":411:507  function decimals() public view override returns (uint8) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_63\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"token.sol\":411:507  function decimals() public view override returns (uint8) {... */\n    tag_33:\n        /* \"token.sol\":461:466  uint8 */\n      0x00\n        /* \"token.sol\":485:500  _customDecimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"token.sol\":478:500  return _customDecimals */\n      swap1\n      pop\n        /* \"token.sol\":411:507  function decimals() public view override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_55\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_55\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_51\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_114)\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_120:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_121:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_122:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_123:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_124:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_149\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_120\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":711:782   */\n      tag_150\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_121\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_151\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_122\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":881:910   */\n      tag_152\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_123\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_16:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_154\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_124\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_126:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_128:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_129:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_160\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_128\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_130:\n        /* \"#utility.yul\":1876:1900   */\n      tag_162\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_129\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_163:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_131:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_165\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_130\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_132:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_133:\n        /* \"#utility.yul\":2232:2256   */\n      tag_168\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_132\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_169:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_134:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_171\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_133\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_19:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_174\n      tag_126\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2525:2644   */\n    tag_173:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_175\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_131\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_176\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_134\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_135:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_136:\n        /* \"#utility.yul\":3089:3110   */\n      tag_179\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_135\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_22:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_181\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_136\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_137:\n        /* \"#utility.yul\":3426:3450   */\n      tag_183\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_132\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_26:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_185\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_137\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_29:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_188\n      tag_126\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3801:3920   */\n    tag_187:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_189\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_131\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_190\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_131\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_191\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_134\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_138:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_139:\n        /* \"#utility.yul\":4491:4513   */\n      tag_194\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_138\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_35:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_196\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_139\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_38:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_199\n      tag_126\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4822:4941   */\n    tag_198:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_200\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_131\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5555   */\n    tag_50:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x40\n        /* \"#utility.yul\":5194:5203   */\n      dup4\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_203\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5174:5293   */\n    tag_202:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_204\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup7\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_131\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5347:5410   */\n      swap3\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5485:5538   */\n      tag_205\n        /* \"#utility.yul\":5530:5537   */\n      dup6\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup7\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_131\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5548   */\n      pop\n        /* \"#utility.yul\":5081:5555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5741   */\n    tag_140:\n        /* \"#utility.yul\":5609:5686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5599:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x22\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":5747:6067   */\n    tag_55:\n        /* \"#utility.yul\":5791:5797   */\n      0x00\n        /* \"#utility.yul\":5828:5829   */\n      0x02\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5818:5830   */\n      div\n        /* \"#utility.yul\":5808:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5876   */\n      0x01\n        /* \"#utility.yul\":5869:5873   */\n      dup3\n        /* \"#utility.yul\":5865:5877   */\n      and\n        /* \"#utility.yul\":5896:5914   */\n      dup1\n        /* \"#utility.yul\":5886:5967   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":5952:5956   */\n      0x7f\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5957   */\n      and\n        /* \"#utility.yul\":5930:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5967   */\n    tag_208:\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      lt\n        /* \"#utility.yul\":5983:6001   */\n      dup2\n        /* \"#utility.yul\":5980:6018   */\n      sub\n        /* \"#utility.yul\":5977:6061   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6033:6051   */\n      tag_210\n      tag_140\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5977:6061   */\n    tag_209:\n        /* \"#utility.yul\":5798:6067   */\n      pop\n        /* \"#utility.yul\":5747:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6191   */\n    tag_141:\n        /* \"#utility.yul\":6160:6184   */\n      tag_212\n        /* \"#utility.yul\":6178:6183   */\n      dup2\n        /* \"#utility.yul\":6160:6184   */\n      tag_129\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6155:6158   */\n      dup3\n        /* \"#utility.yul\":6148:6185   */\n      mstore\n        /* \"#utility.yul\":6073:6191   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6197:6639   */\n    tag_93:\n        /* \"#utility.yul\":6346:6350   */\n      0x00\n        /* \"#utility.yul\":6384:6386   */\n      0x60\n        /* \"#utility.yul\":6373:6382   */\n      dup3\n        /* \"#utility.yul\":6369:6387   */\n      add\n        /* \"#utility.yul\":6361:6387   */\n      swap1\n      pop\n        /* \"#utility.yul\":6397:6468   */\n      tag_214\n        /* \"#utility.yul\":6465:6466   */\n      0x00\n        /* \"#utility.yul\":6454:6463   */\n      dup4\n        /* \"#utility.yul\":6450:6467   */\n      add\n        /* \"#utility.yul\":6441:6447   */\n      dup7\n        /* \"#utility.yul\":6397:6468   */\n      tag_141\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6478:6550   */\n      tag_215\n        /* \"#utility.yul\":6546:6548   */\n      0x20\n        /* \"#utility.yul\":6535:6544   */\n      dup4\n        /* \"#utility.yul\":6531:6549   */\n      add\n        /* \"#utility.yul\":6522:6528   */\n      dup6\n        /* \"#utility.yul\":6478:6550   */\n      tag_137\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6560:6632   */\n      tag_216\n        /* \"#utility.yul\":6628:6630   */\n      0x40\n        /* \"#utility.yul\":6617:6626   */\n      dup4\n        /* \"#utility.yul\":6613:6631   */\n      add\n        /* \"#utility.yul\":6604:6610   */\n      dup5\n        /* \"#utility.yul\":6560:6632   */\n      tag_137\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6197:6639   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6645:6867   */\n    tag_98:\n        /* \"#utility.yul\":6738:6742   */\n      0x00\n        /* \"#utility.yul\":6776:6778   */\n      0x20\n        /* \"#utility.yul\":6765:6774   */\n      dup3\n        /* \"#utility.yul\":6761:6779   */\n      add\n        /* \"#utility.yul\":6753:6779   */\n      swap1\n      pop\n        /* \"#utility.yul\":6789:6860   */\n      tag_218\n        /* \"#utility.yul\":6857:6858   */\n      0x00\n        /* \"#utility.yul\":6846:6855   */\n      dup4\n        /* \"#utility.yul\":6842:6859   */\n      add\n        /* \"#utility.yul\":6833:6839   */\n      dup5\n        /* \"#utility.yul\":6789:6860   */\n      tag_141\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6645:6867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:7053   */\n    tag_142:\n        /* \"#utility.yul\":6921:6998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6918:6919   */\n      0x00\n        /* \"#utility.yul\":6911:6999   */\n      mstore\n        /* \"#utility.yul\":7018:7022   */\n      0x11\n        /* \"#utility.yul\":7015:7016   */\n      0x04\n        /* \"#utility.yul\":7008:7023   */\n      mstore\n        /* \"#utility.yul\":7042:7046   */\n      0x24\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7032:7047   */\n      revert\n        /* \"#utility.yul\":7059:7250   */\n    tag_113:\n        /* \"#utility.yul\":7099:7102   */\n      0x00\n        /* \"#utility.yul\":7118:7138   */\n      tag_221\n        /* \"#utility.yul\":7136:7137   */\n      dup3\n        /* \"#utility.yul\":7118:7138   */\n      tag_132\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7113:7138   */\n      swap2\n      pop\n        /* \"#utility.yul\":7152:7172   */\n      tag_222\n        /* \"#utility.yul\":7170:7171   */\n      dup4\n        /* \"#utility.yul\":7152:7172   */\n      tag_132\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7147:7172   */\n      swap3\n      pop\n        /* \"#utility.yul\":7195:7196   */\n      dup3\n        /* \"#utility.yul\":7192:7193   */\n      dup3\n        /* \"#utility.yul\":7188:7197   */\n      add\n        /* \"#utility.yul\":7181:7197   */\n      swap1\n      pop\n        /* \"#utility.yul\":7216:7219   */\n      dup1\n        /* \"#utility.yul\":7213:7214   */\n      dup3\n        /* \"#utility.yul\":7210:7220   */\n      gt\n        /* \"#utility.yul\":7207:7243   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":7223:7241   */\n      tag_224\n      tag_142\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7207:7243   */\n    tag_223:\n        /* \"#utility.yul\":7059:7250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eed51594b1d269bdbc8decfbd7ee32168f113301c0d0ea3f3070f8b5b72daf2164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_823": {
									"entryPoint": null,
									"id": 823,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 159,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 292,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2790,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13927:6",
										"nodeType": "YulBlock",
										"src": "0:13927:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2613:43:6",
													"nodeType": "YulBlock",
													"src": "2613:43:6",
													"statements": [
														{
															"nativeSrc": "2623:27:6",
															"nodeType": "YulAssignment",
															"src": "2623:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2638:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2638:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2645:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2645:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2634:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2634:3:6"
																},
																"nativeSrc": "2634:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2634:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2623:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2623:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2570:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2595:5:6",
														"nodeType": "YulTypedName",
														"src": "2595:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2605:7:6",
														"nodeType": "YulTypedName",
														"src": "2605:7:6",
														"type": ""
													}
												],
												"src": "2570:86:6"
											},
											{
												"body": {
													"nativeSrc": "2703:77:6",
													"nodeType": "YulBlock",
													"src": "2703:77:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2758:16:6",
																"nodeType": "YulBlock",
																"src": "2758:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2767:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2767:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2770:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2770:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2760:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2760:6:6"
																			},
																			"nativeSrc": "2760:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2760:12:6"
																		},
																		"nativeSrc": "2760:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2760:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2726:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2749:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2749:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "2733:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "2733:15:6"
																				},
																				"nativeSrc": "2733:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2733:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2723:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:6"
																		},
																		"nativeSrc": "2723:33:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2716:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:6"
																},
																"nativeSrc": "2716:41:6",
																"nodeType": "YulFunctionCall",
																"src": "2716:41:6"
															},
															"nativeSrc": "2713:61:6",
															"nodeType": "YulIf",
															"src": "2713:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "2662:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2696:5:6",
														"nodeType": "YulTypedName",
														"src": "2696:5:6",
														"type": ""
													}
												],
												"src": "2662:118:6"
											},
											{
												"body": {
													"nativeSrc": "2847:78:6",
													"nodeType": "YulBlock",
													"src": "2847:78:6",
													"statements": [
														{
															"nativeSrc": "2857:22:6",
															"nodeType": "YulAssignment",
															"src": "2857:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2872:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2872:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2866:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2866:5:6"
																},
																"nativeSrc": "2866:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2866:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2857:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2857:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2913:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2913:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "2888:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "2888:24:6"
																},
																"nativeSrc": "2888:31:6",
																"nodeType": "YulFunctionCall",
																"src": "2888:31:6"
															},
															"nativeSrc": "2888:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "2888:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "2786:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2825:6:6",
														"nodeType": "YulTypedName",
														"src": "2825:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2833:3:6",
														"nodeType": "YulTypedName",
														"src": "2833:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2841:5:6",
														"nodeType": "YulTypedName",
														"src": "2841:5:6",
														"type": ""
													}
												],
												"src": "2786:139:6"
											},
											{
												"body": {
													"nativeSrc": "2976:32:6",
													"nodeType": "YulBlock",
													"src": "2976:32:6",
													"statements": [
														{
															"nativeSrc": "2986:16:6",
															"nodeType": "YulAssignment",
															"src": "2986:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2997:5:6",
																"nodeType": "YulIdentifier",
																"src": "2997:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2986:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2986:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2931:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2958:5:6",
														"nodeType": "YulTypedName",
														"src": "2958:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2968:7:6",
														"nodeType": "YulTypedName",
														"src": "2968:7:6",
														"type": ""
													}
												],
												"src": "2931:77:6"
											},
											{
												"body": {
													"nativeSrc": "3057:79:6",
													"nodeType": "YulBlock",
													"src": "3057:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3114:16:6",
																"nodeType": "YulBlock",
																"src": "3114:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3123:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3126:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3126:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3116:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3116:6:6"
																			},
																			"nativeSrc": "3116:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3116:12:6"
																		},
																		"nativeSrc": "3116:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3116:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3080:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3080:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3105:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3105:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3087:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3087:17:6"
																				},
																				"nativeSrc": "3087:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3087:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3077:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3077:2:6"
																		},
																		"nativeSrc": "3077:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3077:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3070:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3070:6:6"
																},
																"nativeSrc": "3070:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3070:43:6"
															},
															"nativeSrc": "3067:63:6",
															"nodeType": "YulIf",
															"src": "3067:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3014:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3050:5:6",
														"nodeType": "YulTypedName",
														"src": "3050:5:6",
														"type": ""
													}
												],
												"src": "3014:122:6"
											},
											{
												"body": {
													"nativeSrc": "3205:80:6",
													"nodeType": "YulBlock",
													"src": "3205:80:6",
													"statements": [
														{
															"nativeSrc": "3215:22:6",
															"nodeType": "YulAssignment",
															"src": "3215:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3224:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3224:5:6"
																},
																"nativeSrc": "3224:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3224:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3215:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3215:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3273:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3273:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3246:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3246:26:6"
																},
																"nativeSrc": "3246:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3246:33:6"
															},
															"nativeSrc": "3246:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3246:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3142:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3183:6:6",
														"nodeType": "YulTypedName",
														"src": "3183:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3191:3:6",
														"nodeType": "YulTypedName",
														"src": "3191:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3199:5:6",
														"nodeType": "YulTypedName",
														"src": "3199:5:6",
														"type": ""
													}
												],
												"src": "3142:143:6"
											},
											{
												"body": {
													"nativeSrc": "3437:1016:6",
													"nodeType": "YulBlock",
													"src": "3437:1016:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3484:83:6",
																"nodeType": "YulBlock",
																"src": "3484:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3486:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3486:77:6"
																			},
																			"nativeSrc": "3486:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3486:79:6"
																		},
																		"nativeSrc": "3486:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3486:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3458:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3458:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3467:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3454:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3454:3:6"
																		},
																		"nativeSrc": "3454:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3454:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3479:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3479:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3450:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3450:3:6"
																},
																"nativeSrc": "3450:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3450:33:6"
															},
															"nativeSrc": "3447:120:6",
															"nodeType": "YulIf",
															"src": "3447:120:6"
														},
														{
															"nativeSrc": "3577:291:6",
															"nodeType": "YulBlock",
															"src": "3577:291:6",
															"statements": [
																{
																	"nativeSrc": "3592:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3592:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3616:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3616:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3627:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3627:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3612:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3612:3:6"
																				},
																				"nativeSrc": "3612:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3612:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3606:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3606:5:6"
																		},
																		"nativeSrc": "3606:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3596:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3596:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3677:83:6",
																		"nodeType": "YulBlock",
																		"src": "3677:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3679:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3679:77:6"
																					},
																					"nativeSrc": "3679:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3679:79:6"
																				},
																				"nativeSrc": "3679:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3679:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3649:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3649:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3657:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3657:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3646:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3646:2:6"
																		},
																		"nativeSrc": "3646:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3646:30:6"
																	},
																	"nativeSrc": "3643:117:6",
																	"nodeType": "YulIf",
																	"src": "3643:117:6"
																},
																{
																	"nativeSrc": "3774:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3774:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3830:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3830:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3841:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3841:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3826:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3826:3:6"
																				},
																				"nativeSrc": "3826:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3826:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3850:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3850:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3784:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3784:41:6"
																		},
																		"nativeSrc": "3784:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3784:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3774:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3774:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3878:292:6",
															"nodeType": "YulBlock",
															"src": "3878:292:6",
															"statements": [
																{
																	"nativeSrc": "3893:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3893:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3928:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3928:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:6"
																				},
																				"nativeSrc": "3913:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3907:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3907:5:6"
																		},
																		"nativeSrc": "3907:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3907:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3897:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3897:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3979:83:6",
																		"nodeType": "YulBlock",
																		"src": "3979:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3981:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3981:77:6"
																					},
																					"nativeSrc": "3981:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3981:79:6"
																				},
																				"nativeSrc": "3981:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3981:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3951:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3951:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3959:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3959:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3948:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3948:2:6"
																		},
																		"nativeSrc": "3948:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3948:30:6"
																	},
																	"nativeSrc": "3945:117:6",
																	"nodeType": "YulIf",
																	"src": "3945:117:6"
																},
																{
																	"nativeSrc": "4076:84:6",
																	"nodeType": "YulAssignment",
																	"src": "4076:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4132:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4132:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4143:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4143:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4128:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4128:3:6"
																				},
																				"nativeSrc": "4128:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4128:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4152:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4152:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4086:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "4086:41:6"
																		},
																		"nativeSrc": "4086:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4086:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4076:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4180:127:6",
															"nodeType": "YulBlock",
															"src": "4180:127:6",
															"statements": [
																{
																	"nativeSrc": "4195:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4195:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4209:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4209:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4199:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4199:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4225:72:6",
																	"nodeType": "YulAssignment",
																	"src": "4225:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4269:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4269:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4280:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4280:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4265:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4265:3:6"
																				},
																				"nativeSrc": "4265:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4265:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4289:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4289:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "4235:29:6",
																			"nodeType": "YulIdentifier",
																			"src": "4235:29:6"
																		},
																		"nativeSrc": "4235:62:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4235:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4225:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4225:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4317:129:6",
															"nodeType": "YulBlock",
															"src": "4317:129:6",
															"statements": [
																{
																	"nativeSrc": "4332:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4332:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4346:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4336:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4336:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4362:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4362:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4408:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4408:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4419:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4419:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4404:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4404:3:6"
																				},
																				"nativeSrc": "4404:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4404:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4428:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4428:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4372:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4372:31:6"
																		},
																		"nativeSrc": "4372:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4372:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4362:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4362:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory",
												"nativeSrc": "3291:1162:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3383:9:6",
														"nodeType": "YulTypedName",
														"src": "3383:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3394:7:6",
														"nodeType": "YulTypedName",
														"src": "3394:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3406:6:6",
														"nodeType": "YulTypedName",
														"src": "3406:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3414:6:6",
														"nodeType": "YulTypedName",
														"src": "3414:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3422:6:6",
														"nodeType": "YulTypedName",
														"src": "3422:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3430:6:6",
														"nodeType": "YulTypedName",
														"src": "3430:6:6",
														"type": ""
													}
												],
												"src": "3291:1162:6"
											},
											{
												"body": {
													"nativeSrc": "4518:40:6",
													"nodeType": "YulBlock",
													"src": "4518:40:6",
													"statements": [
														{
															"nativeSrc": "4529:22:6",
															"nodeType": "YulAssignment",
															"src": "4529:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4545:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4545:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4539:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4539:5:6"
																},
																"nativeSrc": "4539:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4539:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4459:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4501:5:6",
														"nodeType": "YulTypedName",
														"src": "4501:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4511:6:6",
														"nodeType": "YulTypedName",
														"src": "4511:6:6",
														"type": ""
													}
												],
												"src": "4459:99:6"
											},
											{
												"body": {
													"nativeSrc": "4592:152:6",
													"nodeType": "YulBlock",
													"src": "4592:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4609:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4612:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4612:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4602:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:6"
																},
																"nativeSrc": "4602:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4602:88:6"
															},
															"nativeSrc": "4602:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4602:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4706:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4706:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4709:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4709:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4699:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4699:6:6"
																},
																"nativeSrc": "4699:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4699:15:6"
															},
															"nativeSrc": "4699:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4699:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4730:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4730:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4733:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4733:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4723:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:6"
																},
																"nativeSrc": "4723:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4723:15:6"
															},
															"nativeSrc": "4723:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4723:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4564:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4564:180:6"
											},
											{
												"body": {
													"nativeSrc": "4801:269:6",
													"nodeType": "YulBlock",
													"src": "4801:269:6",
													"statements": [
														{
															"nativeSrc": "4811:22:6",
															"nodeType": "YulAssignment",
															"src": "4811:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4825:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4825:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4831:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4831:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4821:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4821:3:6"
																},
																"nativeSrc": "4821:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4821:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4811:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:6"
																}
															]
														},
														{
															"nativeSrc": "4842:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4842:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4872:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4872:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4878:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4878:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4868:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4868:3:6"
																},
																"nativeSrc": "4868:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4868:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4846:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4846:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4919:51:6",
																"nodeType": "YulBlock",
																"src": "4919:51:6",
																"statements": [
																	{
																		"nativeSrc": "4933:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4933:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4947:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4947:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4955:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4955:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4943:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4943:3:6"
																			},
																			"nativeSrc": "4943:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4943:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4933:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4933:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4899:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4899:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4892:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4892:6:6"
																},
																"nativeSrc": "4892:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4892:26:6"
															},
															"nativeSrc": "4889:81:6",
															"nodeType": "YulIf",
															"src": "4889:81:6"
														},
														{
															"body": {
																"nativeSrc": "5022:42:6",
																"nodeType": "YulBlock",
																"src": "5022:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5036:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5036:16:6"
																			},
																			"nativeSrc": "5036:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5036:18:6"
																		},
																		"nativeSrc": "5036:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5036:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4986:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4986:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5009:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5009:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5017:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5017:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5006:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5006:2:6"
																		},
																		"nativeSrc": "5006:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5006:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4983:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4983:2:6"
																},
																"nativeSrc": "4983:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4983:38:6"
															},
															"nativeSrc": "4980:84:6",
															"nodeType": "YulIf",
															"src": "4980:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4750:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4785:4:6",
														"nodeType": "YulTypedName",
														"src": "4785:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4794:6:6",
														"nodeType": "YulTypedName",
														"src": "4794:6:6",
														"type": ""
													}
												],
												"src": "4750:320:6"
											},
											{
												"body": {
													"nativeSrc": "5130:87:6",
													"nodeType": "YulBlock",
													"src": "5130:87:6",
													"statements": [
														{
															"nativeSrc": "5140:11:6",
															"nodeType": "YulAssignment",
															"src": "5140:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "5148:3:6",
																"nodeType": "YulIdentifier",
																"src": "5148:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5140:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5140:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5168:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5168:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5171:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5161:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:6"
																},
																"nativeSrc": "5161:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5161:14:6"
															},
															"nativeSrc": "5161:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "5161:14:6"
														},
														{
															"nativeSrc": "5184:26:6",
															"nodeType": "YulAssignment",
															"src": "5184:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5202:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5202:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5205:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5192:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5192:9:6"
																},
																"nativeSrc": "5192:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5192:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5184:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5184:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5076:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5117:3:6",
														"nodeType": "YulTypedName",
														"src": "5117:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5125:4:6",
														"nodeType": "YulTypedName",
														"src": "5125:4:6",
														"type": ""
													}
												],
												"src": "5076:141:6"
											},
											{
												"body": {
													"nativeSrc": "5267:49:6",
													"nodeType": "YulBlock",
													"src": "5267:49:6",
													"statements": [
														{
															"nativeSrc": "5277:33:6",
															"nodeType": "YulAssignment",
															"src": "5277:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5295:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5295:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5302:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5302:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5291:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5291:3:6"
																		},
																		"nativeSrc": "5291:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5291:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5307:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5307:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5287:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5287:3:6"
																},
																"nativeSrc": "5287:23:6",
																"nodeType": "YulFunctionCall",
																"src": "5287:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5277:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5277:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5223:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5250:5:6",
														"nodeType": "YulTypedName",
														"src": "5250:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5260:6:6",
														"nodeType": "YulTypedName",
														"src": "5260:6:6",
														"type": ""
													}
												],
												"src": "5223:93:6"
											},
											{
												"body": {
													"nativeSrc": "5375:54:6",
													"nodeType": "YulBlock",
													"src": "5375:54:6",
													"statements": [
														{
															"nativeSrc": "5385:37:6",
															"nodeType": "YulAssignment",
															"src": "5385:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5410:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5410:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5416:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5416:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5406:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5406:3:6"
																},
																"nativeSrc": "5406:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5406:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5385:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5385:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5322:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5350:4:6",
														"nodeType": "YulTypedName",
														"src": "5350:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5356:5:6",
														"nodeType": "YulTypedName",
														"src": "5356:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5366:8:6",
														"nodeType": "YulTypedName",
														"src": "5366:8:6",
														"type": ""
													}
												],
												"src": "5322:107:6"
											},
											{
												"body": {
													"nativeSrc": "5511:317:6",
													"nodeType": "YulBlock",
													"src": "5511:317:6",
													"statements": [
														{
															"nativeSrc": "5521:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5542:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5542:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5554:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5538:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5538:3:6"
																},
																"nativeSrc": "5538:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5538:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5525:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5525:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5565:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5565:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5596:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5596:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5607:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5607:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5577:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5577:18:6"
																},
																"nativeSrc": "5577:97:6",
																"nodeType": "YulFunctionCall",
																"src": "5577:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5569:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5569:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5683:51:6",
															"nodeType": "YulAssignment",
															"src": "5683:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5714:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5714:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5725:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5725:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5695:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5695:18:6"
																},
																"nativeSrc": "5695:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5695:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5683:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5683:8:6"
																}
															]
														},
														{
															"nativeSrc": "5743:30:6",
															"nodeType": "YulAssignment",
															"src": "5743:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5756:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5756:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5767:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5767:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5763:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5763:3:6"
																		},
																		"nativeSrc": "5763:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5763:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5752:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5752:3:6"
																},
																"nativeSrc": "5752:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5752:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5743:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5743:5:6"
																}
															]
														},
														{
															"nativeSrc": "5782:40:6",
															"nodeType": "YulAssignment",
															"src": "5782:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5795:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5795:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5806:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5806:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5816:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5816:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5802:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5802:3:6"
																		},
																		"nativeSrc": "5802:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5802:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5792:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5792:2:6"
																},
																"nativeSrc": "5792:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5792:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5782:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5782:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5435:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5472:5:6",
														"nodeType": "YulTypedName",
														"src": "5472:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5479:10:6",
														"nodeType": "YulTypedName",
														"src": "5479:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5491:8:6",
														"nodeType": "YulTypedName",
														"src": "5491:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5504:6:6",
														"nodeType": "YulTypedName",
														"src": "5504:6:6",
														"type": ""
													}
												],
												"src": "5435:393:6"
											},
											{
												"body": {
													"nativeSrc": "5866:28:6",
													"nodeType": "YulBlock",
													"src": "5866:28:6",
													"statements": [
														{
															"nativeSrc": "5876:12:6",
															"nodeType": "YulAssignment",
															"src": "5876:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5883:5:6",
																"nodeType": "YulIdentifier",
																"src": "5883:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5876:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5876:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5834:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5852:5:6",
														"nodeType": "YulTypedName",
														"src": "5852:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5862:3:6",
														"nodeType": "YulTypedName",
														"src": "5862:3:6",
														"type": ""
													}
												],
												"src": "5834:60:6"
											},
											{
												"body": {
													"nativeSrc": "5960:82:6",
													"nodeType": "YulBlock",
													"src": "5960:82:6",
													"statements": [
														{
															"nativeSrc": "5970:66:6",
															"nodeType": "YulAssignment",
															"src": "5970:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6028:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6028:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6010:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "6010:17:6"
																				},
																				"nativeSrc": "6010:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6010:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6001:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "6001:8:6"
																		},
																		"nativeSrc": "6001:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6001:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5983:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5983:17:6"
																},
																"nativeSrc": "5983:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5983:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5970:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5970:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5900:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5940:5:6",
														"nodeType": "YulTypedName",
														"src": "5940:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5950:9:6",
														"nodeType": "YulTypedName",
														"src": "5950:9:6",
														"type": ""
													}
												],
												"src": "5900:142:6"
											},
											{
												"body": {
													"nativeSrc": "6095:28:6",
													"nodeType": "YulBlock",
													"src": "6095:28:6",
													"statements": [
														{
															"nativeSrc": "6105:12:6",
															"nodeType": "YulAssignment",
															"src": "6105:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "6112:5:6",
																"nodeType": "YulIdentifier",
																"src": "6112:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6105:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6105:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6048:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6081:5:6",
														"nodeType": "YulTypedName",
														"src": "6081:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6091:3:6",
														"nodeType": "YulTypedName",
														"src": "6091:3:6",
														"type": ""
													}
												],
												"src": "6048:75:6"
											},
											{
												"body": {
													"nativeSrc": "6205:193:6",
													"nodeType": "YulBlock",
													"src": "6205:193:6",
													"statements": [
														{
															"nativeSrc": "6215:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6215:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6270:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "6270:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6239:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6239:30:6"
																},
																"nativeSrc": "6239:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6239:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6219:16:6",
																	"nodeType": "YulTypedName",
																	"src": "6219:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6294:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6294:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6334:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6334:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6328:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6328:5:6"
																				},
																				"nativeSrc": "6328:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6328:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6341:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6341:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6373:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6373:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6349:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "6349:23:6"
																				},
																				"nativeSrc": "6349:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6349:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6300:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "6300:27:6"
																		},
																		"nativeSrc": "6300:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6300:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6287:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6287:6:6"
																},
																"nativeSrc": "6287:105:6",
																"nodeType": "YulFunctionCall",
																"src": "6287:105:6"
															},
															"nativeSrc": "6287:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "6287:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6129:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6182:4:6",
														"nodeType": "YulTypedName",
														"src": "6182:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6188:6:6",
														"nodeType": "YulTypedName",
														"src": "6188:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6196:7:6",
														"nodeType": "YulTypedName",
														"src": "6196:7:6",
														"type": ""
													}
												],
												"src": "6129:269:6"
											},
											{
												"body": {
													"nativeSrc": "6453:24:6",
													"nodeType": "YulBlock",
													"src": "6453:24:6",
													"statements": [
														{
															"nativeSrc": "6463:8:6",
															"nodeType": "YulAssignment",
															"src": "6463:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6470:1:6",
																"nodeType": "YulLiteral",
																"src": "6470:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6463:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6463:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6404:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6449:3:6",
														"nodeType": "YulTypedName",
														"src": "6449:3:6",
														"type": ""
													}
												],
												"src": "6404:73:6"
											},
											{
												"body": {
													"nativeSrc": "6536:136:6",
													"nodeType": "YulBlock",
													"src": "6536:136:6",
													"statements": [
														{
															"nativeSrc": "6546:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6546:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6560:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6560:30:6"
																},
																"nativeSrc": "6560:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6560:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6550:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6550:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6645:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6645:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6651:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6659:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6659:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6601:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6601:43:6"
																},
																"nativeSrc": "6601:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6601:65:6"
															},
															"nativeSrc": "6601:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6601:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6483:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6522:4:6",
														"nodeType": "YulTypedName",
														"src": "6522:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6528:6:6",
														"nodeType": "YulTypedName",
														"src": "6528:6:6",
														"type": ""
													}
												],
												"src": "6483:189:6"
											},
											{
												"body": {
													"nativeSrc": "6728:136:6",
													"nodeType": "YulBlock",
													"src": "6728:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6795:63:6",
																"nodeType": "YulBlock",
																"src": "6795:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6839:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6839:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6846:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6846:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6809:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "6809:29:6"
																			},
																			"nativeSrc": "6809:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6809:39:6"
																		},
																		"nativeSrc": "6809:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6809:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6748:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6748:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6755:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6755:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6745:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6745:2:6"
																},
																"nativeSrc": "6745:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6745:14:6"
															},
															"nativeSrc": "6738:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6760:26:6",
																"nodeType": "YulBlock",
																"src": "6760:26:6",
																"statements": [
																	{
																		"nativeSrc": "6762:22:6",
																		"nodeType": "YulAssignment",
																		"src": "6762:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6775:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6775:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6782:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6782:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6771:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6771:3:6"
																			},
																			"nativeSrc": "6771:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6771:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6762:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6762:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6742:2:6",
																"nodeType": "YulBlock",
																"src": "6742:2:6",
																"statements": []
															},
															"src": "6738:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6678:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6716:5:6",
														"nodeType": "YulTypedName",
														"src": "6716:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6723:3:6",
														"nodeType": "YulTypedName",
														"src": "6723:3:6",
														"type": ""
													}
												],
												"src": "6678:186:6"
											},
											{
												"body": {
													"nativeSrc": "6949:464:6",
													"nodeType": "YulBlock",
													"src": "6949:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6975:431:6",
																"nodeType": "YulBlock",
																"src": "6975:431:6",
																"statements": [
																	{
																		"nativeSrc": "6989:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6989:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7037:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "7037:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7005:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "7005:31:6"
																			},
																			"nativeSrc": "7005:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7005:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6993:8:6",
																				"nodeType": "YulTypedName",
																				"src": "6993:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7056:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7056:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7079:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "7079:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7107:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "7107:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7089:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "7089:17:6"
																					},
																					"nativeSrc": "7089:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7089:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7075:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7075:3:6"
																			},
																			"nativeSrc": "7075:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7075:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7060:11:6",
																				"nodeType": "YulTypedName",
																				"src": "7060:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7276:27:6",
																			"nodeType": "YulBlock",
																			"src": "7276:27:6",
																			"statements": [
																				{
																					"nativeSrc": "7278:23:6",
																					"nodeType": "YulAssignment",
																					"src": "7278:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7293:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "7293:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7278:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "7278:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7260:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "7260:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7272:2:6",
																					"nodeType": "YulLiteral",
																					"src": "7272:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7257:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "7257:2:6"
																			},
																			"nativeSrc": "7257:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7257:18:6"
																		},
																		"nativeSrc": "7254:49:6",
																		"nodeType": "YulIf",
																		"src": "7254:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7345:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "7345:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7362:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7362:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7390:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7390:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7372:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7372:17:6"
																							},
																							"nativeSrc": "7372:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7372:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7358:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7358:3:6"
																					},
																					"nativeSrc": "7358:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7358:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7316:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "7316:28:6"
																			},
																			"nativeSrc": "7316:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7316:80:6"
																		},
																		"nativeSrc": "7316:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7316:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6966:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6966:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6971:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6971:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6963:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6963:2:6"
																},
																"nativeSrc": "6963:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6963:11:6"
															},
															"nativeSrc": "6960:446:6",
															"nodeType": "YulIf",
															"src": "6960:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6870:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6925:5:6",
														"nodeType": "YulTypedName",
														"src": "6925:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6932:3:6",
														"nodeType": "YulTypedName",
														"src": "6932:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6937:10:6",
														"nodeType": "YulTypedName",
														"src": "6937:10:6",
														"type": ""
													}
												],
												"src": "6870:543:6"
											},
											{
												"body": {
													"nativeSrc": "7482:54:6",
													"nodeType": "YulBlock",
													"src": "7482:54:6",
													"statements": [
														{
															"nativeSrc": "7492:37:6",
															"nodeType": "YulAssignment",
															"src": "7492:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7517:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7517:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7523:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7523:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7513:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7513:3:6"
																},
																"nativeSrc": "7513:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7513:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7492:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "7492:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7419:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7457:4:6",
														"nodeType": "YulTypedName",
														"src": "7457:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7463:5:6",
														"nodeType": "YulTypedName",
														"src": "7463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7473:8:6",
														"nodeType": "YulTypedName",
														"src": "7473:8:6",
														"type": ""
													}
												],
												"src": "7419:117:6"
											},
											{
												"body": {
													"nativeSrc": "7593:118:6",
													"nodeType": "YulBlock",
													"src": "7593:118:6",
													"statements": [
														{
															"nativeSrc": "7603:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7603:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7652:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7652:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7655:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7655:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7648:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7648:3:6"
																				},
																				"nativeSrc": "7648:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7648:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7667:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7667:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7663:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7663:3:6"
																				},
																				"nativeSrc": "7663:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7663:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7619:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7619:28:6"
																		},
																		"nativeSrc": "7619:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7619:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7615:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7615:3:6"
																},
																"nativeSrc": "7615:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7615:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7607:4:6",
																	"nodeType": "YulTypedName",
																	"src": "7607:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7680:25:6",
															"nodeType": "YulAssignment",
															"src": "7680:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7694:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7694:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7700:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7700:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7690:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7690:3:6"
																},
																"nativeSrc": "7690:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7690:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7680:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7680:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7542:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7570:4:6",
														"nodeType": "YulTypedName",
														"src": "7570:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7576:5:6",
														"nodeType": "YulTypedName",
														"src": "7576:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7586:6:6",
														"nodeType": "YulTypedName",
														"src": "7586:6:6",
														"type": ""
													}
												],
												"src": "7542:169:6"
											},
											{
												"body": {
													"nativeSrc": "7797:214:6",
													"nodeType": "YulBlock",
													"src": "7797:214:6",
													"statements": [
														{
															"nativeSrc": "7930:37:6",
															"nodeType": "YulAssignment",
															"src": "7930:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7957:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7957:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7963:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7963:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7938:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "7938:18:6"
																},
																"nativeSrc": "7938:29:6",
																"nodeType": "YulFunctionCall",
																"src": "7938:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7930:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7930:4:6"
																}
															]
														},
														{
															"nativeSrc": "7976:29:6",
															"nodeType": "YulAssignment",
															"src": "7976:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7987:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7987:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7997:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7997:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8000:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8000:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7993:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7993:3:6"
																		},
																		"nativeSrc": "7993:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7993:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7984:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7984:2:6"
																},
																"nativeSrc": "7984:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7984:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7976:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7976:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7716:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7778:4:6",
														"nodeType": "YulTypedName",
														"src": "7778:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7784:3:6",
														"nodeType": "YulTypedName",
														"src": "7784:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7792:4:6",
														"nodeType": "YulTypedName",
														"src": "7792:4:6",
														"type": ""
													}
												],
												"src": "7716:295:6"
											},
											{
												"body": {
													"nativeSrc": "8108:1303:6",
													"nodeType": "YulBlock",
													"src": "8108:1303:6",
													"statements": [
														{
															"nativeSrc": "8119:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8119:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8166:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8133:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "8133:32:6"
																},
																"nativeSrc": "8133:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8133:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8123:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8123:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8255:22:6",
																"nodeType": "YulBlock",
																"src": "8255:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8257:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8257:16:6"
																			},
																			"nativeSrc": "8257:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8257:18:6"
																		},
																		"nativeSrc": "8257:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8257:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8227:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8227:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8235:18:6",
																		"nodeType": "YulLiteral",
																		"src": "8235:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8224:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8224:2:6"
																},
																"nativeSrc": "8224:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8224:30:6"
															},
															"nativeSrc": "8221:56:6",
															"nodeType": "YulIf",
															"src": "8221:56:6"
														},
														{
															"nativeSrc": "8287:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8287:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8333:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8333:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8327:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8327:5:6"
																		},
																		"nativeSrc": "8327:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8327:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8301:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "8301:25:6"
																},
																"nativeSrc": "8301:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8301:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8291:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8291:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8432:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8432:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8438:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8438:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8446:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8386:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "8386:45:6"
																},
																"nativeSrc": "8386:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8386:67:6"
															},
															"nativeSrc": "8386:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "8386:67:6"
														},
														{
															"nativeSrc": "8463:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8463:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8480:1:6",
																"nodeType": "YulLiteral",
																"src": "8480:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8467:9:6",
																	"nodeType": "YulTypedName",
																	"src": "8467:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8491:17:6",
															"nodeType": "YulAssignment",
															"src": "8491:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8504:4:6",
																"nodeType": "YulLiteral",
																"src": "8504:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8491:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8491:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8555:611:6",
																		"nodeType": "YulBlock",
																		"src": "8555:611:6",
																		"statements": [
																			{
																				"nativeSrc": "8569:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8569:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8588:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8588:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8600:4:6",
																									"nodeType": "YulLiteral",
																									"src": "8600:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8596:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8596:3:6"
																							},
																							"nativeSrc": "8596:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8596:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8584:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8584:3:6"
																					},
																					"nativeSrc": "8584:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8584:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8573:7:6",
																						"nodeType": "YulTypedName",
																						"src": "8573:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8620:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8620:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8666:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8666:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8634:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "8634:31:6"
																					},
																					"nativeSrc": "8634:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8634:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8624:6:6",
																						"nodeType": "YulTypedName",
																						"src": "8624:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8684:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8684:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8693:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8693:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8688:1:6",
																						"nodeType": "YulTypedName",
																						"src": "8688:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8752:163:6",
																					"nodeType": "YulBlock",
																					"src": "8752:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8777:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8777:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8795:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "8795:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8800:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "8800:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8791:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8791:3:6"
																												},
																												"nativeSrc": "8791:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8791:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8785:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "8785:5:6"
																										},
																										"nativeSrc": "8785:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8785:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8770:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8770:6:6"
																								},
																								"nativeSrc": "8770:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8770:42:6"
																							},
																							"nativeSrc": "8770:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8770:42:6"
																						},
																						{
																							"nativeSrc": "8829:24:6",
																							"nodeType": "YulAssignment",
																							"src": "8829:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8843:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8843:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8851:1:6",
																										"nodeType": "YulLiteral",
																										"src": "8851:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8839:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8839:3:6"
																								},
																								"nativeSrc": "8839:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8839:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8829:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8829:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8870:31:6",
																							"nodeType": "YulAssignment",
																							"src": "8870:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8887:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "8887:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8898:2:6",
																										"nodeType": "YulLiteral",
																										"src": "8898:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8883:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8883:3:6"
																								},
																								"nativeSrc": "8883:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8883:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8870:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "8870:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8718:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "8718:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8721:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8721:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8715:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8715:2:6"
																					},
																					"nativeSrc": "8715:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8715:14:6"
																				},
																				"nativeSrc": "8707:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8730:21:6",
																					"nodeType": "YulBlock",
																					"src": "8730:21:6",
																					"statements": [
																						{
																							"nativeSrc": "8732:17:6",
																							"nodeType": "YulAssignment",
																							"src": "8732:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8741:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "8741:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8744:4:6",
																										"nodeType": "YulLiteral",
																										"src": "8744:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8737:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8737:3:6"
																								},
																								"nativeSrc": "8737:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8737:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8732:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "8732:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8711:3:6",
																					"nodeType": "YulBlock",
																					"src": "8711:3:6",
																					"statements": []
																				},
																				"src": "8707:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "8951:156:6",
																					"nodeType": "YulBlock",
																					"src": "8951:156:6",
																					"statements": [
																						{
																							"nativeSrc": "8969:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8969:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8996:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8996:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9001:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9001:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8992:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8992:3:6"
																										},
																										"nativeSrc": "8992:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8992:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8986:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8986:5:6"
																								},
																								"nativeSrc": "8986:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8986:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8973:9:6",
																									"nodeType": "YulTypedName",
																									"src": "8973:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9036:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "9036:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9063:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9063:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9078:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "9078:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9086:4:6",
																														"nodeType": "YulLiteral",
																														"src": "9086:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9074:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "9074:3:6"
																												},
																												"nativeSrc": "9074:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "9074:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9044:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "9044:18:6"
																										},
																										"nativeSrc": "9044:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9044:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9029:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9029:6:6"
																								},
																								"nativeSrc": "9029:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9029:64:6"
																							},
																							"nativeSrc": "9029:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "9029:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8934:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8934:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8943:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8943:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8931:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8931:2:6"
																					},
																					"nativeSrc": "8931:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8931:19:6"
																				},
																				"nativeSrc": "8928:179:6",
																				"nodeType": "YulIf",
																				"src": "8928:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9127:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9127:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9141:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "9141:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9149:1:6",
																											"nodeType": "YulLiteral",
																											"src": "9149:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9137:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "9137:3:6"
																									},
																									"nativeSrc": "9137:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "9137:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9153:1:6",
																									"nodeType": "YulLiteral",
																									"src": "9153:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9133:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9133:3:6"
																							},
																							"nativeSrc": "9133:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9133:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9120:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9120:6:6"
																					},
																					"nativeSrc": "9120:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9120:36:6"
																				},
																				"nativeSrc": "9120:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9120:36:6"
																			}
																		]
																	},
																	"nativeSrc": "8548:618:6",
																	"nodeType": "YulCase",
																	"src": "8548:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8553:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8553:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9183:222:6",
																		"nodeType": "YulBlock",
																		"src": "9183:222:6",
																		"statements": [
																			{
																				"nativeSrc": "9197:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9197:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9210:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9210:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9201:5:6",
																						"nodeType": "YulTypedName",
																						"src": "9201:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9234:67:6",
																					"nodeType": "YulBlock",
																					"src": "9234:67:6",
																					"statements": [
																						{
																							"nativeSrc": "9252:35:6",
																							"nodeType": "YulAssignment",
																							"src": "9252:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9271:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9271:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9276:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9276:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9267:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9267:3:6"
																										},
																										"nativeSrc": "9267:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9267:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9261:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9261:5:6"
																								},
																								"nativeSrc": "9261:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9261:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9252:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9252:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9227:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9227:6:6"
																				},
																				"nativeSrc": "9224:77:6",
																				"nodeType": "YulIf",
																				"src": "9224:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9321:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9321:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9380:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9380:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9387:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9387:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9327:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "9327:52:6"
																							},
																							"nativeSrc": "9327:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9327:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9314:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9314:6:6"
																					},
																					"nativeSrc": "9314:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9314:81:6"
																				},
																				"nativeSrc": "9314:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9314:81:6"
																			}
																		]
																	},
																	"nativeSrc": "9175:230:6",
																	"nodeType": "YulCase",
																	"src": "9175:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8528:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8528:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8536:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8536:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8525:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8525:2:6"
																},
																"nativeSrc": "8525:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8525:14:6"
															},
															"nativeSrc": "8518:887:6",
															"nodeType": "YulSwitch",
															"src": "8518:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8016:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8097:4:6",
														"nodeType": "YulTypedName",
														"src": "8097:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8103:3:6",
														"nodeType": "YulTypedName",
														"src": "8103:3:6",
														"type": ""
													}
												],
												"src": "8016:1395:6"
											},
											{
												"body": {
													"nativeSrc": "9445:152:6",
													"nodeType": "YulBlock",
													"src": "9445:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9462:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9462:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9465:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9465:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9455:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9455:6:6"
																},
																"nativeSrc": "9455:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9455:88:6"
															},
															"nativeSrc": "9455:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9455:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9559:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9559:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9562:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9562:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9552:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9552:6:6"
																},
																"nativeSrc": "9552:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9552:15:6"
															},
															"nativeSrc": "9552:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9552:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9583:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9583:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9586:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9586:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9576:6:6"
																},
																"nativeSrc": "9576:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9576:15:6"
															},
															"nativeSrc": "9576:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9576:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9417:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9417:180:6"
											},
											{
												"body": {
													"nativeSrc": "9654:51:6",
													"nodeType": "YulBlock",
													"src": "9654:51:6",
													"statements": [
														{
															"nativeSrc": "9664:34:6",
															"nodeType": "YulAssignment",
															"src": "9664:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9689:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9689:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9692:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9692:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9685:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9685:3:6"
																},
																"nativeSrc": "9685:13:6",
																"nodeType": "YulFunctionCall",
																"src": "9685:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9664:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "9664:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9603:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9635:5:6",
														"nodeType": "YulTypedName",
														"src": "9635:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9645:8:6",
														"nodeType": "YulTypedName",
														"src": "9645:8:6",
														"type": ""
													}
												],
												"src": "9603:102:6"
											},
											{
												"body": {
													"nativeSrc": "9784:775:6",
													"nodeType": "YulBlock",
													"src": "9784:775:6",
													"statements": [
														{
															"nativeSrc": "9794:15:6",
															"nodeType": "YulAssignment",
															"src": "9794:15:6",
															"value": {
																"name": "_power",
																"nativeSrc": "9803:6:6",
																"nodeType": "YulIdentifier",
																"src": "9803:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9794:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9794:5:6"
																}
															]
														},
														{
															"nativeSrc": "9818:14:6",
															"nodeType": "YulAssignment",
															"src": "9818:14:6",
															"value": {
																"name": "_base",
																"nativeSrc": "9827:5:6",
																"nodeType": "YulIdentifier",
																"src": "9827:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9818:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9818:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9876:677:6",
																"nodeType": "YulBlock",
																"src": "9876:677:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9964:22:6",
																			"nodeType": "YulBlock",
																			"src": "9964:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9966:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "9966:16:6"
																						},
																						"nativeSrc": "9966:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9966:18:6"
																					},
																					"nativeSrc": "9966:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "9966:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9942:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "9942:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9952:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9952:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9957:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9957:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9948:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9948:3:6"
																					},
																					"nativeSrc": "9948:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9948:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9939:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "9939:2:6"
																			},
																			"nativeSrc": "9939:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9939:24:6"
																		},
																		"nativeSrc": "9936:50:6",
																		"nodeType": "YulIf",
																		"src": "9936:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "10031:419:6",
																			"nodeType": "YulBlock",
																			"src": "10031:419:6",
																			"statements": [
																				{
																					"nativeSrc": "10411:25:6",
																					"nodeType": "YulAssignment",
																					"src": "10411:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10424:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "10424:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10431:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "10431:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10420:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10420:3:6"
																						},
																						"nativeSrc": "10420:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10420:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10411:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "10411:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10006:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "10006:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10016:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10016:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10002:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "10002:3:6"
																			},
																			"nativeSrc": "10002:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10002:16:6"
																		},
																		"nativeSrc": "9999:451:6",
																		"nodeType": "YulIf",
																		"src": "9999:451:6"
																	},
																	{
																		"nativeSrc": "10463:23:6",
																		"nodeType": "YulAssignment",
																		"src": "10463:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10475:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "10475:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10481:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "10481:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10471:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "10471:3:6"
																			},
																			"nativeSrc": "10471:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10471:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10463:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10463:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10499:44:6",
																		"nodeType": "YulAssignment",
																		"src": "10499:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10534:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "10534:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10511:22:6",
																				"nodeType": "YulIdentifier",
																				"src": "10511:22:6"
																			},
																			"nativeSrc": "10511:32:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10511:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10499:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "10499:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9852:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "9852:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9862:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9862:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9849:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9849:2:6"
																},
																"nativeSrc": "9849:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9849:15:6"
															},
															"nativeSrc": "9841:712:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9865:2:6",
																"nodeType": "YulBlock",
																"src": "9865:2:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9845:3:6",
																"nodeType": "YulBlock",
																"src": "9845:3:6",
																"statements": []
															},
															"src": "9841:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9711:848:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9739:6:6",
														"nodeType": "YulTypedName",
														"src": "9739:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9747:5:6",
														"nodeType": "YulTypedName",
														"src": "9747:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9754:8:6",
														"nodeType": "YulTypedName",
														"src": "9754:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9764:3:6",
														"nodeType": "YulTypedName",
														"src": "9764:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9772:5:6",
														"nodeType": "YulTypedName",
														"src": "9772:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9779:4:6",
														"nodeType": "YulTypedName",
														"src": "9779:4:6",
														"type": ""
													}
												],
												"src": "9711:848:6"
											},
											{
												"body": {
													"nativeSrc": "10625:1013:6",
													"nodeType": "YulBlock",
													"src": "10625:1013:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "10820:20:6",
																"nodeType": "YulBlock",
																"src": "10820:20:6",
																"statements": [
																	{
																		"nativeSrc": "10822:10:6",
																		"nodeType": "YulAssignment",
																		"src": "10822:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10831:1:6",
																			"nodeType": "YulLiteral",
																			"src": "10831:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10822:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10822:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10833:5:6",
																		"nodeType": "YulLeave",
																		"src": "10833:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10810:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "10810:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10803:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10803:6:6"
																},
																"nativeSrc": "10803:16:6",
																"nodeType": "YulFunctionCall",
																"src": "10803:16:6"
															},
															"nativeSrc": "10800:40:6",
															"nodeType": "YulIf",
															"src": "10800:40:6"
														},
														{
															"body": {
																"nativeSrc": "10865:20:6",
																"nodeType": "YulBlock",
																"src": "10865:20:6",
																"statements": [
																	{
																		"nativeSrc": "10867:10:6",
																		"nodeType": "YulAssignment",
																		"src": "10867:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10876:1:6",
																			"nodeType": "YulLiteral",
																			"src": "10876:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10867:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10867:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10878:5:6",
																		"nodeType": "YulLeave",
																		"src": "10878:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10859:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10859:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10852:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10852:6:6"
																},
																"nativeSrc": "10852:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10852:12:6"
															},
															"nativeSrc": "10849:36:6",
															"nodeType": "YulIf",
															"src": "10849:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10995:20:6",
																		"nodeType": "YulBlock",
																		"src": "10995:20:6",
																		"statements": [
																			{
																				"nativeSrc": "10997:10:6",
																				"nodeType": "YulAssignment",
																				"src": "10997:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11006:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11006:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10997:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "10997:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "11008:5:6",
																				"nodeType": "YulLeave",
																				"src": "11008:5:6"
																			}
																		]
																	},
																	"nativeSrc": "10988:27:6",
																	"nodeType": "YulCase",
																	"src": "10988:27:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10993:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10993:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11039:176:6",
																		"nodeType": "YulBlock",
																		"src": "11039:176:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "11074:22:6",
																					"nodeType": "YulBlock",
																					"src": "11074:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11076:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "11076:16:6"
																								},
																								"nativeSrc": "11076:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "11076:18:6"
																							},
																							"nativeSrc": "11076:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "11076:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "11059:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "11059:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11069:3:6",
																							"nodeType": "YulLiteral",
																							"src": "11069:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11056:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "11056:2:6"
																					},
																					"nativeSrc": "11056:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11056:17:6"
																				},
																				"nativeSrc": "11053:43:6",
																				"nodeType": "YulIf",
																				"src": "11053:43:6"
																			},
																			{
																				"nativeSrc": "11109:25:6",
																				"nodeType": "YulAssignment",
																				"src": "11109:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11122:1:6",
																							"nodeType": "YulLiteral",
																							"src": "11122:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11125:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "11125:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11118:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "11118:3:6"
																					},
																					"nativeSrc": "11118:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11118:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11109:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "11109:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11165:22:6",
																					"nodeType": "YulBlock",
																					"src": "11165:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11167:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "11167:16:6"
																								},
																								"nativeSrc": "11167:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "11167:18:6"
																							},
																							"nativeSrc": "11167:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "11167:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11153:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "11153:5:6"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11160:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "11160:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11150:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "11150:2:6"
																					},
																					"nativeSrc": "11150:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11150:14:6"
																				},
																				"nativeSrc": "11147:40:6",
																				"nodeType": "YulIf",
																				"src": "11147:40:6"
																			},
																			{
																				"nativeSrc": "11200:5:6",
																				"nodeType": "YulLeave",
																				"src": "11200:5:6"
																			}
																		]
																	},
																	"nativeSrc": "11024:191:6",
																	"nodeType": "YulCase",
																	"src": "11024:191:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11029:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11029:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10945:4:6",
																"nodeType": "YulIdentifier",
																"src": "10945:4:6"
															},
															"nativeSrc": "10938:277:6",
															"nodeType": "YulSwitch",
															"src": "10938:277:6"
														},
														{
															"body": {
																"nativeSrc": "11347:123:6",
																"nodeType": "YulBlock",
																"src": "11347:123:6",
																"statements": [
																	{
																		"nativeSrc": "11361:28:6",
																		"nodeType": "YulAssignment",
																		"src": "11361:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11374:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "11374:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11380:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "11380:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11370:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "11370:3:6"
																			},
																			"nativeSrc": "11370:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11370:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11361:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "11361:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11420:22:6",
																			"nodeType": "YulBlock",
																			"src": "11420:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11422:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "11422:16:6"
																						},
																						"nativeSrc": "11422:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "11422:18:6"
																					},
																					"nativeSrc": "11422:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "11422:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11408:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "11408:5:6"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11415:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11415:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11405:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "11405:2:6"
																			},
																			"nativeSrc": "11405:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11405:14:6"
																		},
																		"nativeSrc": "11402:40:6",
																		"nodeType": "YulIf",
																		"src": "11402:40:6"
																	},
																	{
																		"nativeSrc": "11455:5:6",
																		"nodeType": "YulLeave",
																		"src": "11455:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11250:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "11250:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11256:2:6",
																						"nodeType": "YulLiteral",
																						"src": "11256:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11247:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11247:2:6"
																				},
																				"nativeSrc": "11247:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11247:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11264:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "11264:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11274:2:6",
																						"nodeType": "YulLiteral",
																						"src": "11274:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11261:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11261:2:6"
																				},
																				"nativeSrc": "11261:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11261:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11243:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11243:3:6"
																		},
																		"nativeSrc": "11243:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11243:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11299:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "11299:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11305:3:6",
																						"nodeType": "YulLiteral",
																						"src": "11305:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11296:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11296:2:6"
																				},
																				"nativeSrc": "11296:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11296:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11314:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "11314:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11324:2:6",
																						"nodeType": "YulLiteral",
																						"src": "11324:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11311:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11311:2:6"
																				},
																				"nativeSrc": "11311:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11311:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11292:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11292:3:6"
																		},
																		"nativeSrc": "11292:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11292:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11227:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11227:2:6"
																},
																"nativeSrc": "11227:111:6",
																"nodeType": "YulFunctionCall",
																"src": "11227:111:6"
															},
															"nativeSrc": "11224:246:6",
															"nodeType": "YulIf",
															"src": "11224:246:6"
														},
														{
															"nativeSrc": "11480:57:6",
															"nodeType": "YulAssignment",
															"src": "11480:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11514:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11514:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11517:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11517:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11523:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "11523:8:6"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11533:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11533:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11495:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "11495:18:6"
																},
																"nativeSrc": "11495:42:6",
																"nodeType": "YulFunctionCall",
																"src": "11495:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11480:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11480:5:6"
																},
																{
																	"name": "base",
																	"nativeSrc": "11487:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11487:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11576:22:6",
																"nodeType": "YulBlock",
																"src": "11576:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11578:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11578:16:6"
																			},
																			"nativeSrc": "11578:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11578:18:6"
																		},
																		"nativeSrc": "11578:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11578:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11553:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11553:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11564:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "11564:3:6"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11569:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11569:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11560:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11560:3:6"
																		},
																		"nativeSrc": "11560:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11560:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11550:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11550:2:6"
																},
																"nativeSrc": "11550:25:6",
																"nodeType": "YulFunctionCall",
																"src": "11550:25:6"
															},
															"nativeSrc": "11547:51:6",
															"nodeType": "YulIf",
															"src": "11547:51:6"
														},
														{
															"nativeSrc": "11607:25:6",
															"nodeType": "YulAssignment",
															"src": "11607:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11620:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11620:5:6"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11627:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11627:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11616:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11616:3:6"
																},
																"nativeSrc": "11616:16:6",
																"nodeType": "YulFunctionCall",
																"src": "11616:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11607:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11607:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10565:1073:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10595:4:6",
														"nodeType": "YulTypedName",
														"src": "10595:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10601:8:6",
														"nodeType": "YulTypedName",
														"src": "10601:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10611:3:6",
														"nodeType": "YulTypedName",
														"src": "10611:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10619:5:6",
														"nodeType": "YulTypedName",
														"src": "10619:5:6",
														"type": ""
													}
												],
												"src": "10565:1073:6"
											},
											{
												"body": {
													"nativeSrc": "11708:217:6",
													"nodeType": "YulBlock",
													"src": "11708:217:6",
													"statements": [
														{
															"nativeSrc": "11718:31:6",
															"nodeType": "YulAssignment",
															"src": "11718:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11744:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11744:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11726:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11726:17:6"
																},
																"nativeSrc": "11726:23:6",
																"nodeType": "YulFunctionCall",
																"src": "11726:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11718:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11718:4:6"
																}
															]
														},
														{
															"nativeSrc": "11758:37:6",
															"nodeType": "YulAssignment",
															"src": "11758:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11786:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "11786:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "11770:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "11770:15:6"
																},
																"nativeSrc": "11770:25:6",
																"nodeType": "YulFunctionCall",
																"src": "11770:25:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11758:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "11758:8:6"
																}
															]
														},
														{
															"nativeSrc": "11805:113:6",
															"nodeType": "YulAssignment",
															"src": "11805:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11835:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11835:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11841:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "11841:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11851:66:6",
																		"nodeType": "YulLiteral",
																		"src": "11851:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11814:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "11814:20:6"
																},
																"nativeSrc": "11814:104:6",
																"nodeType": "YulFunctionCall",
																"src": "11814:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11805:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11805:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "11644:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11683:4:6",
														"nodeType": "YulTypedName",
														"src": "11683:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11689:8:6",
														"nodeType": "YulTypedName",
														"src": "11689:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11702:5:6",
														"nodeType": "YulTypedName",
														"src": "11702:5:6",
														"type": ""
													}
												],
												"src": "11644:281:6"
											},
											{
												"body": {
													"nativeSrc": "11979:362:6",
													"nodeType": "YulBlock",
													"src": "11979:362:6",
													"statements": [
														{
															"nativeSrc": "11989:25:6",
															"nodeType": "YulAssignment",
															"src": "11989:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12012:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12012:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11994:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11994:17:6"
																},
																"nativeSrc": "11994:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11994:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11989:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11989:1:6"
																}
															]
														},
														{
															"nativeSrc": "12023:25:6",
															"nodeType": "YulAssignment",
															"src": "12023:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12046:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12046:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12028:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12028:17:6"
																},
																"nativeSrc": "12028:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12028:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12023:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12023:1:6"
																}
															]
														},
														{
															"nativeSrc": "12057:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12057:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12080:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12080:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12083:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12083:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12076:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12076:3:6"
																},
																"nativeSrc": "12076:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12076:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12061:11:6",
																	"nodeType": "YulTypedName",
																	"src": "12061:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12094:41:6",
															"nodeType": "YulAssignment",
															"src": "12094:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12123:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "12123:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12105:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12105:17:6"
																},
																"nativeSrc": "12105:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12105:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12094:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "12094:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12312:22:6",
																"nodeType": "YulBlock",
																"src": "12312:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12314:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12314:16:6"
																			},
																			"nativeSrc": "12314:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12314:18:6"
																		},
																		"nativeSrc": "12314:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12314:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12245:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "12245:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12238:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "12238:6:6"
																				},
																				"nativeSrc": "12238:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12238:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12268:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "12268:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12275:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "12275:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12284:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "12284:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12271:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "12271:3:6"
																						},
																						"nativeSrc": "12271:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "12271:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12265:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "12265:2:6"
																				},
																				"nativeSrc": "12265:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12265:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12218:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "12218:2:6"
																		},
																		"nativeSrc": "12218:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12218:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12198:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12198:6:6"
																},
																"nativeSrc": "12198:113:6",
																"nodeType": "YulFunctionCall",
																"src": "12198:113:6"
															},
															"nativeSrc": "12195:139:6",
															"nodeType": "YulIf",
															"src": "12195:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11931:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11962:1:6",
														"nodeType": "YulTypedName",
														"src": "11962:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11965:1:6",
														"nodeType": "YulTypedName",
														"src": "11965:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11971:7:6",
														"nodeType": "YulTypedName",
														"src": "11971:7:6",
														"type": ""
													}
												],
												"src": "11931:410:6"
											},
											{
												"body": {
													"nativeSrc": "12392:81:6",
													"nodeType": "YulBlock",
													"src": "12392:81:6",
													"statements": [
														{
															"nativeSrc": "12402:65:6",
															"nodeType": "YulAssignment",
															"src": "12402:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12417:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "12417:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12424:42:6",
																		"nodeType": "YulLiteral",
																		"src": "12424:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12413:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12413:3:6"
																},
																"nativeSrc": "12413:54:6",
																"nodeType": "YulFunctionCall",
																"src": "12413:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12402:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "12402:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "12347:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12374:5:6",
														"nodeType": "YulTypedName",
														"src": "12374:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12384:7:6",
														"nodeType": "YulTypedName",
														"src": "12384:7:6",
														"type": ""
													}
												],
												"src": "12347:126:6"
											},
											{
												"body": {
													"nativeSrc": "12524:51:6",
													"nodeType": "YulBlock",
													"src": "12524:51:6",
													"statements": [
														{
															"nativeSrc": "12534:35:6",
															"nodeType": "YulAssignment",
															"src": "12534:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12563:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "12563:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "12545:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12545:17:6"
																},
																"nativeSrc": "12545:24:6",
																"nodeType": "YulFunctionCall",
																"src": "12545:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12534:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "12534:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "12479:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12506:5:6",
														"nodeType": "YulTypedName",
														"src": "12506:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12516:7:6",
														"nodeType": "YulTypedName",
														"src": "12516:7:6",
														"type": ""
													}
												],
												"src": "12479:96:6"
											},
											{
												"body": {
													"nativeSrc": "12646:53:6",
													"nodeType": "YulBlock",
													"src": "12646:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12663:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12663:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12686:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "12686:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12668:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "12668:17:6"
																		},
																		"nativeSrc": "12668:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12668:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12656:6:6"
																},
																"nativeSrc": "12656:37:6",
																"nodeType": "YulFunctionCall",
																"src": "12656:37:6"
															},
															"nativeSrc": "12656:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "12656:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12581:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12634:5:6",
														"nodeType": "YulTypedName",
														"src": "12634:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12641:3:6",
														"nodeType": "YulTypedName",
														"src": "12641:3:6",
														"type": ""
													}
												],
												"src": "12581:118:6"
											},
											{
												"body": {
													"nativeSrc": "12803:124:6",
													"nodeType": "YulBlock",
													"src": "12803:124:6",
													"statements": [
														{
															"nativeSrc": "12813:26:6",
															"nodeType": "YulAssignment",
															"src": "12813:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12825:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12825:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12836:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12821:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12821:3:6"
																},
																"nativeSrc": "12821:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12821:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12813:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12893:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12893:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12906:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12906:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12917:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12917:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12902:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12902:3:6"
																		},
																		"nativeSrc": "12902:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12902:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12849:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12849:43:6"
																},
																"nativeSrc": "12849:71:6",
																"nodeType": "YulFunctionCall",
																"src": "12849:71:6"
															},
															"nativeSrc": "12849:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "12849:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12705:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12775:9:6",
														"nodeType": "YulTypedName",
														"src": "12775:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12787:6:6",
														"nodeType": "YulTypedName",
														"src": "12787:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12798:4:6",
														"nodeType": "YulTypedName",
														"src": "12798:4:6",
														"type": ""
													}
												],
												"src": "12705:222:6"
											},
											{
												"body": {
													"nativeSrc": "12977:147:6",
													"nodeType": "YulBlock",
													"src": "12977:147:6",
													"statements": [
														{
															"nativeSrc": "12987:25:6",
															"nodeType": "YulAssignment",
															"src": "12987:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13010:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13010:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12992:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12992:17:6"
																},
																"nativeSrc": "12992:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12992:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12987:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12987:1:6"
																}
															]
														},
														{
															"nativeSrc": "13021:25:6",
															"nodeType": "YulAssignment",
															"src": "13021:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13044:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13044:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13026:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13026:17:6"
																},
																"nativeSrc": "13026:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13026:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13021:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13021:1:6"
																}
															]
														},
														{
															"nativeSrc": "13055:16:6",
															"nodeType": "YulAssignment",
															"src": "13055:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13066:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13066:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13069:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13069:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13062:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13062:3:6"
																},
																"nativeSrc": "13062:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13062:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13055:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13055:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13095:22:6",
																"nodeType": "YulBlock",
																"src": "13095:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13097:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13097:16:6"
																			},
																			"nativeSrc": "13097:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13097:18:6"
																		},
																		"nativeSrc": "13097:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13097:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13087:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13087:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13090:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13090:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13084:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13084:2:6"
																},
																"nativeSrc": "13084:10:6",
																"nodeType": "YulFunctionCall",
																"src": "13084:10:6"
															},
															"nativeSrc": "13081:36:6",
															"nodeType": "YulIf",
															"src": "13081:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12933:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12964:1:6",
														"nodeType": "YulTypedName",
														"src": "12964:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12967:1:6",
														"nodeType": "YulTypedName",
														"src": "12967:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12973:3:6",
														"nodeType": "YulTypedName",
														"src": "12973:3:6",
														"type": ""
													}
												],
												"src": "12933:191:6"
											},
											{
												"body": {
													"nativeSrc": "13195:53:6",
													"nodeType": "YulBlock",
													"src": "13195:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13212:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13212:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13235:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "13235:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13217:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "13217:17:6"
																		},
																		"nativeSrc": "13217:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13217:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13205:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13205:6:6"
																},
																"nativeSrc": "13205:37:6",
																"nodeType": "YulFunctionCall",
																"src": "13205:37:6"
															},
															"nativeSrc": "13205:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "13205:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13130:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13183:5:6",
														"nodeType": "YulTypedName",
														"src": "13183:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13190:3:6",
														"nodeType": "YulTypedName",
														"src": "13190:3:6",
														"type": ""
													}
												],
												"src": "13130:118:6"
											},
											{
												"body": {
													"nativeSrc": "13408:288:6",
													"nodeType": "YulBlock",
													"src": "13408:288:6",
													"statements": [
														{
															"nativeSrc": "13418:26:6",
															"nodeType": "YulAssignment",
															"src": "13418:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13430:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13430:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13441:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13441:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13426:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13426:3:6"
																},
																"nativeSrc": "13426:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13426:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13418:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13418:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13498:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13498:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13511:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13511:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13522:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13522:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13507:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13507:3:6"
																		},
																		"nativeSrc": "13507:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13507:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13454:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13454:43:6"
																},
																"nativeSrc": "13454:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13454:71:6"
															},
															"nativeSrc": "13454:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13454:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13579:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13579:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13592:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13592:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13603:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13603:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13588:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13588:3:6"
																		},
																		"nativeSrc": "13588:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13588:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13535:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13535:43:6"
																},
																"nativeSrc": "13535:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13535:72:6"
															},
															"nativeSrc": "13535:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13535:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13661:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13661:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13674:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13674:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13685:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13685:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13670:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13670:3:6"
																		},
																		"nativeSrc": "13670:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13670:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13617:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13617:43:6"
																},
																"nativeSrc": "13617:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13617:72:6"
															},
															"nativeSrc": "13617:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13617:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13254:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13364:9:6",
														"nodeType": "YulTypedName",
														"src": "13364:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13376:6:6",
														"nodeType": "YulTypedName",
														"src": "13376:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13384:6:6",
														"nodeType": "YulTypedName",
														"src": "13384:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13392:6:6",
														"nodeType": "YulTypedName",
														"src": "13392:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13403:4:6",
														"nodeType": "YulTypedName",
														"src": "13403:4:6",
														"type": ""
													}
												],
												"src": "13254:442:6"
											},
											{
												"body": {
													"nativeSrc": "13800:124:6",
													"nodeType": "YulBlock",
													"src": "13800:124:6",
													"statements": [
														{
															"nativeSrc": "13810:26:6",
															"nodeType": "YulAssignment",
															"src": "13810:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13822:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13822:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13833:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13818:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13818:3:6"
																},
																"nativeSrc": "13818:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13818:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13810:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13810:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13890:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13890:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13903:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13903:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13914:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13914:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13899:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13899:3:6"
																		},
																		"nativeSrc": "13899:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13899:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13846:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13846:43:6"
																},
																"nativeSrc": "13846:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13846:71:6"
															},
															"nativeSrc": "13846:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13846:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13702:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13772:9:6",
														"nodeType": "YulTypedName",
														"src": "13772:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13784:6:6",
														"nodeType": "YulTypedName",
														"src": "13784:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13795:4:6",
														"nodeType": "YulTypedName",
														"src": "13795:4:6",
														"type": ""
													}
												],
												"src": "13702:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611930380380611930833981810160405281019061003191906104f3565b838381600390816100429190610796565b5080600490816100529190610796565b5050508160055f6101000a81548160ff021916908360ff1602179055506100963383600a61008091906109c1565b8361008b9190610a0b565b61009f60201b60201c565b50505050610b34565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361010f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101069190610a8b565b60405180910390fd5b6101205f838361012460201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610174578060025f8282546101689190610aa4565b92505081905550610242565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156101fd578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016101f493929190610ae6565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610289578060025f82825403925050819055506102d3565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103309190610b1b565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61039c82610356565b810181811067ffffffffffffffff821117156103bb576103ba610366565b5b80604052505050565b5f6103cd61033d565b90506103d98282610393565b919050565b5f67ffffffffffffffff8211156103f8576103f7610366565b5b61040182610356565b9050602081019050919050565b8281835e5f83830152505050565b5f61042e610429846103de565b6103c4565b90508281526020810184848401111561044a57610449610352565b5b61045584828561040e565b509392505050565b5f82601f8301126104715761047061034e565b5b815161048184826020860161041c565b91505092915050565b5f60ff82169050919050565b61049f8161048a565b81146104a9575f5ffd5b50565b5f815190506104ba81610496565b92915050565b5f819050919050565b6104d2816104c0565b81146104dc575f5ffd5b50565b5f815190506104ed816104c9565b92915050565b5f5f5f5f6080858703121561050b5761050a610346565b5b5f85015167ffffffffffffffff8111156105285761052761034a565b5b6105348782880161045d565b945050602085015167ffffffffffffffff8111156105555761055461034a565b5b6105618782880161045d565b9350506040610572878288016104ac565b9250506060610583878288016104df565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105dd57607f821691505b6020821081036105f0576105ef610599565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610617565b61065c8683610617565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61069761069261068d846104c0565b610674565b6104c0565b9050919050565b5f819050919050565b6106b08361067d565b6106c46106bc8261069e565b848454610623565b825550505050565b5f5f905090565b6106db6106cc565b6106e68184846106a7565b505050565b5b81811015610709576106fe5f826106d3565b6001810190506106ec565b5050565b601f82111561074e5761071f816105f6565b61072884610608565b81016020851015610737578190505b61074b61074385610608565b8301826106eb565b50505b505050565b5f82821c905092915050565b5f61076e5f1984600802610753565b1980831691505092915050565b5f610786838361075f565b9150826002028217905092915050565b61079f8261058f565b67ffffffffffffffff8111156107b8576107b7610366565b5b6107c282546105c6565b6107cd82828561070d565b5f60209050601f8311600181146107fe575f84156107ec578287015190505b6107f6858261077b565b86555061085d565b601f19841661080c866105f6565b5f5b828110156108335784890151825560018201915060208501945060208101905061080e565b86831015610850578489015161084c601f89168261075f565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156108e7578086048111156108c3576108c2610865565b5b60018516156108d25780820291505b80810290506108e085610892565b94506108a7565b94509492505050565b5f826108ff57600190506109ba565b8161090c575f90506109ba565b8160018114610922576002811461092c5761095b565b60019150506109ba565b60ff84111561093e5761093d610865565b5b8360020a91508482111561095557610954610865565b5b506109ba565b5060208310610133831016604e8410600b84101617156109905782820a90508381111561098b5761098a610865565b5b6109ba565b61099d848484600161089e565b925090508184048111156109b4576109b3610865565b5b81810290505b9392505050565b5f6109cb826104c0565b91506109d68361048a565b9250610a037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846108f0565b905092915050565b5f610a15826104c0565b9150610a20836104c0565b9250828202610a2e816104c0565b91508282048414831517610a4557610a44610865565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a7582610a4c565b9050919050565b610a8581610a6b565b82525050565b5f602082019050610a9e5f830184610a7c565b92915050565b5f610aae826104c0565b9150610ab9836104c0565b9250828201905080821115610ad157610ad0610865565b5b92915050565b610ae0816104c0565b82525050565b5f606082019050610af95f830186610a7c565b610b066020830185610ad7565b610b136040830184610ad7565b949350505050565b5f602082019050610b2e5f830184610ad7565b92915050565b610def80610b415f395ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f5ffd5b61009d6101fd565b6040516100aa9190610a68565b60405180910390f35b6100cd60048036038101906100c89190610b19565b61028d565b6040516100da9190610b71565b60405180910390f35b6100eb6102af565b6040516100f89190610b99565b60405180910390f35b61011b60048036038101906101169190610bb2565b6102b8565b6040516101289190610b71565b60405180910390f35b6101396102e6565b6040516101469190610c1d565b60405180910390f35b61016960048036038101906101649190610c36565b6102fb565b6040516101769190610b99565b60405180910390f35b610187610340565b6040516101949190610a68565b60405180910390f35b6101b760048036038101906101b29190610b19565b6103d0565b6040516101c49190610b71565b60405180910390f35b6101e760048036038101906101e29190610c61565b6103f2565b6040516101f49190610b99565b60405180910390f35b60606003805461020c90610ccc565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610ccc565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f5f610297610474565b90506102a481858561047b565b600191505092915050565b5f600254905090565b5f5f6102c2610474565b90506102cf85828561048d565b6102da858585610520565b60019150509392505050565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034f90610ccc565b80601f016020809104026020016040519081016040528092919081815260200182805461037b90610ccc565b80156103c65780601f1061039d576101008083540402835291602001916103c6565b820191905f5260205f20905b8154815290600101906020018083116103a957829003601f168201915b5050505050905090565b5f5f6103da610474565b90506103e7818585610520565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104888383836001610610565b505050565b5f61049884846103f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561051a578181101561050b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050293929190610d0b565b60405180910390fd5b61051984848484035f610610565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610590575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105879190610d40565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610600575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105f79190610d40565b60405180910390fd5b61060b8383836107df565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610680575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106779190610d40565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106e79190610d40565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107d9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107d09190610b99565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361082f578060025f8282546108239190610d86565b925050819055506108fd565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108b8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108af93929190610d0b565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610944578060025f828254039250508190555061098e565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109eb9190610b99565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610a3a826109f8565b610a448185610a02565b9350610a54818560208601610a12565b610a5d81610a20565b840191505092915050565b5f6020820190508181035f830152610a808184610a30565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ab582610a8c565b9050919050565b610ac581610aab565b8114610acf575f5ffd5b50565b5f81359050610ae081610abc565b92915050565b5f819050919050565b610af881610ae6565b8114610b02575f5ffd5b50565b5f81359050610b1381610aef565b92915050565b5f5f60408385031215610b2f57610b2e610a88565b5b5f610b3c85828601610ad2565b9250506020610b4d85828601610b05565b9150509250929050565b5f8115159050919050565b610b6b81610b57565b82525050565b5f602082019050610b845f830184610b62565b92915050565b610b9381610ae6565b82525050565b5f602082019050610bac5f830184610b8a565b92915050565b5f5f5f60608486031215610bc957610bc8610a88565b5b5f610bd686828701610ad2565b9350506020610be786828701610ad2565b9250506040610bf886828701610b05565b9150509250925092565b5f60ff82169050919050565b610c1781610c02565b82525050565b5f602082019050610c305f830184610c0e565b92915050565b5f60208284031215610c4b57610c4a610a88565b5b5f610c5884828501610ad2565b91505092915050565b5f5f60408385031215610c7757610c76610a88565b5b5f610c8485828601610ad2565b9250506020610c9585828601610ad2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610ce357607f821691505b602082108103610cf657610cf5610c9f565b5b50919050565b610d0581610aab565b82525050565b5f606082019050610d1e5f830186610cfc565b610d2b6020830185610b8a565b610d386040830184610b8a565b949350505050565b5f602082019050610d535f830184610cfc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d9082610ae6565b9150610d9b83610ae6565b9250828201905080821115610db357610db2610d59565b5b9291505056fea2646970667358221220eed51594b1d269bdbc8decfbd7ee32168f113301c0d0ea3f3070f8b5b72daf2164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1930 CODESIZE SUB DUP1 PUSH2 0x1930 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x796 JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x96 CALLER DUP4 PUSH1 0xA PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST DUP4 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0x9F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xB34 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x120 PUSH0 DUP4 DUP4 PUSH2 0x124 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x174 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xAA4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x242 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1FD JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x289 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2D3 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0xB1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x39C DUP3 PUSH2 0x356 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3BB JUMPI PUSH2 0x3BA PUSH2 0x366 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3CD PUSH2 0x33D JUMP JUMPDEST SWAP1 POP PUSH2 0x3D9 DUP3 DUP3 PUSH2 0x393 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3F8 JUMPI PUSH2 0x3F7 PUSH2 0x366 JUMP JUMPDEST JUMPDEST PUSH2 0x401 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x42E PUSH2 0x429 DUP5 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x44A JUMPI PUSH2 0x449 PUSH2 0x352 JUMP JUMPDEST JUMPDEST PUSH2 0x455 DUP5 DUP3 DUP6 PUSH2 0x40E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x471 JUMPI PUSH2 0x470 PUSH2 0x34E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x481 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x41C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49F DUP2 PUSH2 0x48A JUMP JUMPDEST DUP2 EQ PUSH2 0x4A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4BA DUP2 PUSH2 0x496 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D2 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x4DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4ED DUP2 PUSH2 0x4C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x50B JUMPI PUSH2 0x50A PUSH2 0x346 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x528 JUMPI PUSH2 0x527 PUSH2 0x34A JUMP JUMPDEST JUMPDEST PUSH2 0x534 DUP8 DUP3 DUP9 ADD PUSH2 0x45D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x555 JUMPI PUSH2 0x554 PUSH2 0x34A JUMP JUMPDEST JUMPDEST PUSH2 0x561 DUP8 DUP3 DUP9 ADD PUSH2 0x45D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x572 DUP8 DUP3 DUP9 ADD PUSH2 0x4AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x583 DUP8 DUP3 DUP9 ADD PUSH2 0x4DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5F0 JUMPI PUSH2 0x5EF PUSH2 0x599 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x652 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x617 JUMP JUMPDEST PUSH2 0x65C DUP7 DUP4 PUSH2 0x617 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x697 PUSH2 0x692 PUSH2 0x68D DUP5 PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B0 DUP4 PUSH2 0x67D JUMP JUMPDEST PUSH2 0x6C4 PUSH2 0x6BC DUP3 PUSH2 0x69E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x623 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6DB PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x6E6 DUP2 DUP5 DUP5 PUSH2 0x6A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH2 0x6FE PUSH0 DUP3 PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6EC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x74E JUMPI PUSH2 0x71F DUP2 PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x728 DUP5 PUSH2 0x608 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x737 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x74B PUSH2 0x743 DUP6 PUSH2 0x608 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6EB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x76E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x753 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x786 DUP4 DUP4 PUSH2 0x75F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x79F DUP3 PUSH2 0x58F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B7 PUSH2 0x366 JUMP JUMPDEST JUMPDEST PUSH2 0x7C2 DUP3 SLOAD PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x7CD DUP3 DUP3 DUP6 PUSH2 0x70D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7FE JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7EC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7F6 DUP6 DUP3 PUSH2 0x77B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x85D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x80C DUP7 PUSH2 0x5F6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x833 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x80E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x850 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x84C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x75F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x8E7 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x8C3 JUMPI PUSH2 0x8C2 PUSH2 0x865 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x8D2 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x8E0 DUP6 PUSH2 0x892 JUMP JUMPDEST SWAP5 POP PUSH2 0x8A7 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x8FF JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9BA JUMP JUMPDEST DUP2 PUSH2 0x90C JUMPI PUSH0 SWAP1 POP PUSH2 0x9BA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x922 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x92C JUMPI PUSH2 0x95B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x9BA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x93E JUMPI PUSH2 0x93D PUSH2 0x865 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x955 JUMPI PUSH2 0x954 PUSH2 0x865 JUMP JUMPDEST JUMPDEST POP PUSH2 0x9BA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x990 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x98B JUMPI PUSH2 0x98A PUSH2 0x865 JUMP JUMPDEST JUMPDEST PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x99D DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x89E JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x9B3 PUSH2 0x865 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9CB DUP3 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D6 DUP4 PUSH2 0x48A JUMP JUMPDEST SWAP3 POP PUSH2 0xA03 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x8F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA15 DUP3 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0xA20 DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA2E DUP2 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA45 JUMPI PUSH2 0xA44 PUSH2 0x865 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA75 DUP3 PUSH2 0xA4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA85 DUP2 PUSH2 0xA6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA9E PUSH0 DUP4 ADD DUP5 PUSH2 0xA7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAAE DUP3 PUSH2 0x4C0 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB9 DUP4 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAD1 JUMPI PUSH2 0xAD0 PUSH2 0x865 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE0 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAF9 PUSH0 DUP4 ADD DUP7 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xB06 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0xB13 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAD7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB2E PUSH0 DUP4 ADD DUP5 PUSH2 0xAD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDEF DUP1 PUSH2 0xB41 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x297 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2C2 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34F SWAP1 PUSH2 0xCCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37B SWAP1 PUSH2 0xCCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3DA PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E7 DUP2 DUP6 DUP6 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x488 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x610 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x498 DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x50B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x519 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x610 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x590 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x600 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F7 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60B DUP4 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x680 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7D9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8FD JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8B8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x944 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3A DUP3 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0xA44 DUP2 DUP6 PUSH2 0xA02 JUMP JUMPDEST SWAP4 POP PUSH2 0xA54 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA5D DUP2 PUSH2 0xA20 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA80 DUP2 DUP5 PUSH2 0xA30 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAB5 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC5 DUP2 PUSH2 0xAAB JUMP JUMPDEST DUP2 EQ PUSH2 0xACF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAE0 DUP2 PUSH2 0xABC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF8 DUP2 PUSH2 0xAE6 JUMP JUMPDEST DUP2 EQ PUSH2 0xB02 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB13 DUP2 PUSH2 0xAEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB3C DUP6 DUP3 DUP7 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB4D DUP6 DUP3 DUP7 ADD PUSH2 0xB05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6B DUP2 PUSH2 0xB57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB84 PUSH0 DUP4 ADD DUP5 PUSH2 0xB62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB93 DUP2 PUSH2 0xAE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAC PUSH0 DUP4 ADD DUP5 PUSH2 0xB8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH2 0xBC8 PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD6 DUP7 DUP3 DUP8 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBE7 DUP7 DUP3 DUP8 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBF8 DUP7 DUP3 DUP8 ADD PUSH2 0xB05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC17 DUP2 PUSH2 0xC02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC30 PUSH0 DUP4 ADD DUP5 PUSH2 0xC0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH2 0xC4A PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC58 DUP5 DUP3 DUP6 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC77 JUMPI PUSH2 0xC76 PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC84 DUP6 DUP3 DUP7 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC95 DUP6 DUP3 DUP7 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCF6 JUMPI PUSH2 0xCF5 PUSH2 0xC9F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD05 DUP2 PUSH2 0xAAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD1E PUSH0 DUP4 ADD DUP7 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0xD2B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0xD38 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD53 PUSH0 DUP4 ADD DUP5 PUSH2 0xCFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD90 DUP3 PUSH2 0xAE6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD9B DUP4 PUSH2 0xAE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDB3 JUMPI PUSH2 0xDB2 PUSH2 0xD59 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNCONTRACT 0xD5 ISZERO SWAP5 0xB1 0xD2 PUSH10 0xBDBC8DECFBD7EE32168F GT CALLER ADD 0xC0 0xD0 0xEA EXTCODEHASH ADDRESS PUSH17 0xF8B5B72DAF2164736F6C634300081E0033 ",
							"sourceMap": "115:394:5:-:0;;;185:220;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;285:4;291:6;1656:5:1;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;327:9:5::1;309:15;;:27;;;;;;;;;;;;;;;;;;346:52;352:10;387:9;381:2;:15;;;;:::i;:::-;364:13;:33;;;;:::i;:::-;346:5;;;:52;;:::i;:::-;185:220:::0;;;;115:394;;7439:208:1;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:86::-;2605:7;2645:4;2638:5;2634:16;2623:27;;2570:86;;;:::o;2662:118::-;2733:22;2749:5;2733:22;:::i;:::-;2726:5;2723:33;2713:61;;2770:1;2767;2760:12;2713:61;2662:118;:::o;2786:139::-;2841:5;2872:6;2866:13;2857:22;;2888:31;2913:5;2888:31;:::i;:::-;2786:139;;;;:::o;2931:77::-;2968:7;2997:5;2986:16;;2931:77;;;:::o;3014:122::-;3087:24;3105:5;3087:24;:::i;:::-;3080:5;3077:35;3067:63;;3126:1;3123;3116:12;3067:63;3014:122;:::o;3142:143::-;3199:5;3230:6;3224:13;3215:22;;3246:33;3273:5;3246:33;:::i;:::-;3142:143;;;;:::o;3291:1162::-;3406:6;3414;3422;3430;3479:3;3467:9;3458:7;3454:23;3450:33;3447:120;;;3486:79;;:::i;:::-;3447:120;3627:1;3616:9;3612:17;3606:24;3657:18;3649:6;3646:30;3643:117;;;3679:79;;:::i;:::-;3643:117;3784:74;3850:7;3841:6;3830:9;3826:22;3784:74;:::i;:::-;3774:84;;3577:291;3928:2;3917:9;3913:18;3907:25;3959:18;3951:6;3948:30;3945:117;;;3981:79;;:::i;:::-;3945:117;4086:74;4152:7;4143:6;4132:9;4128:22;4086:74;:::i;:::-;4076:84;;3878:292;4209:2;4235:62;4289:7;4280:6;4269:9;4265:22;4235:62;:::i;:::-;4225:72;;4180:127;4346:2;4372:64;4428:7;4419:6;4408:9;4404:22;4372:64;:::i;:::-;4362:74;;4317:129;3291:1162;;;;;;;:::o;4459:99::-;4511:6;4545:5;4539:12;4529:22;;4459:99;;;:::o;4564:180::-;4612:77;4609:1;4602:88;4709:4;4706:1;4699:15;4733:4;4730:1;4723:15;4750:320;4794:6;4831:1;4825:4;4821:12;4811:22;;4878:1;4872:4;4868:12;4899:18;4889:81;;4955:4;4947:6;4943:17;4933:27;;4889:81;5017:2;5009:6;5006:14;4986:18;4983:38;4980:84;;5036:18;;:::i;:::-;4980:84;4801:269;4750:320;;;:::o;5076:141::-;5125:4;5148:3;5140:11;;5171:3;5168:1;5161:14;5205:4;5202:1;5192:18;5184:26;;5076:141;;;:::o;5223:93::-;5260:6;5307:2;5302;5295:5;5291:14;5287:23;5277:33;;5223:93;;;:::o;5322:107::-;5366:8;5416:5;5410:4;5406:16;5385:37;;5322:107;;;;:::o;5435:393::-;5504:6;5554:1;5542:10;5538:18;5577:97;5607:66;5596:9;5577:97;:::i;:::-;5695:39;5725:8;5714:9;5695:39;:::i;:::-;5683:51;;5767:4;5763:9;5756:5;5752:21;5743:30;;5816:4;5806:8;5802:19;5795:5;5792:30;5782:40;;5511:317;;5435:393;;;;;:::o;5834:60::-;5862:3;5883:5;5876:12;;5834:60;;;:::o;5900:142::-;5950:9;5983:53;6001:34;6010:24;6028:5;6010:24;:::i;:::-;6001:34;:::i;:::-;5983:53;:::i;:::-;5970:66;;5900:142;;;:::o;6048:75::-;6091:3;6112:5;6105:12;;6048:75;;;:::o;6129:269::-;6239:39;6270:7;6239:39;:::i;:::-;6300:91;6349:41;6373:16;6349:41;:::i;:::-;6341:6;6334:4;6328:11;6300:91;:::i;:::-;6294:4;6287:105;6205:193;6129:269;;;:::o;6404:73::-;6449:3;6470:1;6463:8;;6404:73;:::o;6483:189::-;6560:32;;:::i;:::-;6601:65;6659:6;6651;6645:4;6601:65;:::i;:::-;6536:136;6483:189;;:::o;6678:186::-;6738:120;6755:3;6748:5;6745:14;6738:120;;;6809:39;6846:1;6839:5;6809:39;:::i;:::-;6782:1;6775:5;6771:13;6762:22;;6738:120;;;6678:186;;:::o;6870:543::-;6971:2;6966:3;6963:11;6960:446;;;7005:38;7037:5;7005:38;:::i;:::-;7089:29;7107:10;7089:29;:::i;:::-;7079:8;7075:44;7272:2;7260:10;7257:18;7254:49;;;7293:8;7278:23;;7254:49;7316:80;7372:22;7390:3;7372:22;:::i;:::-;7362:8;7358:37;7345:11;7316:80;:::i;:::-;6975:431;;6960:446;6870:543;;;:::o;7419:117::-;7473:8;7523:5;7517:4;7513:16;7492:37;;7419:117;;;;:::o;7542:169::-;7586:6;7619:51;7667:1;7663:6;7655:5;7652:1;7648:13;7619:51;:::i;:::-;7615:56;7700:4;7694;7690:15;7680:25;;7593:118;7542:169;;;;:::o;7716:295::-;7792:4;7938:29;7963:3;7957:4;7938:29;:::i;:::-;7930:37;;8000:3;7997:1;7993:11;7987:4;7984:21;7976:29;;7716:295;;;;:::o;8016:1395::-;8133:37;8166:3;8133:37;:::i;:::-;8235:18;8227:6;8224:30;8221:56;;;8257:18;;:::i;:::-;8221:56;8301:38;8333:4;8327:11;8301:38;:::i;:::-;8386:67;8446:6;8438;8432:4;8386:67;:::i;:::-;8480:1;8504:4;8491:17;;8536:2;8528:6;8525:14;8553:1;8548:618;;;;9210:1;9227:6;9224:77;;;9276:9;9271:3;9267:19;9261:26;9252:35;;9224:77;9327:67;9387:6;9380:5;9327:67;:::i;:::-;9321:4;9314:81;9183:222;8518:887;;8548:618;8600:4;8596:9;8588:6;8584:22;8634:37;8666:4;8634:37;:::i;:::-;8693:1;8707:208;8721:7;8718:1;8715:14;8707:208;;;8800:9;8795:3;8791:19;8785:26;8777:6;8770:42;8851:1;8843:6;8839:14;8829:24;;8898:2;8887:9;8883:18;8870:31;;8744:4;8741:1;8737:12;8732:17;;8707:208;;;8943:6;8934:7;8931:19;8928:179;;;9001:9;8996:3;8992:19;8986:26;9044:48;9086:4;9078:6;9074:17;9063:9;9044:48;:::i;:::-;9036:6;9029:64;8951:156;8928:179;9153:1;9149;9141:6;9137:14;9133:22;9127:4;9120:36;8555:611;;;8518:887;;8108:1303;;;8016:1395;;:::o;9417:180::-;9465:77;9462:1;9455:88;9562:4;9559:1;9552:15;9586:4;9583:1;9576:15;9603:102;9645:8;9692:5;9689:1;9685:13;9664:34;;9603:102;;;:::o;9711:848::-;9772:5;9779:4;9803:6;9794:15;;9827:5;9818:14;;9841:712;9862:1;9852:8;9849:15;9841:712;;;9957:4;9952:3;9948:14;9942:4;9939:24;9936:50;;;9966:18;;:::i;:::-;9936:50;10016:1;10006:8;10002:16;9999:451;;;10431:4;10424:5;10420:16;10411:25;;9999:451;10481:4;10475;10471:15;10463:23;;10511:32;10534:8;10511:32;:::i;:::-;10499:44;;9841:712;;;9711:848;;;;;;;:::o;10565:1073::-;10619:5;10810:8;10800:40;;10831:1;10822:10;;10833:5;;10800:40;10859:4;10849:36;;10876:1;10867:10;;10878:5;;10849:36;10945:4;10993:1;10988:27;;;;11029:1;11024:191;;;;10938:277;;10988:27;11006:1;10997:10;;11008:5;;;11024:191;11069:3;11059:8;11056:17;11053:43;;;11076:18;;:::i;:::-;11053:43;11125:8;11122:1;11118:16;11109:25;;11160:3;11153:5;11150:14;11147:40;;;11167:18;;:::i;:::-;11147:40;11200:5;;;10938:277;;11324:2;11314:8;11311:16;11305:3;11299:4;11296:13;11292:36;11274:2;11264:8;11261:16;11256:2;11250:4;11247:12;11243:35;11227:111;11224:246;;;11380:8;11374:4;11370:19;11361:28;;11415:3;11408:5;11405:14;11402:40;;;11422:18;;:::i;:::-;11402:40;11455:5;;11224:246;11495:42;11533:3;11523:8;11517:4;11514:1;11495:42;:::i;:::-;11480:57;;;;11569:4;11564:3;11560:14;11553:5;11550:25;11547:51;;;11578:18;;:::i;:::-;11547:51;11627:4;11620:5;11616:16;11607:25;;10565:1073;;;;;;:::o;11644:281::-;11702:5;11726:23;11744:4;11726:23;:::i;:::-;11718:31;;11770:25;11786:8;11770:25;:::i;:::-;11758:37;;11814:104;11851:66;11841:8;11835:4;11814:104;:::i;:::-;11805:113;;11644:281;;;;:::o;11931:410::-;11971:7;11994:20;12012:1;11994:20;:::i;:::-;11989:25;;12028:20;12046:1;12028:20;:::i;:::-;12023:25;;12083:1;12080;12076:9;12105:30;12123:11;12105:30;:::i;:::-;12094:41;;12284:1;12275:7;12271:15;12268:1;12265:22;12245:1;12238:9;12218:83;12195:139;;12314:18;;:::i;:::-;12195:139;11979:362;11931:410;;;;:::o;12347:126::-;12384:7;12424:42;12417:5;12413:54;12402:65;;12347:126;;;:::o;12479:96::-;12516:7;12545:24;12563:5;12545:24;:::i;:::-;12534:35;;12479:96;;;:::o;12581:118::-;12668:24;12686:5;12668:24;:::i;:::-;12663:3;12656:37;12581:118;;:::o;12705:222::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12849:71;12917:1;12906:9;12902:17;12893:6;12849:71;:::i;:::-;12705:222;;;;:::o;12933:191::-;12973:3;12992:20;13010:1;12992:20;:::i;:::-;12987:25;;13026:20;13044:1;13026:20;:::i;:::-;13021:25;;13069:1;13066;13062:9;13055:16;;13090:3;13087:1;13084:10;13081:36;;;13097:18;;:::i;:::-;13081:36;12933:191;;;;:::o;13130:118::-;13217:24;13235:5;13217:24;:::i;:::-;13212:3;13205:37;13130:118;;:::o;13254:442::-;13403:4;13441:2;13430:9;13426:18;13418:26;;13454:71;13522:1;13511:9;13507:17;13498:6;13454:71;:::i;:::-;13535:72;13603:2;13592:9;13588:18;13579:6;13535:72;:::i;:::-;13617;13685:2;13674:9;13670:18;13661:6;13617:72;:::i;:::-;13254:442;;;;;;:::o;13702:222::-;13795:4;13833:2;13822:9;13818:18;13810:26;;13846:71;13914:1;13903:9;13899:17;13890:6;13846:71;:::i;:::-;13702:222;;;;:::o;115:394:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1147,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1552,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1140,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1165,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1312,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2015,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1010,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 653,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 763,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_832": {
									"entryPoint": 742,
									"id": 832,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 509,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 832,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 687,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 696,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 976,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3231,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2696,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7253:6",
										"nodeType": "YulBlock",
										"src": "0:7253:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4812:263:6",
													"nodeType": "YulBlock",
													"src": "4812:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:6",
																"nodeType": "YulBlock",
																"src": "4858:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:6"
																			},
																			"nativeSrc": "4860:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:6"
																		},
																		"nativeSrc": "4860:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:6"
																		},
																		"nativeSrc": "4829:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:6"
																},
																"nativeSrc": "4825:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:6"
															},
															"nativeSrc": "4822:119:6",
															"nodeType": "YulIf",
															"src": "4822:119:6"
														},
														{
															"nativeSrc": "4951:117:6",
															"nodeType": "YulBlock",
															"src": "4951:117:6",
															"statements": [
																{
																	"nativeSrc": "4966:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:6"
																				},
																				"nativeSrc": "5026:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:6"
																		},
																		"nativeSrc": "5005:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:6",
														"nodeType": "YulTypedName",
														"src": "4782:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:6",
														"nodeType": "YulTypedName",
														"src": "4793:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:6",
														"nodeType": "YulTypedName",
														"src": "4805:6:6",
														"type": ""
													}
												],
												"src": "4746:329:6"
											},
											{
												"body": {
													"nativeSrc": "5164:391:6",
													"nodeType": "YulBlock",
													"src": "5164:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:6",
																"nodeType": "YulBlock",
																"src": "5210:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:6"
																			},
																			"nativeSrc": "5212:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:6"
																		},
																		"nativeSrc": "5212:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:6"
																		},
																		"nativeSrc": "5181:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:6"
																},
																"nativeSrc": "5177:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:6"
															},
															"nativeSrc": "5174:119:6",
															"nodeType": "YulIf",
															"src": "5174:119:6"
														},
														{
															"nativeSrc": "5303:117:6",
															"nodeType": "YulBlock",
															"src": "5303:117:6",
															"statements": [
																{
																	"nativeSrc": "5318:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:6"
																				},
																				"nativeSrc": "5378:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:6"
																		},
																		"nativeSrc": "5357:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5430:118:6",
															"nodeType": "YulBlock",
															"src": "5430:118:6",
															"statements": [
																{
																	"nativeSrc": "5445:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5445:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5449:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5449:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:6"
																				},
																				"nativeSrc": "5506:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:6"
																		},
																		"nativeSrc": "5485:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5475:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5081:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:6",
														"nodeType": "YulTypedName",
														"src": "5126:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5137:7:6",
														"nodeType": "YulTypedName",
														"src": "5137:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5149:6:6",
														"nodeType": "YulTypedName",
														"src": "5149:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:6",
														"nodeType": "YulTypedName",
														"src": "5157:6:6",
														"type": ""
													}
												],
												"src": "5081:474:6"
											},
											{
												"body": {
													"nativeSrc": "5589:152:6",
													"nodeType": "YulBlock",
													"src": "5589:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5606:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5609:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:6"
																},
																"nativeSrc": "5599:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5599:88:6"
															},
															"nativeSrc": "5599:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5599:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5706:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5696:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:6"
																},
																"nativeSrc": "5696:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5696:15:6"
															},
															"nativeSrc": "5696:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5727:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5720:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:6"
																},
																"nativeSrc": "5720:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5720:15:6"
															},
															"nativeSrc": "5720:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5561:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:180:6"
											},
											{
												"body": {
													"nativeSrc": "5798:269:6",
													"nodeType": "YulBlock",
													"src": "5798:269:6",
													"statements": [
														{
															"nativeSrc": "5808:22:6",
															"nodeType": "YulAssignment",
															"src": "5808:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5822:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5822:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5818:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:6"
																},
																"nativeSrc": "5818:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5818:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5808:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:6"
																}
															]
														},
														{
															"nativeSrc": "5839:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5839:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5869:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5869:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:6"
																},
																"nativeSrc": "5865:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5865:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5843:18:6",
																	"nodeType": "YulTypedName",
																	"src": "5843:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5916:51:6",
																"nodeType": "YulBlock",
																"src": "5916:51:6",
																"statements": [
																	{
																		"nativeSrc": "5930:27:6",
																		"nodeType": "YulAssignment",
																		"src": "5930:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5944:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5944:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5952:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5952:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5940:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5940:3:6"
																			},
																			"nativeSrc": "5940:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5940:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5930:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5896:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5896:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5889:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:6"
																},
																"nativeSrc": "5889:26:6",
																"nodeType": "YulFunctionCall",
																"src": "5889:26:6"
															},
															"nativeSrc": "5886:81:6",
															"nodeType": "YulIf",
															"src": "5886:81:6"
														},
														{
															"body": {
																"nativeSrc": "6019:42:6",
																"nodeType": "YulBlock",
																"src": "6019:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6033:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6033:16:6"
																			},
																			"nativeSrc": "6033:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6033:18:6"
																		},
																		"nativeSrc": "6033:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6033:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5983:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5983:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6006:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6003:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6003:2:6"
																		},
																		"nativeSrc": "6003:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5980:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:6"
																},
																"nativeSrc": "5980:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5980:38:6"
															},
															"nativeSrc": "5977:84:6",
															"nodeType": "YulIf",
															"src": "5977:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5747:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5782:4:6",
														"nodeType": "YulTypedName",
														"src": "5782:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5791:6:6",
														"nodeType": "YulTypedName",
														"src": "5791:6:6",
														"type": ""
													}
												],
												"src": "5747:320:6"
											},
											{
												"body": {
													"nativeSrc": "6138:53:6",
													"nodeType": "YulBlock",
													"src": "6138:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6155:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6155:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6178:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6178:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6160:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6160:17:6"
																		},
																		"nativeSrc": "6160:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6160:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6148:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:6"
																},
																"nativeSrc": "6148:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6148:37:6"
															},
															"nativeSrc": "6148:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6148:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6073:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6126:5:6",
														"nodeType": "YulTypedName",
														"src": "6126:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6133:3:6",
														"nodeType": "YulTypedName",
														"src": "6133:3:6",
														"type": ""
													}
												],
												"src": "6073:118:6"
											},
											{
												"body": {
													"nativeSrc": "6351:288:6",
													"nodeType": "YulBlock",
													"src": "6351:288:6",
													"statements": [
														{
															"nativeSrc": "6361:26:6",
															"nodeType": "YulAssignment",
															"src": "6361:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6373:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6373:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6384:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6384:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6369:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:6"
																},
																"nativeSrc": "6369:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6369:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6361:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6361:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6441:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6441:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6454:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6454:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6465:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6465:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6450:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6450:3:6"
																		},
																		"nativeSrc": "6450:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6450:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6397:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6397:43:6"
																},
																"nativeSrc": "6397:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6397:71:6"
															},
															"nativeSrc": "6397:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6397:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6522:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6522:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6535:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6535:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6546:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6546:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6531:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6531:3:6"
																		},
																		"nativeSrc": "6531:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6531:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6478:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6478:43:6"
																},
																"nativeSrc": "6478:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6478:72:6"
															},
															"nativeSrc": "6478:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6478:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6604:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6604:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6617:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6617:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6628:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6628:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6613:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6613:3:6"
																		},
																		"nativeSrc": "6613:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6613:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6560:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6560:43:6"
																},
																"nativeSrc": "6560:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6560:72:6"
															},
															"nativeSrc": "6560:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6560:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6197:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6307:9:6",
														"nodeType": "YulTypedName",
														"src": "6307:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6319:6:6",
														"nodeType": "YulTypedName",
														"src": "6319:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6327:6:6",
														"nodeType": "YulTypedName",
														"src": "6327:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6335:6:6",
														"nodeType": "YulTypedName",
														"src": "6335:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6346:4:6",
														"nodeType": "YulTypedName",
														"src": "6346:4:6",
														"type": ""
													}
												],
												"src": "6197:442:6"
											},
											{
												"body": {
													"nativeSrc": "6743:124:6",
													"nodeType": "YulBlock",
													"src": "6743:124:6",
													"statements": [
														{
															"nativeSrc": "6753:26:6",
															"nodeType": "YulAssignment",
															"src": "6753:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6765:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6765:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6776:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6776:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6761:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6761:3:6"
																},
																"nativeSrc": "6761:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6761:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6753:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6833:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6833:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6846:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6846:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6857:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6857:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6842:3:6"
																		},
																		"nativeSrc": "6842:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6842:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6789:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6789:43:6"
																},
																"nativeSrc": "6789:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6789:71:6"
															},
															"nativeSrc": "6789:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6789:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6645:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6715:9:6",
														"nodeType": "YulTypedName",
														"src": "6715:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6727:6:6",
														"nodeType": "YulTypedName",
														"src": "6727:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6738:4:6",
														"nodeType": "YulTypedName",
														"src": "6738:4:6",
														"type": ""
													}
												],
												"src": "6645:222:6"
											},
											{
												"body": {
													"nativeSrc": "6901:152:6",
													"nodeType": "YulBlock",
													"src": "6901:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6918:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6918:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6921:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6921:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6911:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:6"
																},
																"nativeSrc": "6911:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6911:88:6"
															},
															"nativeSrc": "6911:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6911:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7015:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7015:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7018:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7018:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7008:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:6"
																},
																"nativeSrc": "7008:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7008:15:6"
															},
															"nativeSrc": "7008:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7008:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7039:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7042:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7032:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:6"
																},
																"nativeSrc": "7032:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7032:15:6"
															},
															"nativeSrc": "7032:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7032:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6873:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6873:180:6"
											},
											{
												"body": {
													"nativeSrc": "7103:147:6",
													"nodeType": "YulBlock",
													"src": "7103:147:6",
													"statements": [
														{
															"nativeSrc": "7113:25:6",
															"nodeType": "YulAssignment",
															"src": "7113:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7136:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7136:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7118:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7118:17:6"
																},
																"nativeSrc": "7118:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7118:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7113:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7113:1:6"
																}
															]
														},
														{
															"nativeSrc": "7147:25:6",
															"nodeType": "YulAssignment",
															"src": "7147:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7170:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7170:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7152:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7152:17:6"
																},
																"nativeSrc": "7152:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7152:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7147:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7147:1:6"
																}
															]
														},
														{
															"nativeSrc": "7181:16:6",
															"nodeType": "YulAssignment",
															"src": "7181:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7192:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7192:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7195:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7195:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7188:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:6"
																},
																"nativeSrc": "7188:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7188:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7221:22:6",
																"nodeType": "YulBlock",
																"src": "7221:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7223:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7223:16:6"
																			},
																			"nativeSrc": "7223:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7223:18:6"
																		},
																		"nativeSrc": "7223:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7223:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7213:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7213:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7216:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7216:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7210:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7210:2:6"
																},
																"nativeSrc": "7210:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7210:10:6"
															},
															"nativeSrc": "7207:36:6",
															"nodeType": "YulIf",
															"src": "7207:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7059:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7090:1:6",
														"nodeType": "YulTypedName",
														"src": "7090:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7093:1:6",
														"nodeType": "YulTypedName",
														"src": "7093:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7099:3:6",
														"nodeType": "YulTypedName",
														"src": "7099:3:6",
														"type": ""
													}
												],
												"src": "7059:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f5ffd5b61009d6101fd565b6040516100aa9190610a68565b60405180910390f35b6100cd60048036038101906100c89190610b19565b61028d565b6040516100da9190610b71565b60405180910390f35b6100eb6102af565b6040516100f89190610b99565b60405180910390f35b61011b60048036038101906101169190610bb2565b6102b8565b6040516101289190610b71565b60405180910390f35b6101396102e6565b6040516101469190610c1d565b60405180910390f35b61016960048036038101906101649190610c36565b6102fb565b6040516101769190610b99565b60405180910390f35b610187610340565b6040516101949190610a68565b60405180910390f35b6101b760048036038101906101b29190610b19565b6103d0565b6040516101c49190610b71565b60405180910390f35b6101e760048036038101906101e29190610c61565b6103f2565b6040516101f49190610b99565b60405180910390f35b60606003805461020c90610ccc565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610ccc565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f5f610297610474565b90506102a481858561047b565b600191505092915050565b5f600254905090565b5f5f6102c2610474565b90506102cf85828561048d565b6102da858585610520565b60019150509392505050565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034f90610ccc565b80601f016020809104026020016040519081016040528092919081815260200182805461037b90610ccc565b80156103c65780601f1061039d576101008083540402835291602001916103c6565b820191905f5260205f20905b8154815290600101906020018083116103a957829003601f168201915b5050505050905090565b5f5f6103da610474565b90506103e7818585610520565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104888383836001610610565b505050565b5f61049884846103f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561051a578181101561050b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050293929190610d0b565b60405180910390fd5b61051984848484035f610610565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610590575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105879190610d40565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610600575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105f79190610d40565b60405180910390fd5b61060b8383836107df565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610680575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106779190610d40565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106e79190610d40565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107d9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107d09190610b99565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361082f578060025f8282546108239190610d86565b925050819055506108fd565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108b8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108af93929190610d0b565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610944578060025f828254039250508190555061098e565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109eb9190610b99565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610a3a826109f8565b610a448185610a02565b9350610a54818560208601610a12565b610a5d81610a20565b840191505092915050565b5f6020820190508181035f830152610a808184610a30565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ab582610a8c565b9050919050565b610ac581610aab565b8114610acf575f5ffd5b50565b5f81359050610ae081610abc565b92915050565b5f819050919050565b610af881610ae6565b8114610b02575f5ffd5b50565b5f81359050610b1381610aef565b92915050565b5f5f60408385031215610b2f57610b2e610a88565b5b5f610b3c85828601610ad2565b9250506020610b4d85828601610b05565b9150509250929050565b5f8115159050919050565b610b6b81610b57565b82525050565b5f602082019050610b845f830184610b62565b92915050565b610b9381610ae6565b82525050565b5f602082019050610bac5f830184610b8a565b92915050565b5f5f5f60608486031215610bc957610bc8610a88565b5b5f610bd686828701610ad2565b9350506020610be786828701610ad2565b9250506040610bf886828701610b05565b9150509250925092565b5f60ff82169050919050565b610c1781610c02565b82525050565b5f602082019050610c305f830184610c0e565b92915050565b5f60208284031215610c4b57610c4a610a88565b5b5f610c5884828501610ad2565b91505092915050565b5f5f60408385031215610c7757610c76610a88565b5b5f610c8485828601610ad2565b9250506020610c9585828601610ad2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610ce357607f821691505b602082108103610cf657610cf5610c9f565b5b50919050565b610d0581610aab565b82525050565b5f606082019050610d1e5f830186610cfc565b610d2b6020830185610b8a565b610d386040830184610b8a565b949350505050565b5f602082019050610d535f830184610cfc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d9082610ae6565b9150610d9b83610ae6565b9250828201905080821115610db357610db2610d59565b5b9291505056fea2646970667358221220eed51594b1d269bdbc8decfbd7ee32168f113301c0d0ea3f3070f8b5b72daf2164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x297 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2C2 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34F SWAP1 PUSH2 0xCCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37B SWAP1 PUSH2 0xCCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3DA PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E7 DUP2 DUP6 DUP6 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x488 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x610 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x498 DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x51A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x50B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x519 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x610 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x590 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x600 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F7 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60B DUP4 DUP4 DUP4 PUSH2 0x7DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x680 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7D9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x823 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8FD JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8B8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x944 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9EB SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3A DUP3 PUSH2 0x9F8 JUMP JUMPDEST PUSH2 0xA44 DUP2 DUP6 PUSH2 0xA02 JUMP JUMPDEST SWAP4 POP PUSH2 0xA54 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA5D DUP2 PUSH2 0xA20 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA80 DUP2 DUP5 PUSH2 0xA30 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAB5 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC5 DUP2 PUSH2 0xAAB JUMP JUMPDEST DUP2 EQ PUSH2 0xACF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAE0 DUP2 PUSH2 0xABC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF8 DUP2 PUSH2 0xAE6 JUMP JUMPDEST DUP2 EQ PUSH2 0xB02 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB13 DUP2 PUSH2 0xAEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB3C DUP6 DUP3 DUP7 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB4D DUP6 DUP3 DUP7 ADD PUSH2 0xB05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6B DUP2 PUSH2 0xB57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB84 PUSH0 DUP4 ADD DUP5 PUSH2 0xB62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB93 DUP2 PUSH2 0xAE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBAC PUSH0 DUP4 ADD DUP5 PUSH2 0xB8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH2 0xBC8 PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD6 DUP7 DUP3 DUP8 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBE7 DUP7 DUP3 DUP8 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBF8 DUP7 DUP3 DUP8 ADD PUSH2 0xB05 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC17 DUP2 PUSH2 0xC02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC30 PUSH0 DUP4 ADD DUP5 PUSH2 0xC0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH2 0xC4A PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC58 DUP5 DUP3 DUP6 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC77 JUMPI PUSH2 0xC76 PUSH2 0xA88 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC84 DUP6 DUP3 DUP7 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC95 DUP6 DUP3 DUP7 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCF6 JUMPI PUSH2 0xCF5 PUSH2 0xC9F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD05 DUP2 PUSH2 0xAAB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD1E PUSH0 DUP4 ADD DUP7 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0xD2B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0xD38 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB8A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD53 PUSH0 DUP4 ADD DUP5 PUSH2 0xCFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD90 DUP3 PUSH2 0xAE6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD9B DUP4 PUSH2 0xAE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDB3 JUMPI PUSH2 0xDB2 PUSH2 0xD59 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNCONTRACT 0xD5 ISZERO SWAP5 0xB1 0xD2 PUSH10 0xBDBC8DECFBD7EE32168F GT CALLER ADD 0xC0 0xD0 0xEA EXTCODEHASH ADDRESS PUSH17 0xF8B5B72DAF2164736F6C634300081E0033 ",
							"sourceMap": "115:394:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;411:96:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;411:96:5:-;461:5;485:15;;;;;;;;;;;478:22;;411:96;:::o;2985:116:1:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8707:128:1:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:474::-;5149:6;5157;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5459:2;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5430:118;5081:474;;;;;:::o;5561:180::-;5609:77;5606:1;5599:88;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;5747:320;5791:6;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:81;;5952:4;5944:6;5940:17;5930:27;;5886:81;6014:2;6006:6;6003:14;5983:18;5980:38;5977:84;;6033:18;;:::i;:::-;5977:84;5798:269;5747:320;;;:::o;6073:118::-;6160:24;6178:5;6160:24;:::i;:::-;6155:3;6148:37;6073:118;;:::o;6197:442::-;6346:4;6384:2;6373:9;6369:18;6361:26;;6397:71;6465:1;6454:9;6450:17;6441:6;6397:71;:::i;:::-;6478:72;6546:2;6535:9;6531:18;6522:6;6478:72;:::i;:::-;6560;6628:2;6617:9;6613:18;6604:6;6560:72;:::i;:::-;6197:442;;;;;;:::o;6645:222::-;6738:4;6776:2;6765:9;6761:18;6753:26;;6789:71;6857:1;6846:9;6842:17;6833:6;6789:71;:::i;:::-;6645:222;;;;:::o;6873:180::-;6921:77;6918:1;6911:88;7018:4;7015:1;7008:15;7042:4;7039:1;7032:15;7059:191;7099:3;7118:20;7136:1;7118:20;:::i;:::-;7113:25;;7152:20;7170:1;7152:20;:::i;:::-;7147:25;;7195:1;7192;7188:9;7181:16;;7216:3;7213:1;7210:10;7207:36;;;7223:18;;:::i;:::-;7207:36;7059:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "713400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2850",
								"decimals()": "2473",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 509,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 509,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 509,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 185,
									"end": 405,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 405,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 405,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 185,
									"end": 405,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 185,
									"end": 405,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 185,
									"end": 405,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 185,
									"end": 405,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 185,
									"end": 405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 185,
									"end": 405,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 285,
									"end": 289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 291,
									"end": 297,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 327,
									"end": 336,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 309,
									"end": 324,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 309,
									"end": 324,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 309,
									"end": 336,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 346,
									"end": 398,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 352,
									"end": 362,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 387,
									"end": 396,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 381,
									"end": 383,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 381,
									"end": 396,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 381,
									"end": 396,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 381,
									"end": 396,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 381,
									"end": 396,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 381,
									"end": 396,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 381,
									"end": 396,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 381,
									"end": 396,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 364,
									"end": 377,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 364,
									"end": 397,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 364,
									"end": 397,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 364,
									"end": 397,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 364,
									"end": 397,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 364,
									"end": 397,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 364,
									"end": 397,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 364,
									"end": 397,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 346,
									"end": 351,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 346,
									"end": 351,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 346,
									"end": 351,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 346,
									"end": 398,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 346,
									"end": 398,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 346,
									"end": 398,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 346,
									"end": 398,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 346,
									"end": 398,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 185,
									"end": 405,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 115,
									"end": 509,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 115,
									"end": 509,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2605,
									"end": 2612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2645,
									"end": 2649,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 2638,
									"end": 2643,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2634,
									"end": 2650,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2623,
									"end": 2650,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2623,
									"end": 2650,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 2749,
									"end": 2754,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2733,
									"end": 2755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2731,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2723,
									"end": 2756,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2770,
									"end": 2771,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 2768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2760,
									"end": 2772,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2662,
									"end": 2780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2872,
									"end": 2878,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2866,
									"end": 2879,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2879,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2857,
									"end": 2879,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 2913,
									"end": 2918,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2888,
									"end": 2919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2786,
									"end": 2925,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2968,
									"end": 2975,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2997,
									"end": 3002,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2986,
									"end": 3002,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2986,
									"end": 3002,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2931,
									"end": 3008,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3105,
									"end": 3110,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3087,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3080,
									"end": 3085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3077,
									"end": 3112,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3126,
									"end": 3127,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3116,
									"end": 3128,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3014,
									"end": 3136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3204,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3230,
									"end": 3236,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3224,
									"end": 3237,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3215,
									"end": 3237,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3215,
									"end": 3237,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3273,
									"end": 3278,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3246,
									"end": 3279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3142,
									"end": 3285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3291,
									"end": 4453,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3291,
									"end": 4453,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3412,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3414,
									"end": 3420,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3422,
									"end": 3428,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3430,
									"end": 3436,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3479,
									"end": 3482,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3467,
									"end": 3476,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3458,
									"end": 3465,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3454,
									"end": 3477,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3450,
									"end": 3483,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3447,
									"end": 3567,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3447,
									"end": 3567,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 3447,
									"end": 3567,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3486,
									"end": 3565,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 3486,
									"end": 3565,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3486,
									"end": 3565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3486,
									"end": 3565,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 3486,
									"end": 3565,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3447,
									"end": 3567,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 3447,
									"end": 3567,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3627,
									"end": 3628,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3616,
									"end": 3625,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3612,
									"end": 3629,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3606,
									"end": 3630,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3657,
									"end": 3675,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3649,
									"end": 3655,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3646,
									"end": 3676,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3643,
									"end": 3760,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3643,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 3643,
									"end": 3760,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3679,
									"end": 3758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 3679,
									"end": 3758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3679,
									"end": 3758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3679,
									"end": 3758,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 3679,
									"end": 3758,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3643,
									"end": 3760,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 3643,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3784,
									"end": 3858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 3850,
									"end": 3857,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3841,
									"end": 3847,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3830,
									"end": 3839,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3826,
									"end": 3848,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3784,
									"end": 3858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3784,
									"end": 3858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3784,
									"end": 3858,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 3784,
									"end": 3858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3858,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3858,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3577,
									"end": 3868,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3928,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3917,
									"end": 3926,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3913,
									"end": 3931,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3907,
									"end": 3932,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3959,
									"end": 3977,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3951,
									"end": 3957,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3948,
									"end": 3978,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 4062,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 4062,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 3945,
									"end": 4062,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3981,
									"end": 4060,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 3981,
									"end": 4060,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3981,
									"end": 4060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3981,
									"end": 4060,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 3981,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 4062,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 3945,
									"end": 4062,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4086,
									"end": 4160,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 4152,
									"end": 4159,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4143,
									"end": 4149,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4132,
									"end": 4141,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4150,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4086,
									"end": 4160,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 4086,
									"end": 4160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4086,
									"end": 4160,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 4086,
									"end": 4160,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4160,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4076,
									"end": 4160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3878,
									"end": 4170,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4209,
									"end": 4211,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4235,
									"end": 4297,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4289,
									"end": 4296,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4280,
									"end": 4286,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4269,
									"end": 4278,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4265,
									"end": 4287,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4235,
									"end": 4297,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4235,
									"end": 4297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4235,
									"end": 4297,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 4235,
									"end": 4297,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4225,
									"end": 4297,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4225,
									"end": 4297,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4180,
									"end": 4307,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4346,
									"end": 4348,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4372,
									"end": 4436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4428,
									"end": 4435,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4419,
									"end": 4425,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4408,
									"end": 4417,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 4372,
									"end": 4436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4436,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4372,
									"end": 4436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4362,
									"end": 4436,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4362,
									"end": 4436,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4317,
									"end": 4446,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3291,
									"end": 4453,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3291,
									"end": 4453,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3291,
									"end": 4453,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3291,
									"end": 4453,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3291,
									"end": 4453,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3291,
									"end": 4453,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3291,
									"end": 4453,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3291,
									"end": 4453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4459,
									"end": 4558,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 4459,
									"end": 4558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4511,
									"end": 4517,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4545,
									"end": 4550,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4539,
									"end": 4551,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4529,
									"end": 4551,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4529,
									"end": 4551,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4459,
									"end": 4558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4459,
									"end": 4558,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4459,
									"end": 4558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4459,
									"end": 4558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4564,
									"end": 4744,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 4564,
									"end": 4744,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4612,
									"end": 4689,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4609,
									"end": 4610,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4602,
									"end": 4690,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4709,
									"end": 4713,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4706,
									"end": 4707,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4699,
									"end": 4714,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4733,
									"end": 4737,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4730,
									"end": 4731,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4723,
									"end": 4738,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4750,
									"end": 5070,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4750,
									"end": 5070,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 4800,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4832,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4825,
									"end": 4829,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4821,
									"end": 4833,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4811,
									"end": 4833,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4811,
									"end": 4833,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4878,
									"end": 4879,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4872,
									"end": 4876,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4868,
									"end": 4880,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4899,
									"end": 4917,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4889,
									"end": 4970,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 4889,
									"end": 4970,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4955,
									"end": 4959,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4947,
									"end": 4953,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4943,
									"end": 4960,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4933,
									"end": 4960,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4933,
									"end": 4960,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4889,
									"end": 4970,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 4889,
									"end": 4970,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5019,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5009,
									"end": 5015,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5006,
									"end": 5020,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4986,
									"end": 5004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4983,
									"end": 5021,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4980,
									"end": 5064,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 4980,
									"end": 5064,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5036,
									"end": 5054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 5036,
									"end": 5054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5036,
									"end": 5054,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5036,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4980,
									"end": 5064,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 4980,
									"end": 5064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4801,
									"end": 5070,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4750,
									"end": 5070,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4750,
									"end": 5070,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4750,
									"end": 5070,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4750,
									"end": 5070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5217,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 5076,
									"end": 5217,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5148,
									"end": 5151,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5171,
									"end": 5174,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5168,
									"end": 5169,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5161,
									"end": 5175,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5205,
									"end": 5209,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5202,
									"end": 5203,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5192,
									"end": 5210,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5184,
									"end": 5210,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5184,
									"end": 5210,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5217,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5217,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5217,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5217,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5223,
									"end": 5316,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 5223,
									"end": 5316,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5260,
									"end": 5266,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5307,
									"end": 5309,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5302,
									"end": 5304,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5295,
									"end": 5300,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5291,
									"end": 5305,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5287,
									"end": 5310,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5277,
									"end": 5310,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5277,
									"end": 5310,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5223,
									"end": 5316,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5223,
									"end": 5316,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5223,
									"end": 5316,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5223,
									"end": 5316,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5322,
									"end": 5429,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5322,
									"end": 5429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5366,
									"end": 5374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5416,
									"end": 5421,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5410,
									"end": 5414,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5406,
									"end": 5422,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5385,
									"end": 5422,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5385,
									"end": 5422,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5322,
									"end": 5429,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5322,
									"end": 5429,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5322,
									"end": 5429,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5322,
									"end": 5429,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5322,
									"end": 5429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5828,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 5435,
									"end": 5828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5504,
									"end": 5510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5554,
									"end": 5555,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5542,
									"end": 5552,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5538,
									"end": 5556,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5577,
									"end": 5674,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5607,
									"end": 5673,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5596,
									"end": 5605,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5577,
									"end": 5674,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5577,
									"end": 5674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5577,
									"end": 5674,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5577,
									"end": 5674,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5695,
									"end": 5734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5725,
									"end": 5733,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5714,
									"end": 5723,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5695,
									"end": 5734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 5695,
									"end": 5734,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5695,
									"end": 5734,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5695,
									"end": 5734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5683,
									"end": 5734,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5683,
									"end": 5734,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5767,
									"end": 5771,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5763,
									"end": 5772,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5756,
									"end": 5761,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5752,
									"end": 5773,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5743,
									"end": 5773,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5743,
									"end": 5773,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5816,
									"end": 5820,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5806,
									"end": 5814,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5802,
									"end": 5821,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5795,
									"end": 5800,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5792,
									"end": 5822,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5822,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5511,
									"end": 5828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5511,
									"end": 5828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5828,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5834,
									"end": 5894,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 5834,
									"end": 5894,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5862,
									"end": 5865,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5883,
									"end": 5888,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5876,
									"end": 5888,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5876,
									"end": 5888,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5834,
									"end": 5894,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5834,
									"end": 5894,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5834,
									"end": 5894,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5834,
									"end": 5894,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5900,
									"end": 6042,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 5900,
									"end": 6042,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5950,
									"end": 5959,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5983,
									"end": 6036,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6001,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 6010,
									"end": 6034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6028,
									"end": 6033,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6010,
									"end": 6034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 6010,
									"end": 6034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6010,
									"end": 6034,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6010,
									"end": 6034,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6001,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 6001,
									"end": 6035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6001,
									"end": 6035,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 6001,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5983,
									"end": 6036,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5983,
									"end": 6036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5983,
									"end": 6036,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 5983,
									"end": 6036,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5970,
									"end": 6036,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5970,
									"end": 6036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5900,
									"end": 6042,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5900,
									"end": 6042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5900,
									"end": 6042,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5900,
									"end": 6042,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6048,
									"end": 6123,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6048,
									"end": 6123,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6091,
									"end": 6094,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6112,
									"end": 6117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6117,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6117,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6048,
									"end": 6123,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6048,
									"end": 6123,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6048,
									"end": 6123,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6048,
									"end": 6123,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6129,
									"end": 6398,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 6129,
									"end": 6398,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6239,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6270,
									"end": 6277,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6239,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 6239,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6239,
									"end": 6278,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6239,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6300,
									"end": 6391,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6349,
									"end": 6390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6373,
									"end": 6389,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6349,
									"end": 6390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 6349,
									"end": 6390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6349,
									"end": 6390,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6349,
									"end": 6390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6341,
									"end": 6347,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6334,
									"end": 6338,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6328,
									"end": 6339,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6300,
									"end": 6391,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 6300,
									"end": 6391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6300,
									"end": 6391,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6300,
									"end": 6391,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6294,
									"end": 6298,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6287,
									"end": 6392,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6398,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6129,
									"end": 6398,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6129,
									"end": 6398,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6129,
									"end": 6398,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6129,
									"end": 6398,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6404,
									"end": 6477,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 6404,
									"end": 6477,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6449,
									"end": 6452,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6470,
									"end": 6471,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6463,
									"end": 6471,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6463,
									"end": 6471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6404,
									"end": 6477,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6404,
									"end": 6477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6483,
									"end": 6672,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 6483,
									"end": 6672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6560,
									"end": 6592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 6560,
									"end": 6592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 6560,
									"end": 6592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6560,
									"end": 6592,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 6560,
									"end": 6592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6601,
									"end": 6666,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 6659,
									"end": 6665,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6651,
									"end": 6657,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6645,
									"end": 6649,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6601,
									"end": 6666,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 6601,
									"end": 6666,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6601,
									"end": 6666,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 6601,
									"end": 6666,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6536,
									"end": 6672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6483,
									"end": 6672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6483,
									"end": 6672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6483,
									"end": 6672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6678,
									"end": 6864,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 6678,
									"end": 6864,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6738,
									"end": 6858,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 6738,
									"end": 6858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6755,
									"end": 6758,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6748,
									"end": 6753,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6745,
									"end": 6759,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6738,
									"end": 6858,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6738,
									"end": 6858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 6738,
									"end": 6858,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6809,
									"end": 6848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6839,
									"end": 6844,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6809,
									"end": 6848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 6809,
									"end": 6848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6809,
									"end": 6848,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 6809,
									"end": 6848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6782,
									"end": 6783,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6775,
									"end": 6780,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6771,
									"end": 6784,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6762,
									"end": 6784,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6762,
									"end": 6784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6738,
									"end": 6858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 6738,
									"end": 6858,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6738,
									"end": 6858,
									"name": "tag",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 6738,
									"end": 6858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6678,
									"end": 6864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6678,
									"end": 6864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6678,
									"end": 6864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6870,
									"end": 7413,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 6870,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6971,
									"end": 6973,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6966,
									"end": 6969,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6963,
									"end": 6974,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6960,
									"end": 7406,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6960,
									"end": 7406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 6960,
									"end": 7406,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7005,
									"end": 7043,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 7037,
									"end": 7042,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7005,
									"end": 7043,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 7005,
									"end": 7043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7005,
									"end": 7043,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 7005,
									"end": 7043,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7089,
									"end": 7118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7107,
									"end": 7117,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7089,
									"end": 7118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 7089,
									"end": 7118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7089,
									"end": 7118,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7089,
									"end": 7118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7079,
									"end": 7087,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7075,
									"end": 7119,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7272,
									"end": 7274,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7260,
									"end": 7270,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7257,
									"end": 7275,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7254,
									"end": 7303,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7254,
									"end": 7303,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 7254,
									"end": 7303,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7293,
									"end": 7301,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7278,
									"end": 7301,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7278,
									"end": 7301,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7254,
									"end": 7303,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 7254,
									"end": 7303,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7316,
									"end": 7396,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 7372,
									"end": 7394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 7390,
									"end": 7393,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7372,
									"end": 7394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 7372,
									"end": 7394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7372,
									"end": 7394,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 7372,
									"end": 7394,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7362,
									"end": 7370,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7358,
									"end": 7395,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7345,
									"end": 7356,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7316,
									"end": 7396,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 7316,
									"end": 7396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7316,
									"end": 7396,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 7316,
									"end": 7396,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6975,
									"end": 7406,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6975,
									"end": 7406,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6960,
									"end": 7406,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 6960,
									"end": 7406,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6870,
									"end": 7413,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6870,
									"end": 7413,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6870,
									"end": 7413,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6870,
									"end": 7413,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7536,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 7419,
									"end": 7536,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7473,
									"end": 7481,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7523,
									"end": 7528,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7517,
									"end": 7521,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7513,
									"end": 7529,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7492,
									"end": 7529,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7492,
									"end": 7529,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7536,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7536,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7536,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7536,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7419,
									"end": 7536,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7542,
									"end": 7711,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 7542,
									"end": 7711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7586,
									"end": 7592,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7619,
									"end": 7670,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 7667,
									"end": 7668,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7663,
									"end": 7669,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7655,
									"end": 7660,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7652,
									"end": 7653,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7648,
									"end": 7661,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7619,
									"end": 7670,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 7619,
									"end": 7670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7619,
									"end": 7670,
									"name": "tag",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 7619,
									"end": 7670,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7615,
									"end": 7671,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7700,
									"end": 7704,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7694,
									"end": 7698,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7690,
									"end": 7705,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7680,
									"end": 7705,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7680,
									"end": 7705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7593,
									"end": 7711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7542,
									"end": 7711,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7542,
									"end": 7711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7542,
									"end": 7711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7542,
									"end": 7711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7542,
									"end": 7711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 8011,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 7716,
									"end": 8011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7792,
									"end": 7796,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7938,
									"end": 7967,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 7963,
									"end": 7966,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7957,
									"end": 7961,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7938,
									"end": 7967,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 7938,
									"end": 7967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7938,
									"end": 7967,
									"name": "tag",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 7938,
									"end": 7967,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7930,
									"end": 7967,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7930,
									"end": 7967,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8000,
									"end": 8003,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7997,
									"end": 7998,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7993,
									"end": 8004,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7987,
									"end": 7991,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7984,
									"end": 8005,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7976,
									"end": 8005,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7976,
									"end": 8005,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 8011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 8011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 8011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 8011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7716,
									"end": 8011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8016,
									"end": 9411,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 8016,
									"end": 9411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8133,
									"end": 8170,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8166,
									"end": 8169,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8133,
									"end": 8170,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 8133,
									"end": 8170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8133,
									"end": 8170,
									"name": "tag",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8133,
									"end": 8170,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8235,
									"end": 8253,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8227,
									"end": 8233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8224,
									"end": 8254,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8221,
									"end": 8277,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8221,
									"end": 8277,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8221,
									"end": 8277,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8257,
									"end": 8275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 8257,
									"end": 8275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8257,
									"end": 8275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8257,
									"end": 8275,
									"name": "tag",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 8257,
									"end": 8275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8221,
									"end": 8277,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8221,
									"end": 8277,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8301,
									"end": 8339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 8333,
									"end": 8337,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8327,
									"end": 8338,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 8301,
									"end": 8339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 8301,
									"end": 8339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8301,
									"end": 8339,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 8301,
									"end": 8339,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8386,
									"end": 8453,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 8446,
									"end": 8452,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8438,
									"end": 8444,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8432,
									"end": 8436,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8386,
									"end": 8453,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 8386,
									"end": 8453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8386,
									"end": 8453,
									"name": "tag",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 8386,
									"end": 8453,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8480,
									"end": 8481,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8504,
									"end": 8508,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8491,
									"end": 8508,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8491,
									"end": 8508,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8536,
									"end": 8538,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8528,
									"end": 8534,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8525,
									"end": 8539,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8553,
									"end": 8554,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8548,
									"end": 9166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8548,
									"end": 9166,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8548,
									"end": 9166,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 8548,
									"end": 9166,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9210,
									"end": 9211,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9227,
									"end": 9233,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9224,
									"end": 9301,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9224,
									"end": 9301,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9224,
									"end": 9301,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9276,
									"end": 9285,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9271,
									"end": 9274,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 9267,
									"end": 9286,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9261,
									"end": 9287,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9252,
									"end": 9287,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9252,
									"end": 9287,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9224,
									"end": 9301,
									"name": "tag",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9224,
									"end": 9301,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9327,
									"end": 9394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9387,
									"end": 9393,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9380,
									"end": 9385,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9327,
									"end": 9394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 9327,
									"end": 9394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9327,
									"end": 9394,
									"name": "tag",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9327,
									"end": 9394,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9321,
									"end": 9325,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9314,
									"end": 9395,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9183,
									"end": 9405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8518,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 8518,
									"end": 9405,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8548,
									"end": 9166,
									"name": "tag",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 8548,
									"end": 9166,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8600,
									"end": 8604,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8596,
									"end": 8605,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8588,
									"end": 8594,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8606,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8634,
									"end": 8671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 8666,
									"end": 8670,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8634,
									"end": 8671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 8634,
									"end": 8671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8634,
									"end": 8671,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 8634,
									"end": 8671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8693,
									"end": 8694,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8707,
									"end": 8915,
									"name": "tag",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 8707,
									"end": 8915,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8721,
									"end": 8728,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8718,
									"end": 8719,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8715,
									"end": 8729,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8707,
									"end": 8915,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8707,
									"end": 8915,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 8707,
									"end": 8915,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8800,
									"end": 8809,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8795,
									"end": 8798,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8791,
									"end": 8810,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8785,
									"end": 8811,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8777,
									"end": 8783,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8770,
									"end": 8812,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8851,
									"end": 8852,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8843,
									"end": 8849,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8839,
									"end": 8853,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8829,
									"end": 8853,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8829,
									"end": 8853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8898,
									"end": 8900,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8887,
									"end": 8896,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8883,
									"end": 8901,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8870,
									"end": 8901,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8870,
									"end": 8901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8744,
									"end": 8748,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8741,
									"end": 8742,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8737,
									"end": 8749,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8732,
									"end": 8749,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8732,
									"end": 8749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8707,
									"end": 8915,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 8707,
									"end": 8915,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8707,
									"end": 8915,
									"name": "tag",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 8707,
									"end": 8915,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8943,
									"end": 8949,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8934,
									"end": 8941,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8931,
									"end": 8950,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8928,
									"end": 9107,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8928,
									"end": 9107,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 8928,
									"end": 9107,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9001,
									"end": 9010,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8996,
									"end": 8999,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8992,
									"end": 9011,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8986,
									"end": 9012,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9044,
									"end": 9092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9086,
									"end": 9090,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9078,
									"end": 9084,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9074,
									"end": 9091,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9063,
									"end": 9072,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9044,
									"end": 9092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 9044,
									"end": 9092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9044,
									"end": 9092,
									"name": "tag",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 9044,
									"end": 9092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9036,
									"end": 9042,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9029,
									"end": 9093,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8951,
									"end": 9107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8928,
									"end": 9107,
									"name": "tag",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 8928,
									"end": 9107,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9153,
									"end": 9154,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9149,
									"end": 9150,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 9141,
									"end": 9147,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9137,
									"end": 9151,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9133,
									"end": 9155,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9127,
									"end": 9131,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9120,
									"end": 9156,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8555,
									"end": 9166,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8555,
									"end": 9166,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8555,
									"end": 9166,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8518,
									"end": 9405,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 8518,
									"end": 9405,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8518,
									"end": 9405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8108,
									"end": 9411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8108,
									"end": 9411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8108,
									"end": 9411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8016,
									"end": 9411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8016,
									"end": 9411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8016,
									"end": 9411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9417,
									"end": 9597,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 9417,
									"end": 9597,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9465,
									"end": 9542,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9462,
									"end": 9463,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9455,
									"end": 9543,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9562,
									"end": 9566,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 9559,
									"end": 9560,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9552,
									"end": 9567,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9586,
									"end": 9590,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 9583,
									"end": 9584,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9576,
									"end": 9591,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 9603,
									"end": 9705,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 9603,
									"end": 9705,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9645,
									"end": 9653,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9692,
									"end": 9697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9689,
									"end": 9690,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9685,
									"end": 9698,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 9664,
									"end": 9698,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9664,
									"end": 9698,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9603,
									"end": 9705,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9603,
									"end": 9705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9603,
									"end": 9705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9603,
									"end": 9705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9711,
									"end": 10559,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 9711,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9772,
									"end": 9777,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9779,
									"end": 9783,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9803,
									"end": 9809,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9794,
									"end": 9809,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9794,
									"end": 9809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9827,
									"end": 9832,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9818,
									"end": 9832,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9818,
									"end": 9832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9841,
									"end": 10553,
									"name": "tag",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 9841,
									"end": 10553,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9862,
									"end": 9863,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9852,
									"end": 9860,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9849,
									"end": 9864,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9841,
									"end": 10553,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9841,
									"end": 10553,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 9841,
									"end": 10553,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9957,
									"end": 9961,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9952,
									"end": 9955,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9948,
									"end": 9962,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 9942,
									"end": 9946,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 9963,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9936,
									"end": 9986,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9936,
									"end": 9986,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 9936,
									"end": 9986,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9966,
									"end": 9984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 9966,
									"end": 9984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 9966,
									"end": 9984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9966,
									"end": 9984,
									"name": "tag",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 9966,
									"end": 9984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9936,
									"end": 9986,
									"name": "tag",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 9936,
									"end": 9986,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10016,
									"end": 10017,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10006,
									"end": 10014,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10002,
									"end": 10018,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9999,
									"end": 10450,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9999,
									"end": 10450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 9999,
									"end": 10450,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10431,
									"end": 10435,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10429,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10420,
									"end": 10436,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 10411,
									"end": 10436,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10411,
									"end": 10436,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9999,
									"end": 10450,
									"name": "tag",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 9999,
									"end": 10450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10481,
									"end": 10485,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10475,
									"end": 10479,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10471,
									"end": 10486,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 10463,
									"end": 10486,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10463,
									"end": 10486,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10511,
									"end": 10543,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "202"
								},
								{
									"begin": 10534,
									"end": 10542,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10511,
									"end": 10543,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 10511,
									"end": 10543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10511,
									"end": 10543,
									"name": "tag",
									"source": 6,
									"value": "202"
								},
								{
									"begin": 10511,
									"end": 10543,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10499,
									"end": 10543,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 10499,
									"end": 10543,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9841,
									"end": 10553,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 9841,
									"end": 10553,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9841,
									"end": 10553,
									"name": "tag",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 9841,
									"end": 10553,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9711,
									"end": 10559,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9711,
									"end": 10559,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9711,
									"end": 10559,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9711,
									"end": 10559,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9711,
									"end": 10559,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9711,
									"end": 10559,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9711,
									"end": 10559,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9711,
									"end": 10559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 11638,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 10565,
									"end": 11638,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10619,
									"end": 10624,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10810,
									"end": 10818,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10800,
									"end": 10840,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "204"
								},
								{
									"begin": 10800,
									"end": 10840,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10831,
									"end": 10832,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10822,
									"end": 10832,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10822,
									"end": 10832,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10833,
									"end": 10838,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10833,
									"end": 10838,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10800,
									"end": 10840,
									"name": "tag",
									"source": 6,
									"value": "204"
								},
								{
									"begin": 10800,
									"end": 10840,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10859,
									"end": 10863,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10849,
									"end": 10885,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 10849,
									"end": 10885,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10876,
									"end": 10877,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10867,
									"end": 10877,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10867,
									"end": 10877,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10878,
									"end": 10883,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10878,
									"end": 10883,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10849,
									"end": 10885,
									"name": "tag",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 10849,
									"end": 10885,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10945,
									"end": 10949,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10993,
									"end": 10994,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10988,
									"end": 11015,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10988,
									"end": 11015,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 10988,
									"end": 11015,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "207"
								},
								{
									"begin": 10988,
									"end": 11015,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11029,
									"end": 11030,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 11024,
									"end": 11215,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11024,
									"end": 11215,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 11024,
									"end": 11215,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "208"
								},
								{
									"begin": 11024,
									"end": 11215,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10938,
									"end": 11215,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "206"
								},
								{
									"begin": 10938,
									"end": 11215,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10988,
									"end": 11015,
									"name": "tag",
									"source": 6,
									"value": "207"
								},
								{
									"begin": 10988,
									"end": 11015,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11006,
									"end": 11007,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 10997,
									"end": 11007,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10997,
									"end": 11007,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11008,
									"end": 11013,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11008,
									"end": 11013,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 11008,
									"end": 11013,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11024,
									"end": 11215,
									"name": "tag",
									"source": 6,
									"value": "208"
								},
								{
									"begin": 11024,
									"end": 11215,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11069,
									"end": 11072,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 11059,
									"end": 11067,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11056,
									"end": 11073,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 11053,
									"end": 11096,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11053,
									"end": 11096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "209"
								},
								{
									"begin": 11053,
									"end": 11096,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11076,
									"end": 11094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 11076,
									"end": 11094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 11076,
									"end": 11094,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11076,
									"end": 11094,
									"name": "tag",
									"source": 6,
									"value": "210"
								},
								{
									"begin": 11076,
									"end": 11094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11053,
									"end": 11096,
									"name": "tag",
									"source": 6,
									"value": "209"
								},
								{
									"begin": 11053,
									"end": 11096,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11125,
									"end": 11133,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11122,
									"end": 11123,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 11118,
									"end": 11134,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 11109,
									"end": 11134,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11109,
									"end": 11134,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11160,
									"end": 11163,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11153,
									"end": 11158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11150,
									"end": 11164,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 11147,
									"end": 11187,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11147,
									"end": 11187,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "211"
								},
								{
									"begin": 11147,
									"end": 11187,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11167,
									"end": 11185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "212"
								},
								{
									"begin": 11167,
									"end": 11185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 11167,
									"end": 11185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11167,
									"end": 11185,
									"name": "tag",
									"source": 6,
									"value": "212"
								},
								{
									"begin": 11167,
									"end": 11185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11147,
									"end": 11187,
									"name": "tag",
									"source": 6,
									"value": "211"
								},
								{
									"begin": 11147,
									"end": 11187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11200,
									"end": 11205,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11200,
									"end": 11205,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 11200,
									"end": 11205,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10938,
									"end": 11215,
									"name": "tag",
									"source": 6,
									"value": "206"
								},
								{
									"begin": 10938,
									"end": 11215,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10938,
									"end": 11215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11324,
									"end": 11326,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 11314,
									"end": 11322,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11311,
									"end": 11327,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 11305,
									"end": 11308,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 11299,
									"end": 11303,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11296,
									"end": 11309,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 11292,
									"end": 11328,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 11274,
									"end": 11276,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 11264,
									"end": 11272,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11261,
									"end": 11277,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 11256,
									"end": 11258,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 11250,
									"end": 11254,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11247,
									"end": 11259,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 11243,
									"end": 11278,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 11227,
									"end": 11338,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 11224,
									"end": 11470,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11224,
									"end": 11470,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "213"
								},
								{
									"begin": 11224,
									"end": 11470,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11380,
									"end": 11388,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11374,
									"end": 11378,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11370,
									"end": 11389,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 11361,
									"end": 11389,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11361,
									"end": 11389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11415,
									"end": 11418,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11408,
									"end": 11413,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11405,
									"end": 11419,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 11402,
									"end": 11442,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11402,
									"end": 11442,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "214"
								},
								{
									"begin": 11402,
									"end": 11442,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11422,
									"end": 11440,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "215"
								},
								{
									"begin": 11422,
									"end": 11440,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 11422,
									"end": 11440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11422,
									"end": 11440,
									"name": "tag",
									"source": 6,
									"value": "215"
								},
								{
									"begin": 11422,
									"end": 11440,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11402,
									"end": 11442,
									"name": "tag",
									"source": 6,
									"value": "214"
								},
								{
									"begin": 11402,
									"end": 11442,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11455,
									"end": 11460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 11455,
									"end": 11460,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11224,
									"end": 11470,
									"name": "tag",
									"source": 6,
									"value": "213"
								},
								{
									"begin": 11224,
									"end": 11470,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11495,
									"end": 11537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "216"
								},
								{
									"begin": 11533,
									"end": 11536,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11523,
									"end": 11531,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11517,
									"end": 11521,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11514,
									"end": 11515,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 11495,
									"end": 11537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 11495,
									"end": 11537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11495,
									"end": 11537,
									"name": "tag",
									"source": 6,
									"value": "216"
								},
								{
									"begin": 11495,
									"end": 11537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11480,
									"end": 11537,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11480,
									"end": 11537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11480,
									"end": 11537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11480,
									"end": 11537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11569,
									"end": 11573,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11564,
									"end": 11567,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11560,
									"end": 11574,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 11553,
									"end": 11558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11550,
									"end": 11575,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 11547,
									"end": 11598,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 11547,
									"end": 11598,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "217"
								},
								{
									"begin": 11547,
									"end": 11598,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 11578,
									"end": 11596,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "218"
								},
								{
									"begin": 11578,
									"end": 11596,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 11578,
									"end": 11596,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11578,
									"end": 11596,
									"name": "tag",
									"source": 6,
									"value": "218"
								},
								{
									"begin": 11578,
									"end": 11596,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11547,
									"end": 11598,
									"name": "tag",
									"source": 6,
									"value": "217"
								},
								{
									"begin": 11547,
									"end": 11598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11627,
									"end": 11631,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11620,
									"end": 11625,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11616,
									"end": 11632,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 11607,
									"end": 11632,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11607,
									"end": 11632,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 11638,
									"name": "tag",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 10565,
									"end": 11638,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 11638,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 11638,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 11638,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 11638,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 11638,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10565,
									"end": 11638,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11644,
									"end": 11925,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 11644,
									"end": 11925,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11702,
									"end": 11707,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11726,
									"end": 11749,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "220"
								},
								{
									"begin": 11744,
									"end": 11748,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11726,
									"end": 11749,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 11726,
									"end": 11749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11726,
									"end": 11749,
									"name": "tag",
									"source": 6,
									"value": "220"
								},
								{
									"begin": 11726,
									"end": 11749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11718,
									"end": 11749,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11718,
									"end": 11749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11770,
									"end": 11795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "221"
								},
								{
									"begin": 11786,
									"end": 11794,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11770,
									"end": 11795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 11770,
									"end": 11795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11770,
									"end": 11795,
									"name": "tag",
									"source": 6,
									"value": "221"
								},
								{
									"begin": 11770,
									"end": 11795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11758,
									"end": 11795,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11758,
									"end": 11795,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11814,
									"end": 11918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "222"
								},
								{
									"begin": 11851,
									"end": 11917,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11841,
									"end": 11849,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11835,
									"end": 11839,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11814,
									"end": 11918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 11814,
									"end": 11918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11814,
									"end": 11918,
									"name": "tag",
									"source": 6,
									"value": "222"
								},
								{
									"begin": 11814,
									"end": 11918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11805,
									"end": 11918,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11805,
									"end": 11918,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11644,
									"end": 11925,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11644,
									"end": 11925,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11644,
									"end": 11925,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11644,
									"end": 11925,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11644,
									"end": 11925,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11931,
									"end": 12341,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 11931,
									"end": 12341,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11971,
									"end": 11978,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11994,
									"end": 12014,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "224"
								},
								{
									"begin": 12012,
									"end": 12013,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11994,
									"end": 12014,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 11994,
									"end": 12014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11994,
									"end": 12014,
									"name": "tag",
									"source": 6,
									"value": "224"
								},
								{
									"begin": 11994,
									"end": 12014,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11989,
									"end": 12014,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11989,
									"end": 12014,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12028,
									"end": 12048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "225"
								},
								{
									"begin": 12046,
									"end": 12047,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12028,
									"end": 12048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 12028,
									"end": 12048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12028,
									"end": 12048,
									"name": "tag",
									"source": 6,
									"value": "225"
								},
								{
									"begin": 12028,
									"end": 12048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12023,
									"end": 12048,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12023,
									"end": 12048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12083,
									"end": 12084,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12080,
									"end": 12081,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12076,
									"end": 12085,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 12105,
									"end": 12135,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "226"
								},
								{
									"begin": 12123,
									"end": 12134,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 12105,
									"end": 12135,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 12105,
									"end": 12135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12105,
									"end": 12135,
									"name": "tag",
									"source": 6,
									"value": "226"
								},
								{
									"begin": 12105,
									"end": 12135,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12094,
									"end": 12135,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12094,
									"end": 12135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12284,
									"end": 12285,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12275,
									"end": 12282,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12271,
									"end": 12286,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 12268,
									"end": 12269,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 12265,
									"end": 12287,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 12245,
									"end": 12246,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12238,
									"end": 12247,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 12218,
									"end": 12301,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 12195,
									"end": 12334,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "227"
								},
								{
									"begin": 12195,
									"end": 12334,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 12314,
									"end": 12332,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "228"
								},
								{
									"begin": 12314,
									"end": 12332,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 12314,
									"end": 12332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12314,
									"end": 12332,
									"name": "tag",
									"source": 6,
									"value": "228"
								},
								{
									"begin": 12314,
									"end": 12332,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12195,
									"end": 12334,
									"name": "tag",
									"source": 6,
									"value": "227"
								},
								{
									"begin": 12195,
									"end": 12334,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11979,
									"end": 12341,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11931,
									"end": 12341,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11931,
									"end": 12341,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11931,
									"end": 12341,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11931,
									"end": 12341,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11931,
									"end": 12341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12347,
									"end": 12473,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 12347,
									"end": 12473,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12384,
									"end": 12391,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12424,
									"end": 12466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12417,
									"end": 12422,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12413,
									"end": 12467,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 12402,
									"end": 12467,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12402,
									"end": 12467,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12347,
									"end": 12473,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12347,
									"end": 12473,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12347,
									"end": 12473,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12347,
									"end": 12473,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12479,
									"end": 12575,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 12479,
									"end": 12575,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12516,
									"end": 12523,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12545,
									"end": 12569,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "231"
								},
								{
									"begin": 12563,
									"end": 12568,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12545,
									"end": 12569,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 12545,
									"end": 12569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12545,
									"end": 12569,
									"name": "tag",
									"source": 6,
									"value": "231"
								},
								{
									"begin": 12545,
									"end": 12569,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12534,
									"end": 12569,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12534,
									"end": 12569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12479,
									"end": 12575,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12479,
									"end": 12575,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12479,
									"end": 12575,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12479,
									"end": 12575,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12581,
									"end": 12699,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 12581,
									"end": 12699,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12668,
									"end": 12692,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "233"
								},
								{
									"begin": 12686,
									"end": 12691,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 12668,
									"end": 12692,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 12668,
									"end": 12692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12668,
									"end": 12692,
									"name": "tag",
									"source": 6,
									"value": "233"
								},
								{
									"begin": 12668,
									"end": 12692,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12663,
									"end": 12666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12656,
									"end": 12693,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 12581,
									"end": 12699,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12581,
									"end": 12699,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12581,
									"end": 12699,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12705,
									"end": 12927,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 12705,
									"end": 12927,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12798,
									"end": 12802,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12836,
									"end": 12838,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 12825,
									"end": 12834,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12821,
									"end": 12839,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12813,
									"end": 12839,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 12813,
									"end": 12839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12849,
									"end": 12920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "235"
								},
								{
									"begin": 12917,
									"end": 12918,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12906,
									"end": 12915,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 12902,
									"end": 12919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 12893,
									"end": 12899,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 12849,
									"end": 12920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 12849,
									"end": 12920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12849,
									"end": 12920,
									"name": "tag",
									"source": 6,
									"value": "235"
								},
								{
									"begin": 12849,
									"end": 12920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12705,
									"end": 12927,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12705,
									"end": 12927,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12705,
									"end": 12927,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12705,
									"end": 12927,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12705,
									"end": 12927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12933,
									"end": 13124,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 12933,
									"end": 13124,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12973,
									"end": 12976,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 12992,
									"end": 13012,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "237"
								},
								{
									"begin": 13010,
									"end": 13011,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 12992,
									"end": 13012,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 12992,
									"end": 13012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 12992,
									"end": 13012,
									"name": "tag",
									"source": 6,
									"value": "237"
								},
								{
									"begin": 12992,
									"end": 13012,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12987,
									"end": 13012,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12987,
									"end": 13012,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13026,
									"end": 13046,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "238"
								},
								{
									"begin": 13044,
									"end": 13045,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13026,
									"end": 13046,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 13026,
									"end": 13046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13026,
									"end": 13046,
									"name": "tag",
									"source": 6,
									"value": "238"
								},
								{
									"begin": 13026,
									"end": 13046,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13021,
									"end": 13046,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 13021,
									"end": 13046,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13069,
									"end": 13070,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13066,
									"end": 13067,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13062,
									"end": 13071,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13055,
									"end": 13071,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 13055,
									"end": 13071,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13090,
									"end": 13093,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 13087,
									"end": 13088,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13084,
									"end": 13094,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 13081,
									"end": 13117,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 13081,
									"end": 13117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "239"
								},
								{
									"begin": 13081,
									"end": 13117,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 13097,
									"end": 13115,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "240"
								},
								{
									"begin": 13097,
									"end": 13115,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 13097,
									"end": 13115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13097,
									"end": 13115,
									"name": "tag",
									"source": 6,
									"value": "240"
								},
								{
									"begin": 13097,
									"end": 13115,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13081,
									"end": 13117,
									"name": "tag",
									"source": 6,
									"value": "239"
								},
								{
									"begin": 13081,
									"end": 13117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 12933,
									"end": 13124,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 12933,
									"end": 13124,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 12933,
									"end": 13124,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12933,
									"end": 13124,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 12933,
									"end": 13124,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13130,
									"end": 13248,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 13130,
									"end": 13248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13217,
									"end": 13241,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "242"
								},
								{
									"begin": 13235,
									"end": 13240,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 13217,
									"end": 13241,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 13217,
									"end": 13241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13217,
									"end": 13241,
									"name": "tag",
									"source": 6,
									"value": "242"
								},
								{
									"begin": 13217,
									"end": 13241,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13212,
									"end": 13215,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13205,
									"end": 13242,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 13130,
									"end": 13248,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13130,
									"end": 13248,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13130,
									"end": 13248,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13254,
									"end": 13696,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 13254,
									"end": 13696,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13403,
									"end": 13407,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13441,
									"end": 13443,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 13430,
									"end": 13439,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13426,
									"end": 13444,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13418,
									"end": 13444,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 13418,
									"end": 13444,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13454,
									"end": 13525,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "244"
								},
								{
									"begin": 13522,
									"end": 13523,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13511,
									"end": 13520,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13507,
									"end": 13524,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13498,
									"end": 13504,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 13454,
									"end": 13525,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 13454,
									"end": 13525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13454,
									"end": 13525,
									"name": "tag",
									"source": 6,
									"value": "244"
								},
								{
									"begin": 13454,
									"end": 13525,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13535,
									"end": 13607,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "245"
								},
								{
									"begin": 13603,
									"end": 13605,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 13592,
									"end": 13601,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13588,
									"end": 13606,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13579,
									"end": 13585,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 13535,
									"end": 13607,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 13535,
									"end": 13607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13535,
									"end": 13607,
									"name": "tag",
									"source": 6,
									"value": "245"
								},
								{
									"begin": 13535,
									"end": 13607,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13617,
									"end": 13689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "246"
								},
								{
									"begin": 13685,
									"end": 13687,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 13674,
									"end": 13683,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13670,
									"end": 13688,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13661,
									"end": 13667,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 13617,
									"end": 13689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 13617,
									"end": 13689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13617,
									"end": 13689,
									"name": "tag",
									"source": 6,
									"value": "246"
								},
								{
									"begin": 13617,
									"end": 13689,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13254,
									"end": 13696,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 13254,
									"end": 13696,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 13254,
									"end": 13696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13254,
									"end": 13696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13254,
									"end": 13696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13254,
									"end": 13696,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13254,
									"end": 13696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13702,
									"end": 13924,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 13702,
									"end": 13924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13795,
									"end": 13799,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13833,
									"end": 13835,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 13822,
									"end": 13831,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 13818,
									"end": 13836,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13810,
									"end": 13836,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 13810,
									"end": 13836,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13846,
									"end": 13917,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "248"
								},
								{
									"begin": 13914,
									"end": 13915,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 13903,
									"end": 13912,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 13899,
									"end": 13916,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 13890,
									"end": 13896,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 13846,
									"end": 13917,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 13846,
									"end": 13917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 13846,
									"end": 13917,
									"name": "tag",
									"source": 6,
									"value": "248"
								},
								{
									"begin": 13846,
									"end": 13917,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 13702,
									"end": 13924,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 13702,
									"end": 13924,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 13702,
									"end": 13924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13702,
									"end": 13924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 13702,
									"end": 13924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 115,
									"end": 509,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 115,
									"end": 509,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 115,
									"end": 509,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 509,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 115,
									"end": 509,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 509,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 509,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 115,
									"end": 509,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 509,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eed51594b1d269bdbc8decfbd7ee32168f113301c0d0ea3f3070f8b5b72daf2164736f6c634300081e0033",
									".code": [
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 509,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 411,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 411,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 411,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 411,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 411,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 411,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 411,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 411,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 507,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 411,
											"end": 507,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 411,
											"end": 507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 461,
											"end": 466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 500,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 485,
											"end": 500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 500,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 485,
											"end": 500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 500,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 485,
											"end": 500,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 485,
											"end": 500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 500,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 485,
											"end": 500,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 485,
											"end": 500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 478,
											"end": 500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 478,
											"end": 500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5686,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5830,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6018,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 6033,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6178,
											"end": 6183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6160,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6373,
											"end": 6382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6465,
											"end": 6466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6463,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6447,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6397,
											"end": 6468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6478,
											"end": 6550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6617,
											"end": 6626,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6604,
											"end": 6610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6560,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6765,
											"end": 6774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6753,
											"end": 6779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6789,
											"end": 6860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6921,
											"end": 6998,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6999,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7042,
											"end": 7046,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7118,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7152,
											"end": 7172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7195,
											"end": 7196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7188,
											"end": 7197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7210,
											"end": 7220,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7223,
											"end": 7241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token.sol\":\"TestToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"token.sol\":{\"keccak256\":\"0x3ca963a5444cdf1478bf39de4a82113271826bfbcdc524c8a8027483e453201f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eef8779ab4549791dffae73fd413c1fc637bbfb83062204e4e17b304f27d804f\",\"dweb:/ipfs/QmdZcXA7X5CaUnNTB4hAYUiHBVdQrDBWaC2jXuLK2pJ8JY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "token.sol:TestToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "token.sol:TestToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "token.sol:TestToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "token.sol:TestToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "token.sol:TestToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 792,
								"contract": "token.sol:TestToken",
								"label": "_customDecimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"token.sol": {
				"ast": {
					"absolutePath": "token.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"TestToken": [
							833
						]
					},
					"id": 834,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 834,
							"sourceUnit": 652,
							"src": "58:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"137:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "137:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "137:5:5"
								}
							],
							"canonicalName": "TestToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 833,
							"linearizedBaseContracts": [
								833,
								651,
								41,
								755,
								729,
								785
							],
							"name": "TestToken",
							"nameLocation": "124:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "_customDecimals",
									"nameLocation": "163:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 833,
									"src": "149:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 791,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "149:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "299:106:5",
										"statements": [
											{
												"expression": {
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 807,
														"name": "_customDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "309:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 808,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "327:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "309:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "309:27:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 812,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "352:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "356:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "352:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "364:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "381:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"id": 816,
																			"name": "decimals_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 798,
																			"src": "387:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "381:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 818,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "380:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "364:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 811,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "346:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "346:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "346:52:5"
											}
										]
									},
									"id": 823,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 803,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 794,
													"src": "285:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 804,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 796,
													"src": "291:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 805,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 802,
												"name": "ERC20",
												"nameLocations": [
													"279:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "279:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "279:19:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "211:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "197:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "197:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "217:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 795,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "217:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "245:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "239:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 797,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "239:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "264:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "256:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "196:82:5"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:0:5"
									},
									"scope": 833,
									"src": "185:220:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										215
									],
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "468:39:5",
										"statements": [
											{
												"expression": {
													"id": 829,
													"name": "_customDecimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 792,
													"src": "485:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 828,
												"id": 830,
												"nodeType": "Return",
												"src": "478:22:5"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "420:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 825,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "443:8:5"
									},
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "428:2:5"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "461:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 826,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "461:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:7:5"
									},
									"scope": 833,
									"src": "411:96:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 834,
							"src": "115:394:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:478:5"
				},
				"id": 5
			}
		}
	}
}